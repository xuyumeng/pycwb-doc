Search.setIndex({"docnames": ["credit", "index", "install", "mod_cwb", "modules", "package", "pycwb", "pycwb.config", "pycwb.constants", "pycwb.messenger", "pycwb.modules", "pycwb.modules.autoencoder", "pycwb.modules.catalog", "pycwb.modules.coherence", "pycwb.modules.cwb_conversions", "pycwb.modules.data_conditioning", "pycwb.modules.job_segment", "pycwb.modules.likelihood", "pycwb.modules.logger", "pycwb.modules.multi_resolution_wdm", "pycwb.modules.plot", "pycwb.modules.read_data", "pycwb.modules.reconstruction", "pycwb.modules.sparse_series", "pycwb.modules.super_cluster", "pycwb.modules.web_viewer", "pycwb.types", "pycwb.utils", "tutorial_batch_inj", "tutorial_customized_wf_gen", "tutorial_injection", "tutorial_multi_injection", "tutorial_search", "tutorials"], "filenames": ["credit.rst", "index.rst", "install.rst", "mod_cwb.rst", "modules.rst", "package.rst", "pycwb.rst", "pycwb.config.rst", "pycwb.constants.rst", "pycwb.messenger.rst", "pycwb.modules.rst", "pycwb.modules.autoencoder.rst", "pycwb.modules.catalog.rst", "pycwb.modules.coherence.rst", "pycwb.modules.cwb_conversions.rst", "pycwb.modules.data_conditioning.rst", "pycwb.modules.job_segment.rst", "pycwb.modules.likelihood.rst", "pycwb.modules.logger.rst", "pycwb.modules.multi_resolution_wdm.rst", "pycwb.modules.plot.rst", "pycwb.modules.read_data.rst", "pycwb.modules.reconstruction.rst", "pycwb.modules.sparse_series.rst", "pycwb.modules.super_cluster.rst", "pycwb.modules.web_viewer.rst", "pycwb.types.rst", "pycwb.utils.rst", "tutorial_batch_inj.rst", "tutorial_customized_wf_gen.rst", "tutorial_injection.rst", "tutorial_multi_injection.rst", "tutorial_search.rst", "tutorials.rst"], "titles": ["Use of pycWB in Scientific Publications", "Welcome to pycWB\u2019s documentation!", "Installation Guide", "Notes on modifications of cWB core code", "pycwb", "pycWB", "pycwb package", "pycwb.config package", "pycwb.constants package", "pycwb.messenger package", "pycwb.modules package", "pycwb.modules.autoencoder package", "pycwb.modules.catalog package", "pycwb.modules.coherence package", "pycwb.modules.cwb_conversions package", "pycwb.modules.data_conditioning package", "pycwb.modules.job_segment package", "pycwb.modules.likelihood package", "pycwb.modules.logger package", "pycwb.modules.multi_resolution_wdm package", "pycwb.modules.plot package", "pycwb.modules.read_data package", "pycwb.modules.reconstruction package", "pycwb.modules.sparse_series package", "pycwb.modules.super_cluster package", "pycwb.modules.web_viewer package", "pycwb.types package", "pycwb.utils package", "Batch injection with Python Script", "Injections with Customized Waveform Generation", "Step by step injection search", "Performing Multi-Injection", "Go deeper into pycWB.search", "Tutorial"], "terms": {"If": [0, 1, 21, 26, 30, 32], "you": [0, 1, 2, 30, 32], "we": [0, 2, 32], "ask": 0, "includ": [0, 6, 15], "citat": 0, "through": 0, "its": 0, "doi": 0, "relev": 0, "section": 0, "code": [0, 2, 30, 32], "ar": [0, 2, 7, 16, 21, 26, 30, 32, 33], "below": [0, 16, 26], "A": [0, 12, 16, 21, 26, 30, 32], "bibtex": 0, "kei": [0, 7, 20, 26], "each": [0, 16, 21, 24, 26, 30, 32], "releas": [0, 6, 26], "i": [0, 1, 2, 3, 7, 11, 12, 14, 16, 21, 26, 27, 30, 32], "avail": [0, 2, 33], "from": [0, 6, 7, 16, 21, 23, 24, 26, 27, 30, 32], "zenodo": 0, "can": [0, 1, 2, 22, 30, 32], "found": [0, 26, 32], "page": [0, 1], "latest": 0, "link": 0, "do": [0, 2, 32], "specif": 0, "pleas": [0, 1, 2], "closest": 0, "version": [0, 12], "should": [0, 32], "also": [0, 8, 30, 32], "sinc": 0, "built": [0, 2], "top": 0, "The": [0, 2, 6, 7, 16, 21, 26, 30, 32, 33], "paper": [0, 26], "modular": 1, "python": [1, 2, 3, 11, 14, 33], "packag": [1, 2, 4], "gravit": 1, "wave": [1, 6, 26], "base": [1, 7, 11, 26], "core": [1, 6, 26], "function": [1, 6, 7, 14, 19, 21, 26, 32], "cwb": [1, 13, 15, 19, 26], "conda": 1, "creat": [1, 2, 6, 10, 12, 19, 23, 26, 30, 32], "n": [1, 2, 3, 26], "3": [1, 2, 14], "11": 1, "activ": [1, 2], "c": [1, 2, 14, 26, 32], "forg": [1, 2], "root": [1, 2, 14, 15, 20, 26, 27], "6": [1, 2, 16, 20, 26], "26": [1, 2], "10": [1, 2], "healpix_cxx": [1, 2], "81": [1, 2], "nds2": [1, 2], "client": [1, 2], "lalsuit": [1, 2], "setuptools_scm": [1, 2], "git": [1, 2], "clone": [1, 2, 6, 26], "ligo": [1, 2], "org": [1, 2], "yumeng": [1, 2], "xu": [1, 2], "cd": [1, 2], "make": [1, 2, 21], "cp": [1, 30], "r": 1, "path_to_source_cod": [1, 30], "my_search": [1, 30], "directli": [1, 32], "script": [1, 33], "pycwb_inject": 1, "py": 1, "Or": 1, "open": 1, "juptyer": 1, "notebook": 1, "ipynb": 1, "want": [1, 30, 32], "know": [1, 30], "more": [1, 21, 30, 32], "about": [1, 26, 30], "process": [1, 6, 21, 26, 32], "refer": [1, 21], "index": [1, 6, 21, 26], "modul": [1, 2, 4, 30, 32], "project": [2, 21, 30], "yet": [2, 16, 26], "pypi": 2, "recommend": 2, "pycwb": [2, 30, 33], "environ": [2, 30, 32], "becaus": 2, "all": [2, 3, 7, 14, 16, 19, 26, 32], "depend": 2, "some": 2, "them": [2, 21], "command": 2, "help": 2, "pack": 2, "To": [2, 32], "need": [2, 26], "follow": [2, 3, 6, 26, 30, 33], "run": [2, 6, 26, 30, 32], "doc": 2, "sphinx": 2, "7": 2, "0": [2, 3, 11, 16, 21, 22, 26, 27, 30], "sphinx_rtd_them": 2, "html": [2, 6], "directori": [2, 6, 17, 21, 32], "rst": 2, "file": [2, 3, 6, 7, 11, 12, 16, 17, 18, 21, 24, 26, 27, 30, 32], "name": [2, 9, 16, 21, 26, 27], "delet": 2, "when": [2, 7, 26, 32], "prevent": 2, "cach": 2, "so": [2, 3], "edit": 2, "manual": 2, "ani": [2, 26], "your": [2, 32], "same": [2, 21], "thi": [3, 6, 7, 11, 14, 26, 30, 32], "contain": [3, 7, 16, 21, 26, 32], "It": [3, 32], "intend": 3, "complet": [3, 8, 26, 31], "list": [3, 11, 12, 13, 15, 16, 17, 19, 21, 22, 23, 24, 26, 32], "rather": 3, "most": 3, "import": [3, 30, 32], "ones": 3, "ad": [3, 32], "support": [3, 7], "maco": [3, 6, 32], "dylib": 3, "extens": 3, "asm": 3, "flag": [3, 26], "": [3, 18], "sourc": [3, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "compil": 3, "unnecessari": 3, "comment": 3, "out": 3, "line": [3, 30], "wdm": [3, 4, 6, 7, 10, 15, 22, 23, 24], "cc": [3, 26], "templat": 3, "class": [3, 7, 11, 26], "datatype_t": 3, "doubl": [3, 13, 15], "co": 3, "maxbeta": 3, "cos2": 3, "sinco": 3, "cossiz": 3, "cos2siz": 3, "sincoss": 3, "int": [3, 11, 16, 17, 19, 21, 22, 26], "objcount": 3, "add": [3, 7, 12, 16, 26], "inlin": 3, "keyword": 3, "hh": 3, "static": [3, 7], "avoid": [3, 6, 7, 32], "printf": 3, "filter": [3, 16, 26], "length": [3, 11, 16, 19, 26], "d": 3, "norm": [3, 6, 26], "16f": 3, "1": [3, 11, 21, 22, 26, 32], "residu": 3, "monster": 3, "layer": [3, 6, 26], "tmp": 3, "let": 3, "output": [3, 6, 11, 16, 17, 21, 26, 32], "manag": [3, 32], "subpackag": 4, "config": [4, 6, 11, 12, 13, 15, 16, 17, 19, 21, 22, 23, 24, 26, 30, 32], "submodul": [4, 10], "content": 4, "constant": [4, 6, 7], "project_const": [4, 6], "user_parameters_schema": [4, 6, 7], "messeng": [4, 6], "type": [4, 6, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 27, 30, 32], "data_quality_fil": [4, 6], "detector": [4, 6, 13, 16, 21, 30], "job": [4, 6, 12, 16, 17, 21, 24, 30, 33], "network": [4, 6, 11, 13, 17, 24, 30, 32], "network_clust": [4, 6, 13, 22], "network_ev": [4, 6, 12], "network_pixel": [4, 6], "sparse_seri": [4, 6, 10], "time_frequency_seri": [4, 6, 13], "wdm_xtalk": [4, 6], "util": [4, 6], "check_root": [4, 6], "imag": [4, 6], "yaml_help": [4, 6], "search": [4, 26, 33], "analyze_job_seg": [4, 6, 32], "add_derived_kei": [6, 7], "check_mra_catalog": [6, 7], "check_fil": [6, 7], "check_lagstep": [6, 7], "get_lag_buff": [6, 7], "import_help": [6, 9, 27], "autoencod": [6, 10], "cwb_autoencod": [6, 10], "catalog": [6, 10, 21, 26, 32], "coher": [6, 10, 26, 30, 32], "coherence_lit": [6, 10], "cwb_convers": [6, 10], "cluster": [6, 10, 11, 13, 17, 20, 22, 23, 24, 26, 30, 32], "pixel": [6, 7, 10, 13, 24, 26, 30, 32], "seri": [6, 10, 21, 26, 30], "data_condit": [6, 10, 30, 32], "regress": [6, 10], "whiten": [6, 10, 26, 30], "job_seg": [6, 10, 21, 30, 32], "dq_segment": [6, 10], "frame": [6, 10, 21, 26, 32], "plot": [6, 10, 30, 32], "super_lag": [6, 10], "likelihood": [6, 10, 11, 20, 26, 30, 32], "logger": [6, 10, 30, 32], "multi_resolution_wdm": [6, 10], "cluster_statist": [6, 10, 32], "event": [6, 10, 12, 17, 21, 26, 30, 32], "spectrogram": [6, 10, 30, 32], "read_data": [6, 10, 30, 32], "data_check": [6, 10], "mdc": [6, 10], "reconstruct": [6, 10, 11, 26, 30, 32], "getmrawaveform": [6, 10], "sparse_t": [6, 10], "super_clust": [6, 10, 30, 32], "superclust": [6, 10, 26, 30, 32], "web_view": [6, 10, 32], "dqfile": [6, 16, 26], "c4": [6, 26], "dq_cat": [6, 16, 26], "get_period": [6, 26], "ifo": [6, 16, 21, 22, 26, 27, 30], "invert": [6, 26], "shift": [6, 7, 16, 26], "framefil": [6, 16, 26], "durat": [6, 16, 21, 26], "end_tim": [6, 26], "path": [6, 7, 11, 18, 20, 21, 26, 30, 32], "start_tim": [6, 21, 26], "slag": [6, 16, 26], "job_id": [6, 17, 26, 30, 32], "seg_id": [6, 26], "slag_id": [6, 26], "waveseg": [6, 12, 16, 21, 26, 32], "inject": [6, 16, 21, 26, 32, 33], "nois": [6, 11, 13, 21, 26, 30], "to_dict": [6, 26], "add_detector": [6, 26], "add_wavelet": [6, 26], "get_clust": [6, 26], "get_ifo": [6, 26], "get_max_delai": [6, 26], "get_network_pixel": [6, 26], "ifo_s": [6, 26], "likelihood2g": [6, 26], "likelihoodwp": [6, 26], "load_strain": [6, 26], "nlag": [6, 13, 26], "n_event": [6, 26], "pattern": [6, 26], "restore_skymap": [6, 26], "set_delay_index": [6, 26], "set_sky_mask": [6, 26], "set_time_shift": [6, 26], "set_veto": [6, 26], "sub_net_cut": [6, 26], "threshold": [6, 13, 24, 26], "update_sky_map": [6, 26], "update_sky_mask": [6, 26], "make_sky_mask": [6, 26], "cluster_freq": [6, 26], "cluster_meta": [6, 14, 26], "cluster_r": [6, 26], "cluster_statu": [6, 26, 32], "cluster_tim": [6, 26], "from_netclust": [6, 26], "get_pixel_r": [6, 26], "get_pixels_with_r": [6, 26], "get_sparse_map": [6, 26, 30], "get_sparse_map_by_r": [6, 26], "sky_area": [6, 26], "sky_pixel_index": [6, 26], "sky_pixel_map": [6, 26], "sky_time_delai": [6, 26], "clustermeta": [6, 26], "a_net": [6, 26], "c_freq": [6, 26], "c_time": [6, 26], "chi2chirp": [6, 26], "chirp": [6, 26], "chirp_efrac": [6, 26], "chirp_ellip": [6, 26], "chirp_pfrac": [6, 26], "ellipt": [6, 26], "energi": [6, 13, 26], "energy_ski": [6, 26], "from_cdata": [6, 26], "g_net": [6, 26], "g_nois": [6, 26], "i_net": [6, 26], "iota": [6, 26], "like_net": [6, 26], "like_ski": [6, 26], "mchirp": [6, 26], "mchirperr": [6, 26], "mchpdf": [6, 26], "ndof": [6, 26], "net_cc": [6, 26], "net_ecor": [6, 26], "net_": [6, 26], "net_nul": [6, 26], "net_rho": [6, 26], "net_rho2": [6, 26], "norm_cor": [6, 26], "phi": [6, 26], "psi": [6, 26], "sky_cc": [6, 26], "sky_chi2": [6, 26], "sky_index": [6, 26], "sky_siz": [6, 26], "sky_stat": [6, 26], "sub_net": [6, 26], "sub_net2": [6, 26], "theta": [6, 26], "tmrgr": [6, 26], "tmrgrerr": [6, 26], "fragmentclust": [6, 13, 17, 23, 24, 26], "bpp": [6, 26], "dump_clust": [6, 26], "event_count": [6, 26], "f_high": [6, 26], "f_low": [6, 21, 26], "n_pix": [6, 26], "pair": [6, 26], "pixel_count": [6, 26], "rate": [6, 11, 16, 19, 21, 22, 26], "remove_reject": [6, 26], "start": [6, 16, 21, 26, 30, 32], "stop": [6, 16, 26], "subnet_threshold": [6, 26], "dump": [6, 26], "json": [6, 8, 26, 32], "summari": [6, 26, 32], "data": [6, 11, 14, 15, 16, 21, 26, 30, 33], "frequenc": [6, 13, 14, 16, 21, 23, 26], "frequency_in_hz": [6, 26], "from_netpixel": [6, 26], "neighbor": [6, 26], "null": [6, 26, 30, 32], "polaris": [6, 26], "td_amp": [6, 26], "time": [6, 13, 14, 16, 19, 21, 22, 23, 24, 26, 30], "time_in_second": [6, 26], "pixeldata": [6, 14, 26], "a_90": [6, 26], "asnr": [6, 26], "noise_rm": [6, 26], "rank": [6, 26], "w_90": [6, 26], "sparsetimefrequencyseri": [6, 23, 24, 26], "add_cor": [6, 26], "from_fragment_clust": [6, 26], "resiz": [6, 26], "set_halo": [6, 26], "set_map": [6, 26], "set_sparse_t": [6, 26], "sparse_index": [6, 26], "sparse_lookup": [6, 26], "sparse_map_00": [6, 26], "sparse_map_90": [6, 26], "update_sparse_t": [6, 26], "timefrequencyseri": [6, 13, 14, 15, 23, 26, 32], "copi": [6, 14, 26, 30, 32], "edg": [6, 26], "forward": [6, 26], "sample_r": [6, 21, 26], "w_rate": [6, 26], "wavelet": [6, 16, 19, 23, 24, 26, 27], "whiten_mod": [6, 26], "alloc": [6, 26], "beta_ord": [6, 19, 26], "get_base_wav": [6, 26], "get_map_00": [6, 26], "get_map_90": [6, 26], "get_slice_s": [6, 26], "lightweight_dump": [6, 26], "m": [6, 26], "m_h": [6, 26], "m_l": [6, 26], "max_index": [6, 26], "max_lay": [6, 26], "max_level": [6, 26], "nst": [6, 26], "nww": [6, 26], "pww": [6, 26], "precis": [6, 19, 26], "set_map_00": [6, 26], "set_map_90": [6, 26], "set_td_filt": [6, 26], "size_at_zero_lay": [6, 26], "t2w": [6, 26], "time_delay_filter_s": [6, 26], "to_type_wdm": [6, 26], "declare_funct": [6, 10, 14, 26], "wdmxtalkcatalog": [6, 26], "check_layers_with_mracatalog": [6, 26], "get_wdmmra": [6, 26], "load_mra": [6, 26], "n_re": [6, 26], "tag": [6, 26], "check_and_load_wavelet": [6, 27], "align_imag": [6, 27], "merge_imag": [6, 27], "resize_imag": [6, 27], "resize_resolut": [6, 27], "cartesian_to_spher": [6, 27], "max_delai": [6, 27], "spherical_to_cartesian": [6, 27], "load_yaml": [6, 27], "set_default": [6, 27], "analyz": [6, 16, 26, 32], "one": [6, 21, 26], "segment": [6, 16, 21, 26, 32], "given": [6, 11, 15, 19, 20, 21, 22], "configur": [6, 7, 11, 13, 17, 19, 21, 22, 24, 26, 30], "stage": 6, "read": [6, 21, 24, 27, 32], "read_from_job_seg": [6, 10, 21, 32], "condit": [6, 7, 15, 30, 32], "create_network": 6, "result": [6, 26], "save": [6, 17, 20, 21, 26, 32], "format": [6, 18, 26], "paramet": [6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 30, 32], "user_paramet": [6, 30, 32], "yaml": [6, 7, 27, 30, 32], "log_fil": [6, 18, 32], "none": [6, 7, 11, 12, 13, 16, 18, 20, 21, 26, 32], "log_level": [6, 18, 32], "info": [6, 18], "no_subprocess": 6, "fals": [6, 23, 26], "main": [6, 32], "user": [6, 7, 8, 17, 19, 20, 21, 24, 26, 27, 32], "select": [6, 13, 16, 26, 32], "css": 6, "subprocess": [6, 32], "default": [6, 7, 11, 12, 13, 16, 18, 20, 21, 26, 27, 32], "memori": [6, 26, 32], "leak": [6, 32], "str": [6, 7, 11, 12, 16, 17, 18, 20, 21, 22, 26, 27], "option": [6, 11, 13, 16, 18, 20, 21, 26], "log": [6, 18, 26, 32], "level": [6, 13, 18, 19, 26], "bool": [6, 13, 20, 21, 22, 26], "set": [6, 13, 26, 27, 32], "true": [6, 13, 15, 20, 21, 22, 26], "develop": 6, "store": [7, 16, 26, 32], "load": [7, 16, 26, 27, 30], "check": [7, 21, 26, 27, 31, 32], "valu": [7, 21, 22, 26, 27], "defin": [7, 21, 26, 30], "provid": [7, 21, 26, 32], "schema": [7, 8, 27], "By": 7, "file_nam": [7, 27], "object": [7, 11, 12, 13, 15, 16, 19, 20, 21, 22, 23, 26, 27, 32], "dict": [7, 26, 27], "valid": [7, 8, 21], "deriv": 7, "method": [7, 15, 26], "call": [7, 32], "after": [7, 11, 16, 26, 32], "mracatalog": [7, 26], "exist": [7, 32], "rais": [7, 21], "filenotfounderror": 7, "doe": [7, 12], "helper": 7, "lagstep": 7, "compat": 7, "pariti": 7, "necessari": 7, "mix": 7, "between": [7, 11, 26], "odd": 7, "even": 7, "circular": 7, "buffer": [7, 16, 26], "us": [7, 8, 11, 12, 13, 15, 20, 21, 26, 30, 32], "lag": [7, 13, 16, 22, 24, 26], "distinguish": 7, "get": [7, 11, 14, 16, 22, 26, 30], "updat": [7, 26, 32], "mode": [7, 22, 26], "gener": [8, 21, 26, 30, 32, 33], "document": 8, "pyburst": [8, 27], "get_glitch": [10, 11], "get_gl": [10, 11], "set_weight": [10, 11], "mse": [10, 11], "timeseries_process": [10, 11], "add_events_to_catalog": [10, 12, 32], "create_catalog": [10, 12, 32], "coherence_parallel": [10, 13], "convert_cluster_meta_to_cdata": [10, 14], "convert_fragment_clusters_to_netclust": [10, 14], "convert_pixel_to_netpixel": [10, 14], "convert_to_pixdata": [10, 14], "wseries_to_matrix": [10, 14], "c_double_p": [10, 14], "convert_pycbc_timeseries_to_wavearrai": [10, 14], "convert_time_frequency_series_to_wseri": [10, 14], "convert_timeseries_to_wavearrai": [10, 14], "convert_to_wavearrai": [10, 14], "convert_to_wseri": [10, 14], "convert_wavearray_to_pycbc_timeseri": [10, 14], "convert_wavearray_to_timeseri": [10, 14], "convert_wseries_to_pycbc_timeseri": [10, 14], "convert_wseries_to_time_frequency_seri": [10, 14], "convert_wseries_to_timeseri": [10, 14], "convert_sparse_series_to_sseri": [10, 14], "get_job_list": [10, 16], "get_seg_list": [10, 16], "merge_seg_list": [10, 16], "read_seg_list": [10, 16], "get_frame_meta": [10, 16], "select_frame_list": [10, 16], "create_job_segment_from_config": [10, 16, 32], "create_job_segment_from_inject": [10, 16, 30], "select_job_seg": [10, 16], "plot_seg_list": [10, 16], "add_slag_shift": [10, 16], "get_slag_job_list": [10, 16], "get_slag_list": [10, 16], "save_likelihood_data": [10, 17, 32], "logger_init": [10, 18, 30, 32], "create_wdm_for_level": [10, 19], "create_wdm_set": [10, 19], "plot_statist": [10, 20, 32], "plot_event_on_spectrogram": [10, 20, 30, 32], "plot_spectrogram": [10, 20, 30], "check_and_resampl": [10, 21], "generate_from_pycbc": [10, 21], "generate_inject": [10, 21, 30, 32], "generate_injection_from_config": [10, 21], "generate_nois": [10, 21], "project_to_detector": [10, 21], "save_to_gwf": [10, 21], "read_from_catalog": [10, 21], "read_from_gwf": [10, 21], "read_from_onlin": [10, 21], "get_mra_wav": [10, 22], "get_network_mra_wav": [10, 22], "sparse_table_from_fragment_clust": [10, 23], "create_web_view": [10, 25, 32], "glitch": 11, "classifi": 11, "neural": 11, "ssnr": 11, "weight_path": 11, "waveform": [11, 20, 22, 26, 33], "numpi": [11, 14, 16, 26], "ndarrai": [11, 16, 26], "pycbc": [11, 14, 15, 21, 22, 26, 30, 32], "timeseri": [11, 14, 15, 20, 21, 22, 26, 32], "float": [11, 14, 16, 19, 20, 21, 22, 26], "signal": [11, 21, 22, 26, 30], "ratio": 11, "weight": 11, "return": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 32], "origin": [11, 26], "mean": 11, "squar": 11, "error": [11, 26, 32], "input": [11, 14, 16, 27, 32], "dim1": 11, "preprocess": 11, "2": [11, 16, 26], "window": [11, 26], "model": [11, 23], "tensorflow": 11, "kera": 11, "engin": 11, "train": 11, "normal": [11, 26], "data_mod": 11, "center": [11, 26], "around": 11, "absolut": 11, "maximum": [11, 13, 16, 20, 26], "offset": [11, 16, 26], "5": 11, "filenam": [12, 16, 20, 21, 32], "soft": 12, "lock": 12, "filelock": 12, "work": [12, 26, 28, 29, 32], "cit": 12, "tf_map": [13, 23, 24, 26, 30, 32], "nrms_list": [13, 15, 26, 32], "net": [13, 26], "parallel": [13, 15, 21, 23], "signific": 13, "loop": [13, 14, 24, 26], "over": [13, 24, 26], "resolut": [13, 21, 24, 26], "nre": 13, "nifo": [13, 22, 26], "comput": [13, 24, 26, 30], "tf": [13, 26], "wseri": [13, 14, 20], "maxenergi": 13, "getnetworkpixel": 13, "singl": [13, 26], "map": [13, 23, 26, 30, 32], "rm": [13, 26, 30], "whether": [13, 20, 26], "fragment_clust": [13, 14, 17, 23, 24, 26, 30, 32], "fragment": [13, 23, 24, 26], "convert": [14, 26], "netclust": [14, 24, 26], "c_id": [14, 26], "netpixel": [14, 26], "w": [14, 26], "matrix": 14, "np": [14, 15, 16, 26], "arrai": [14, 16, 20, 26], "alia": 14, "lp_c_doubl": 14, "wavearrai": [14, 15, 20, 26], "h": [14, 15, 21], "gwpy": [14, 15, 20, 21, 30], "known": 14, "param": [14, 19, 21, 26, 27], "faster": 14, "declar": 14, "too": 14, "slow": 14, "strain": [15, 20, 21, 22, 30], "perform": [15, 26, 33], "conditioned_strain": 15, "tupl": [15, 16, 20, 21], "clean": 15, "transform": [15, 20, 26], "wdm_white": 15, "nrm": [15, 30, 32], "dq_list": 16, "seg_len": 16, "seg_ml": 16, "seg_edg": [16, 19], "build": [16, 26], "ilist": 16, "must": 16, "have": 16, "minimum": [16, 20, 26], "segml": 16, "2segedg": 16, "seglen": 16, "segedg": 16, "order": [16, 19, 21], "maxim": 16, "live": 16, "lenght": 16, "divid": 16, "xxx": 16, "seg": [16, 26], "sega": 16, "segb": 16, "number": [16, 21, 22, 26], "sec": [16, 26], "dq_cat1": 16, "boundari": [16, 26], "Not": [16, 26], "implement": 16, "seg_list_1": 16, "seg_list_2": 16, "merg": [16, 21, 26, 30], "first": [16, 21, 26, 30, 32], "second": [16, 21, 26], "end": [16, 21, 26], "dq_file_list": 16, "qualiti": [16, 26], "categori": [16, 26], "dq_file": 16, "load_fil": 16, "Then": [16, 32], "frame_list_fil": 16, "label": [16, 21], "gwf": [16, 21], "metadata": [16, 26], "extract": [16, 26], "interferomet": [16, 26], "which": [16, 26, 32], "frame_list": 16, "within": [16, 26], "simulation_mod": 16, "fr_file": 16, "seg_overlap": 16, "rateana": [16, 26], "l_high": [16, 26], "slag_siz": 16, "slag_off": 16, "slag_min": 16, "slag_max": 16, "slag_sit": 16, "slag_fil": 16, "databas": 16, "dq": 16, "overlap": 16, "analysi": [16, 19, 26, 33], "high": [16, 26], "cutoff": [16, 21, 26], "super": 16, "size": [16, 19, 20, 26], "site": [16, 26], "seg_list": 16, "merged_seg_list": 16, "figsiz": [16, 20], "24": [16, 20], "figur": [16, 20], "slag_list": 16, "seg_min": 16, "ndqf": 16, "idqf": 16, "dqcat": 16, "cwb_cat1": 16, "len": 16, "segmin": 16, "cwb_cat2": 16, "vector": [16, 26], "structur": [16, 26], "cat": 16, "calcul": [17, 30], "cluster_id": [17, 26], "output_dir": 17, "id": [17, 22, 26], "initi": [18, 26, 32], "asctim": 18, "funcnam": 18, "levelnam": 18, "messag": 18, "rate_ana": 19, "scratch": 19, "td_size": [19, 26], "delai": [19, 22, 24, 26], "beta": 19, "meyer": 19, "rtype": 19, "statist": [20, 26, 32], "xmin": 20, "xmax": 20, "gwpy_plot": 20, "x": [20, 27], "axi": [20, 26], "matplotlib": 20, "further": 20, "modifi": 20, "pyplot": 20, "ifo_index": 21, "resampl": 21, "nan": 21, "sampl": [21, 22, 26, 32], "consist": 21, "configu": 21, "valueerror": 21, "m1": 21, "m2": 21, "inclin": 21, "distanc": 21, "ra": [21, 26, 27], "dec": [21, 26, 27], "polar": 21, "geocent_end_tim": 21, "spin1": 21, "spin2": 21, "f_ref": 21, "20": 21, "f_lower": 21, "approxim": 21, "imrphenomxphm": 21, "hp": 21, "hx": 21, "mass": [21, 26], "compon": 21, "binari": 21, "right": [21, 26], "ascens": 21, "declin": 21, "geocentr": 21, "spin": 21, "lower": [21, 26], "specifi": [21, 26, 30], "psd": 21, "30": 21, "delta_f": 21, "0625": 21, "32": 21, "4096": 21, "seed": 21, "1234": 21, "aligozerodethighpow": 21, "low": [21, 26], "random": 21, "hc": 21, "ref_ifo": 21, "h1": 21, "t": [21, 26], "an": [21, 26, 30], "sim_inspir": 21, "tabl": [21, 23, 24, 30], "exampl": [21, 30, 31, 33], "inj": 21, "turn": 21, "delta_t": 21, "detector_nam": 21, "string": [21, 26], "distance_scal": 21, "factor": [21, 26], "scale": 21, "correspond": [21, 26], "channel_nam": 21, "out_dir": 21, "channel": 21, "time_slic": 21, "slice": [21, 26], "crop": 21, "merger": [21, 26], "begin": 21, "than": [21, 26], "server": 21, "wdmlist": 22, "a_typ": 22, "mra": [22, 26], "atyp": 22, "domain": [22, 23, 26], "nomber": 22, "90": [22, 26], "phase": [22, 26], "rtdf": 22, "tof": 22, "effect": 22, "appli": [22, 26], "flight": 22, "correct": [22, 26], "spars": [23, 24, 26, 30], "wdm_list": [23, 24], "multi": [24, 33], "reject": [24, 26], "sub": [24, 26], "amplitud": [24, 26], "loadtdampss": 24, "subnetcut": [24, 26], "defrag": 24, "sparse_table_list": 24, "outputdir": [25, 32], "inform": 26, "invers": 26, "4": 26, "column": 26, "period": 26, "properti": 26, "jobid": 26, "header": 26, "dictionari": 26, "tf_list": 26, "silent": 26, "hold": 26, "disabl": 26, "temporari": 26, "kt": 26, "kf": 26, "produc": 26, "two": 26, "associ": 26, "thei": 26, "closer": 26, "both": 26, "2g": 26, "packet": 26, "cbc": 26, "bbh": 26, "imbhb": 26, "skyre": 26, "restor": 26, "skymap": 26, "sky": 26, "skycoord": 26, "earth": 26, "celesti": 26, "mask": 26, "what": 26, "locat": 26, "e": 26, "radiu": 26, "circl": 26, "360": 26, "degre": 26, "b": 26, "ascii": 26, "grid": 26, "coordin": 26, "lag_siz": 26, "lag_step": 26, "lag_off": 26, "lag_max": 26, "lag_buff": 26, "lag_mod": 26, "lag_sit": 26, "step": [26, 33], "veto": 26, "sub_cut": 26, "33": 26, "sub_norm": 26, "subnetwork": 26, "cut": 26, "skyloop": 26, "lo": 26, "lt": 26, "alp": 26, "fraction": 26, "ltf": 26, "assum": 26, "gaussian": 26, "gamma": 26, "distribut": 26, "shape": 26, "sky_mask": 26, "insid": 26, "fill": 26, "otherwis": 26, "accept": 26, "readi": 26, "central": 26, "area": 26, "mergerd_map": 26, "resolt": 26, "t_start": 26, "dt": [26, 27, 30], "df": [26, 27, 30], "v_map": 26, "scipi": 26, "coo_matrix": 26, "region": 26, "backward": 26, "attribut": 26, "meta": 26, "align": 26, "chi2": 26, "ndf": 26, "posit": 26, "total": 26, "c_data": 26, "estim": 26, "contribut": 26, "freedom": 26, "sra": 26, "disbal": 26, "gauss": 26, "snr": 26, "per": 26, "reduc": [26, 30], "stat": 26, "local": 26, "n_sub": 26, "interv": 26, "gp": 26, "black": 26, "probabl": 26, "event_statu": 26, "count": 26, "statu": 26, "c_cluster": 26, "remov": [26, 30], "represent": 26, "instanc": 26, "time_halo": 26, "layer_halo": 26, "net_delai": 26, "sparseseri": 26, "ifo_id": 26, "ifoid": 26, "pwc": 26, "m_tau": 26, "new": [26, 32], "max_tau": 26, "042": 26, "halo": 26, "For": [26, 32], "layerhalo": 26, "extrahalo": 26, "timehalo": 26, "xxxx": 26, "sparser": 26, "abov": 26, "left": 26, "automat": 26, "gettdfsiz": 26, "reset": 26, "lookup": 26, "map_00": 26, "map_90": 26, "zero": 26, "dummi": 26, "todo": 26, "k": 26, "wrapper": 26, "f": [26, 30, 32], "2n": 26, "where": 26, "global": [26, 27], "linear": 26, "band": 26, "integ": 26, "width": 26, "basi": 26, "fourier": 26, "see": [26, 32], "larger": 26, "longer": 26, "spectral": 26, "leakag": 26, "sharp": 26, "truncat": 26, "quantifi": 26, "p": 26, "log10": 26, "norm_of_filt": 26, "other": 26, "ignor": 26, "tf_index": 26, "quad": 26, "quadratur": 26, "indic": 26, "translat": 26, "j": 26, "map00": 26, "lightweight": 26, "duplic": 26, "highpass": 26, "coeffici": 26, "lowpass": 26, "space": 26, "pointer": 26, "coeff_factor": 26, "upsample_factor": 26, "upsampl": 26, "fundament": 26, "tau": 26, "l": 26, "direct": 26, "orthonorm": 26, "power": 26, "request": 26, "combin": 26, "half": 26, "l_low": 26, "along": 26, "decomposit": 26, "librari": 27, "try": 27, "resized_map": 27, "t_starts_shift": 27, "max_width": 27, "max_height": 27, "t_offset": 27, "f_offset": 27, "dt_target": 27, "df_target": 27, "module_str": 27, "module_nam": 27, "y": 27, "z": 27, "variabl": 27, "full": 27, "burst": 30, "tutori": 30, "find": 30, "folder": [30, 31, 32], "user_parameters_inject": 30, "mkdir": 30, "next": [30, 32], "o": [30, 32], "home_wat_filt": [30, 32], "pyburst_path": 30, "dirnam": [30, 32], "abspath": [30, 32], "__file__": [30, 32], "vendor": [30, 32], "now": 30, "simul": 30, "cost": 30, "pwc_list": [30, 32], "final": [30, 32], "enumer": [30, 32], "plt": 30, "show": 30, "merged_map": 30, "t0": 30, "f0": 30, "colorbar": 30, "multiple_inject": 31, "although": 32, "freeli": 32, "easier": 32, "wai": 32, "just": 32, "how": 32, "compos": 32, "three": 32, "part": 32, "done": 32, "print": 32, "stdout": 32, "env": 32, "xdmxtalk": 32, "own": 32, "pycwb_path": 32, "makedir": 32, "logdir": 32, "accord": 32, "web": 32, "viewer": 32, "app": 32, "view": 32, "multiprocess": 32, "target": 32, "arg": 32, "join": 32, "might": 32, "encount": 32, "safeti": 32, "aviod": 32, "instead": 32, "detail": 32, "mark": 32, "events_": 32, "_all_": 32, "png": 32, "continu": 32, "likelihood_map_": 32, "_": 32, "null_map_": 32, "go": 33, "deeper": 33, "control": 33, "custom": 33, "batch": 33}, "objects": {"": [[6, 0, 0, "-", "pycwb"]], "pycwb": [[7, 0, 0, "-", "config"], [8, 0, 0, "-", "constants"], [9, 0, 0, "-", "messenger"], [10, 0, 0, "-", "modules"], [6, 0, 0, "-", "search"], [26, 0, 0, "-", "types"], [27, 0, 0, "-", "utils"]], "pycwb.config": [[7, 0, 0, "-", "config"]], "pycwb.config.config": [[7, 1, 1, "", "Config"]], "pycwb.config.config.Config": [[7, 2, 1, "", "add_derived_key"], [7, 2, 1, "", "check_MRA_catalog"], [7, 2, 1, "", "check_file"], [7, 2, 1, "", "check_lagStep"], [7, 2, 1, "", "get_lag_buffer"]], "pycwb.constants": [[8, 0, 0, "-", "project_constants"], [8, 0, 0, "-", "user_parameters_schema"]], "pycwb.messenger": [[9, 0, 0, "-", "messenger"]], "pycwb.messenger.messenger": [[9, 3, 1, "", "import_helper"]], "pycwb.modules": [[11, 0, 0, "-", "autoencoder"], [12, 0, 0, "-", "catalog"], [13, 0, 0, "-", "coherence"], [14, 0, 0, "-", "cwb_conversions"], [15, 0, 0, "-", "data_conditioning"], [16, 0, 0, "-", "job_segment"], [17, 0, 0, "-", "likelihood"], [18, 0, 0, "-", "logger"], [19, 0, 0, "-", "multi_resolution_wdm"], [20, 0, 0, "-", "plot"], [21, 0, 0, "-", "read_data"], [22, 0, 0, "-", "reconstruction"], [23, 0, 0, "-", "sparse_series"], [24, 0, 0, "-", "super_cluster"], [25, 0, 0, "-", "web_viewer"]], "pycwb.modules.autoencoder": [[11, 0, 0, "-", "autoencoder"], [11, 0, 0, "-", "cwb_autoencoder"]], "pycwb.modules.autoencoder.autoencoder": [[11, 3, 1, "", "get_glitchness"]], "pycwb.modules.autoencoder.cwb_autoencoder": [[11, 1, 1, "", "AutoEncoder"], [11, 3, 1, "", "MSE"], [11, 3, 1, "", "autoencoder"], [11, 3, 1, "", "timeseries_processing"]], "pycwb.modules.autoencoder.cwb_autoencoder.AutoEncoder": [[11, 2, 1, "", "get_glness"], [11, 2, 1, "", "set_weights"]], "pycwb.modules.catalog": [[12, 0, 0, "-", "catalog"]], "pycwb.modules.catalog.catalog": [[12, 3, 1, "", "add_events_to_catalog"], [12, 3, 1, "", "create_catalog"]], "pycwb.modules.coherence": [[13, 0, 0, "-", "coherence"], [13, 0, 0, "-", "coherence_lite"]], "pycwb.modules.coherence.coherence": [[13, 3, 1, "", "coherence"], [13, 3, 1, "", "coherence_parallel"]], "pycwb.modules.coherence.coherence_lite": [[13, 3, 1, "", "coherence"], [13, 3, 1, "", "coherence_parallel"]], "pycwb.modules.cwb_conversions": [[14, 0, 0, "-", "cluster"], [14, 0, 0, "-", "pixel"], [14, 0, 0, "-", "series"], [14, 0, 0, "-", "sparse_series"]], "pycwb.modules.cwb_conversions.cluster": [[14, 3, 1, "", "convert_cluster_meta_to_cData"], [14, 3, 1, "", "convert_fragment_clusters_to_netcluster"]], "pycwb.modules.cwb_conversions.pixel": [[14, 3, 1, "", "convert_pixel_to_netpixel"], [14, 3, 1, "", "convert_to_pixdata"]], "pycwb.modules.cwb_conversions.series": [[14, 3, 1, "", "WSeries_to_matrix"], [14, 4, 1, "", "c_double_p"], [14, 3, 1, "", "convert_pycbc_timeseries_to_wavearray"], [14, 3, 1, "", "convert_time_frequency_series_to_wseries"], [14, 3, 1, "", "convert_timeseries_to_wavearray"], [14, 3, 1, "", "convert_to_wavearray"], [14, 3, 1, "", "convert_to_wseries"], [14, 3, 1, "", "convert_wavearray_to_pycbc_timeseries"], [14, 3, 1, "", "convert_wavearray_to_timeseries"], [14, 3, 1, "", "convert_wseries_to_pycbc_timeseries"], [14, 3, 1, "", "convert_wseries_to_time_frequency_series"], [14, 3, 1, "", "convert_wseries_to_timeseries"], [14, 3, 1, "", "declare_function"]], "pycwb.modules.cwb_conversions.sparse_series": [[14, 3, 1, "", "convert_sparse_series_to_sseries"]], "pycwb.modules.data_conditioning": [[15, 0, 0, "-", "data_conditioning"], [15, 0, 0, "-", "regression"], [15, 0, 0, "-", "whitening"]], "pycwb.modules.data_conditioning.data_conditioning": [[15, 3, 1, "", "data_conditioning"]], "pycwb.modules.data_conditioning.regression": [[15, 3, 1, "", "regression"]], "pycwb.modules.data_conditioning.whitening": [[15, 3, 1, "", "whitening"]], "pycwb.modules.job_segment": [[16, 0, 0, "-", "dq_segment"], [16, 0, 0, "-", "frame"], [16, 0, 0, "-", "job_segment"], [16, 0, 0, "-", "plots"], [16, 0, 0, "-", "super_lag"]], "pycwb.modules.job_segment.dq_segment": [[16, 3, 1, "", "get_job_list"], [16, 3, 1, "", "get_seg_list"], [16, 3, 1, "", "merge_seg_list"], [16, 3, 1, "", "read_seg_list"]], "pycwb.modules.job_segment.frame": [[16, 3, 1, "", "get_frame_meta"], [16, 3, 1, "", "select_frame_list"]], "pycwb.modules.job_segment.job_segment": [[16, 3, 1, "", "create_job_segment_from_config"], [16, 3, 1, "", "create_job_segment_from_injection"], [16, 3, 1, "", "select_job_segment"]], "pycwb.modules.job_segment.plots": [[16, 3, 1, "", "plot_seg_list"]], "pycwb.modules.job_segment.super_lag": [[16, 3, 1, "", "add_slag_shifts"], [16, 3, 1, "", "get_slag_job_list"], [16, 3, 1, "", "get_slag_list"]], "pycwb.modules.likelihood": [[17, 0, 0, "-", "likelihood"]], "pycwb.modules.likelihood.likelihood": [[17, 3, 1, "", "likelihood"], [17, 3, 1, "", "save_likelihood_data"]], "pycwb.modules.logger": [[18, 0, 0, "-", "logger"]], "pycwb.modules.logger.logger": [[18, 3, 1, "", "logger_init"]], "pycwb.modules.multi_resolution_wdm": [[19, 0, 0, "-", "wdm"]], "pycwb.modules.multi_resolution_wdm.wdm": [[19, 3, 1, "", "create_wdm_for_level"], [19, 3, 1, "", "create_wdm_set"]], "pycwb.modules.plot": [[20, 0, 0, "-", "cluster_statistics"], [20, 0, 0, "-", "event"], [20, 0, 0, "-", "spectrogram"]], "pycwb.modules.plot.cluster_statistics": [[20, 3, 1, "", "plot_statistics"]], "pycwb.modules.plot.event": [[20, 3, 1, "", "plot_event_on_spectrogram"]], "pycwb.modules.plot.spectrogram": [[20, 3, 1, "", "plot_spectrogram"]], "pycwb.modules.read_data": [[21, 0, 0, "-", "data_check"], [21, 0, 0, "-", "mdc"], [21, 0, 0, "-", "read_data"]], "pycwb.modules.read_data.data_check": [[21, 3, 1, "", "check_and_resample"], [21, 3, 1, "", "data_check"]], "pycwb.modules.read_data.mdc": [[21, 3, 1, "", "generate_from_pycbc"], [21, 3, 1, "", "generate_injection"], [21, 3, 1, "", "generate_injection_from_config"], [21, 3, 1, "", "generate_noise"], [21, 3, 1, "", "project_to_detector"], [21, 3, 1, "", "save_to_gwf"]], "pycwb.modules.read_data.read_data": [[21, 3, 1, "", "read_from_catalog"], [21, 3, 1, "", "read_from_gwf"], [21, 3, 1, "", "read_from_job_segment"], [21, 3, 1, "", "read_from_online"]], "pycwb.modules.reconstruction": [[22, 0, 0, "-", "getMRAwaveform"]], "pycwb.modules.reconstruction.getMRAwaveform": [[22, 3, 1, "", "get_MRA_wave"], [22, 3, 1, "", "get_network_MRA_wave"]], "pycwb.modules.sparse_series": [[23, 0, 0, "-", "sparse_table"]], "pycwb.modules.sparse_series.sparse_table": [[23, 3, 1, "", "sparse_table_from_fragment_clusters"]], "pycwb.modules.super_cluster": [[24, 0, 0, "-", "supercluster"]], "pycwb.modules.super_cluster.supercluster": [[24, 3, 1, "", "supercluster"]], "pycwb.modules.web_viewer": [[25, 0, 0, "-", "create"]], "pycwb.modules.web_viewer.create": [[25, 3, 1, "", "create_web_viewer"]], "pycwb.search": [[6, 3, 1, "", "analyze_job_segment"], [6, 3, 1, "", "search"]], "pycwb.types": [[26, 0, 0, "-", "data_quality_file"], [26, 0, 0, "-", "detector"], [26, 0, 0, "-", "job"], [26, 0, 0, "-", "network"], [26, 0, 0, "-", "network_cluster"], [26, 0, 0, "-", "network_event"], [26, 0, 0, "-", "network_pixel"], [26, 0, 0, "-", "sparse_series"], [26, 0, 0, "-", "time_frequency_series"], [26, 0, 0, "-", "wdm"], [26, 0, 0, "-", "wdm_xtalk"]], "pycwb.types.data_quality_file": [[26, 1, 1, "", "DQFile"]], "pycwb.types.data_quality_file.DQFile": [[26, 4, 1, "", "c4"], [26, 4, 1, "", "dq_cat"], [26, 4, 1, "", "file"], [26, 2, 1, "", "get_periods"], [26, 4, 1, "", "ifo"], [26, 4, 1, "", "invert"], [26, 4, 1, "", "shift"]], "pycwb.types.detector": [[26, 1, 1, "", "Detector"]], "pycwb.types.job": [[26, 1, 1, "", "FrameFile"], [26, 1, 1, "", "SLag"], [26, 1, 1, "", "WaveSegment"]], "pycwb.types.job.FrameFile": [[26, 4, 1, "", "duration"], [26, 5, 1, "", "end_time"], [26, 4, 1, "", "ifo"], [26, 4, 1, "", "path"], [26, 4, 1, "", "start_time"]], "pycwb.types.job.SLag": [[26, 4, 1, "", "job_id"], [26, 4, 1, "", "seg_id"], [26, 4, 1, "", "slag_id"]], "pycwb.types.job.WaveSegment": [[26, 5, 1, "", "duration"], [26, 4, 1, "", "end_time"], [26, 4, 1, "", "frames"], [26, 4, 1, "", "ifos"], [26, 4, 1, "", "index"], [26, 4, 1, "", "injections"], [26, 4, 1, "", "noise"], [26, 4, 1, "", "start_time"], [26, 2, 1, "", "to_dict"]], "pycwb.types.network": [[26, 1, 1, "", "Network"], [26, 3, 1, "", "make_sky_mask"]], "pycwb.types.network.Network": [[26, 2, 1, "", "add_detector"], [26, 2, 1, "", "add_wavelet"], [26, 2, 1, "", "cluster"], [26, 2, 1, "", "get_cluster"], [26, 2, 1, "", "get_ifo"], [26, 2, 1, "", "get_max_delay"], [26, 2, 1, "", "get_network_pixels"], [26, 5, 1, "", "ifo_size"], [26, 2, 1, "", "likelihood2G"], [26, 2, 1, "", "likelihoodWP"], [26, 2, 1, "", "load_strains"], [26, 5, 1, "", "nLag"], [26, 5, 1, "", "n_events"], [26, 5, 1, "", "pattern"], [26, 2, 1, "", "restore_skymap"], [26, 2, 1, "", "set_delay_index"], [26, 2, 1, "", "set_sky_mask"], [26, 2, 1, "", "set_time_shift"], [26, 2, 1, "", "set_veto"], [26, 2, 1, "", "sub_net_cut"], [26, 2, 1, "", "threshold"], [26, 2, 1, "", "update_sky_map"], [26, 2, 1, "", "update_sky_mask"]], "pycwb.types.network_cluster": [[26, 1, 1, "", "Cluster"], [26, 1, 1, "", "ClusterMeta"], [26, 1, 1, "", "FragmentCluster"]], "pycwb.types.network_cluster.Cluster": [[26, 4, 1, "", "cluster_freq"], [26, 4, 1, "", "cluster_meta"], [26, 4, 1, "", "cluster_rate"], [26, 4, 1, "", "cluster_status"], [26, 4, 1, "", "cluster_time"], [26, 2, 1, "", "from_netcluster"], [26, 2, 1, "", "get_pixel_rates"], [26, 2, 1, "", "get_pixels_with_rate"], [26, 2, 1, "", "get_sparse_map"], [26, 2, 1, "", "get_sparse_map_by_rate"], [26, 4, 1, "", "pixels"], [26, 4, 1, "", "sky_area"], [26, 4, 1, "", "sky_pixel_index"], [26, 4, 1, "", "sky_pixel_map"], [26, 4, 1, "", "sky_time_delay"], [26, 2, 1, "", "to_dict"]], "pycwb.types.network_cluster.ClusterMeta": [[26, 4, 1, "", "a_net"], [26, 4, 1, "", "c_freq"], [26, 4, 1, "", "c_time"], [26, 4, 1, "", "chi2chirp"], [26, 4, 1, "", "chirp"], [26, 4, 1, "", "chirp_efrac"], [26, 4, 1, "", "chirp_ellip"], [26, 4, 1, "", "chirp_pfrac"], [26, 4, 1, "", "ellipticity"], [26, 4, 1, "", "energy"], [26, 4, 1, "", "energy_sky"], [26, 2, 1, "", "from_cData"], [26, 4, 1, "", "g_net"], [26, 4, 1, "", "g_noise"], [26, 4, 1, "", "i_net"], [26, 4, 1, "", "iota"], [26, 4, 1, "", "like_net"], [26, 4, 1, "", "like_sky"], [26, 4, 1, "", "mchirp"], [26, 4, 1, "", "mchirperr"], [26, 4, 1, "", "mchpdf"], [26, 4, 1, "", "ndof"], [26, 4, 1, "", "net_cc"], [26, 4, 1, "", "net_ecor"], [26, 4, 1, "", "net_ed"], [26, 4, 1, "", "net_null"], [26, 4, 1, "", "net_rho"], [26, 4, 1, "", "net_rho2"], [26, 4, 1, "", "norm"], [26, 4, 1, "", "norm_cor"], [26, 4, 1, "", "phi"], [26, 4, 1, "", "psi"], [26, 4, 1, "", "sky_cc"], [26, 4, 1, "", "sky_chi2"], [26, 4, 1, "", "sky_index"], [26, 4, 1, "", "sky_size"], [26, 4, 1, "", "sky_stat"], [26, 4, 1, "", "sub_net"], [26, 4, 1, "", "sub_net2"], [26, 4, 1, "", "theta"], [26, 4, 1, "", "tmrgr"], [26, 4, 1, "", "tmrgrerr"]], "pycwb.types.network_cluster.FragmentCluster": [[26, 4, 1, "", "bpp"], [26, 4, 1, "", "clusters"], [26, 2, 1, "", "dump_cluster"], [26, 2, 1, "", "event_count"], [26, 4, 1, "", "f_high"], [26, 4, 1, "", "f_low"], [26, 2, 1, "", "from_netcluster"], [26, 4, 1, "", "n_pix"], [26, 4, 1, "", "pair"], [26, 2, 1, "", "pixel_count"], [26, 4, 1, "", "rate"], [26, 2, 1, "", "remove_rejected"], [26, 4, 1, "", "run"], [26, 4, 1, "", "shift"], [26, 4, 1, "", "start"], [26, 4, 1, "", "stop"], [26, 4, 1, "", "subnet_threshold"]], "pycwb.types.network_event": [[26, 1, 1, "", "Event"]], "pycwb.types.network_event.Event": [[26, 2, 1, "", "dump"], [26, 2, 1, "", "json"], [26, 2, 1, "", "output"], [26, 2, 1, "", "summary"]], "pycwb.types.network_pixel": [[26, 1, 1, "", "Pixel"], [26, 1, 1, "", "PixelData"]], "pycwb.types.network_pixel.Pixel": [[26, 4, 1, "", "core"], [26, 4, 1, "", "data"], [26, 4, 1, "", "ellipticity"], [26, 4, 1, "", "frequency"], [26, 5, 1, "", "frequency_in_hz"], [26, 2, 1, "", "from_netpixel"], [26, 4, 1, "", "layers"], [26, 4, 1, "", "likelihood"], [26, 4, 1, "", "neighbors"], [26, 4, 1, "", "null"], [26, 4, 1, "", "phi"], [26, 4, 1, "", "polarisation"], [26, 4, 1, "", "rate"], [26, 4, 1, "", "td_amp"], [26, 4, 1, "", "theta"], [26, 4, 1, "", "time"], [26, 5, 1, "", "time_in_seconds"], [26, 2, 1, "", "to_dict"]], "pycwb.types.network_pixel.PixelData": [[26, 4, 1, "", "a_90"], [26, 4, 1, "", "asnr"], [26, 4, 1, "", "index"], [26, 4, 1, "", "noise_rms"], [26, 4, 1, "", "rank"], [26, 2, 1, "", "to_dict"], [26, 4, 1, "", "w_90"], [26, 4, 1, "", "wave"]], "pycwb.types.sparse_series": [[26, 1, 1, "", "SparseTimeFrequencySeries"]], "pycwb.types.sparse_series.SparseTimeFrequencySeries": [[26, 2, 1, "", "add_core"], [26, 2, 1, "", "from_fragment_cluster"], [26, 2, 1, "", "resize"], [26, 2, 1, "", "set_halo"], [26, 2, 1, "", "set_map"], [26, 2, 1, "", "set_sparse_table"], [26, 5, 1, "", "sparse_index"], [26, 5, 1, "", "sparse_lookup"], [26, 5, 1, "", "sparse_map_00"], [26, 5, 1, "", "sparse_map_90"], [26, 2, 1, "", "update_sparse_table"]], "pycwb.types.time_frequency_series": [[26, 1, 1, "", "TimeFrequencySeries"]], "pycwb.types.time_frequency_series.TimeFrequencySeries": [[26, 4, 1, "", "bpp"], [26, 2, 1, "", "copy"], [26, 4, 1, "", "data"], [26, 5, 1, "", "edge"], [26, 5, 1, "", "f_high"], [26, 5, 1, "", "f_low"], [26, 2, 1, "", "forward"], [26, 5, 1, "", "sample_rate"], [26, 5, 1, "", "start"], [26, 5, 1, "", "stop"], [26, 4, 1, "", "w_rate"], [26, 5, 1, "", "wavelet"], [26, 4, 1, "", "whiten_mode"]], "pycwb.types.wdm": [[26, 1, 1, "", "WDM"], [26, 3, 1, "", "declare_function"]], "pycwb.types.wdm.WDM": [[26, 2, 1, "", "allocate"], [26, 4, 1, "", "beta_order"], [26, 2, 1, "", "clone"], [26, 2, 1, "", "get_base_wave"], [26, 2, 1, "", "get_map_00"], [26, 2, 1, "", "get_map_90"], [26, 2, 1, "", "get_slice_size"], [26, 2, 1, "", "lightweight_dump"], [26, 4, 1, "", "m"], [26, 5, 1, "", "m_H"], [26, 5, 1, "", "m_L"], [26, 5, 1, "", "max_index"], [26, 5, 1, "", "max_layer"], [26, 5, 1, "", "max_level"], [26, 5, 1, "", "nSTS"], [26, 5, 1, "", "nWWS"], [26, 5, 1, "", "pWWS"], [26, 4, 1, "", "precision"], [26, 2, 1, "", "release"], [26, 2, 1, "", "set_map_00"], [26, 2, 1, "", "set_map_90"], [26, 2, 1, "", "set_td_filter"], [26, 5, 1, "", "size_at_zero_layer"], [26, 2, 1, "", "t2w"], [26, 5, 1, "", "time_delay_filter_size"], [26, 2, 1, "", "to_type_WDM"], [26, 4, 1, "", "wavelet"]], "pycwb.types.wdm_xtalk": [[26, 1, 1, "", "WDMXTalkCatalog"]], "pycwb.types.wdm_xtalk.WDMXTalkCatalog": [[26, 5, 1, "", "beta_order"], [26, 2, 1, "", "check_layers_with_MRAcatalog"], [26, 2, 1, "", "get_wdmMRA"], [26, 5, 1, "", "layers"], [26, 2, 1, "", "load_MRA"], [26, 5, 1, "", "n_res"], [26, 5, 1, "", "precision"], [26, 5, 1, "", "tag"]], "pycwb.utils": [[27, 0, 0, "-", "check_ROOT"], [27, 0, 0, "-", "image"], [27, 0, 0, "-", "module"], [27, 0, 0, "-", "network"], [27, 0, 0, "-", "yaml_helper"]], "pycwb.utils.check_ROOT": [[27, 3, 1, "", "check_and_load_wavelet"]], "pycwb.utils.image": [[27, 3, 1, "", "align_images"], [27, 3, 1, "", "merge_images"], [27, 3, 1, "", "resize_image"], [27, 3, 1, "", "resize_resolution"]], "pycwb.utils.module": [[27, 3, 1, "", "import_helper"]], "pycwb.utils.network": [[27, 3, 1, "", "cartesian_to_spherical"], [27, 3, 1, "", "max_delay"], [27, 3, 1, "", "spherical_to_cartesian"]], "pycwb.utils.yaml_helper": [[27, 3, 1, "", "load_yaml"], [27, 3, 1, "", "set_default"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"us": 0, "pycwb": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32], "scientif": 0, "public": 0, "cite": 0, "softwar": 0, "cwb": [0, 3], "describ": 0, "welcom": 1, "": 1, "document": [1, 2], "get": 1, "start": 1, "instal": [1, 2], "run": 1, "your": 1, "first": 1, "burst": 1, "search": [1, 6, 30, 32], "copi": 1, "exampl": 1, "configur": 1, "folder": 1, "go": [1, 32], "deeper": [1, 32], "step": [1, 30], "inject": [1, 28, 29, 30, 31], "indic": 1, "tabl": 1, "guid": 2, "conda": 2, "pip": 2, "from": 2, "sourc": 2, "other": 2, "scenario": 2, "build": 2, "note": 3, "modif": 3, "core": 3, "code": 3, "cmakelist": 3, "txt": 3, "fix": 3, "warn": 3, "remov": 3, "some": 3, "print": 3, "packag": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "subpackag": [6, 10], "submodul": [6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "modul": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "content": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "config": 7, "constant": 8, "project_const": 8, "user_parameters_schema": 8, "messeng": 9, "autoencod": 11, "cwb_autoencod": 11, "catalog": 12, "coher": 13, "coherence_lit": 13, "cwb_convers": 14, "cluster": 14, "pixel": 14, "seri": 14, "sparse_seri": [14, 23, 26], "data_condit": 15, "regress": 15, "whiten": 15, "job_seg": 16, "dq_segment": 16, "frame": 16, "plot": [16, 20], "super_lag": 16, "likelihood": 17, "logger": 18, "multi_resolution_wdm": 19, "wdm": [19, 26], "cluster_statist": 20, "event": 20, "spectrogram": 20, "read_data": 21, "data_check": 21, "mdc": 21, "reconstruct": 22, "getmrawaveform": 22, "sparse_t": 23, "super_clust": 24, "superclust": 24, "web_view": 25, "creat": 25, "type": 26, "data_quality_fil": 26, "detector": 26, "job": [26, 32], "network": [26, 27], "network_clust": 26, "network_ev": 26, "network_pixel": 26, "time_frequency_seri": 26, "wdm_xtalk": 26, "util": 27, "check_root": 27, "imag": 27, "yaml_help": 27, "batch": 28, "python": 28, "script": 28, "custom": 29, "waveform": 29, "gener": 29, "perform": 31, "multi": 31, "control": 32, "data": 32, "analysi": 32, "tutori": 33}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Use of pycWB in Scientific Publications": [[0, "use-of-pycwb-in-scientific-publications"]], "Citing the pycWB software": [[0, "citing-the-pycwb-software"]], "Citing the cWB software": [[0, "citing-the-cwb-software"]], "Citing the scientific publications that describe the software": [[0, "citing-the-scientific-publications-that-describe-the-software"]], "Welcome to pycWB\u2019s documentation!": [[1, "welcome-to-pycwb-s-documentation"]], "Getting Started": [[1, "getting-started"]], "Installation": [[1, "installation"]], "Run your first burst search": [[1, "run-your-first-burst-search"]], "Copy the example configuration folder": [[1, "copy-the-example-configuration-folder"]], "Start searching!": [[1, "start-searching"]], "Go deeper into pycWB.search": [[1, "go-deeper-into-pycwb-search"], [32, "go-deeper-into-pycwb-search"]], "Step by step injection!": [[1, "step-by-step-injection"]], "Indices and tables": [[1, "indices-and-tables"]], "Installation Guide": [[2, "installation-guide"]], "Installation with Conda/Pip": [[2, "installation-with-conda-pip"]], "Installing from Source with Conda and Pip": [[2, "installing-from-source-with-conda-and-pip"]], "Other scenarios": [[2, "other-scenarios"]], "Building the Documentation": [[2, "building-the-documentation"]], "Notes on modifications of cWB core code": [[3, "notes-on-modifications-of-cwb-core-code"]], "Modifications on CMakeLists.txt": [[3, "modifications-on-cmakelists-txt"]], "Fixed Warning": [[3, "fixed-warning"]], "Removed Some Printing": [[3, "removed-some-printing"]], "pycwb": [[4, "pycwb"]], "pycWB": [[5, "pycwb"]], "pycwb package": [[6, "pycwb-package"]], "Subpackages": [[6, "subpackages"], [10, "subpackages"]], "Submodules": [[6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"], [26, "submodules"], [27, "submodules"]], "pycwb.search module": [[6, "module-pycwb.search"]], "Module contents": [[6, "module-pycwb"], [7, "module-pycwb.config"], [8, "module-pycwb.constants"], [9, "module-pycwb.messenger"], [10, "module-pycwb.modules"], [11, "module-pycwb.modules.autoencoder"], [12, "module-pycwb.modules.catalog"], [13, "module-pycwb.modules.coherence"], [14, "module-pycwb.modules.cwb_conversions"], [15, "module-pycwb.modules.data_conditioning"], [16, "module-pycwb.modules.job_segment"], [17, "module-pycwb.modules.likelihood"], [18, "module-pycwb.modules.logger"], [19, "module-pycwb.modules.multi_resolution_wdm"], [20, "module-pycwb.modules.plot"], [21, "module-pycwb.modules.read_data"], [22, "module-pycwb.modules.reconstruction"], [23, "module-pycwb.modules.sparse_series"], [24, "module-pycwb.modules.super_cluster"], [25, "module-pycwb.modules.web_viewer"], [26, "module-pycwb.types"], [27, "module-pycwb.utils"]], "pycwb.config package": [[7, "pycwb-config-package"]], "pycwb.config.config module": [[7, "module-pycwb.config.config"]], "pycwb.constants package": [[8, "pycwb-constants-package"]], "pycwb.constants.project_constants module": [[8, "module-pycwb.constants.project_constants"]], "pycwb.constants.user_parameters_schema module": [[8, "module-pycwb.constants.user_parameters_schema"]], "pycwb.messenger package": [[9, "pycwb-messenger-package"]], "pycwb.messenger.messenger module": [[9, "module-pycwb.messenger.messenger"]], "pycwb.modules package": [[10, "pycwb-modules-package"]], "pycwb.modules.autoencoder package": [[11, "pycwb-modules-autoencoder-package"]], "pycwb.modules.autoencoder.autoencoder module": [[11, "module-pycwb.modules.autoencoder.autoencoder"]], "pycwb.modules.autoencoder.cwb_autoencoder module": [[11, "module-pycwb.modules.autoencoder.cwb_autoencoder"]], "pycwb.modules.catalog package": [[12, "pycwb-modules-catalog-package"]], "pycwb.modules.catalog.catalog module": [[12, "module-pycwb.modules.catalog.catalog"]], "pycwb.modules.coherence package": [[13, "pycwb-modules-coherence-package"]], "pycwb.modules.coherence.coherence module": [[13, "module-pycwb.modules.coherence.coherence"]], "pycwb.modules.coherence.coherence_lite module": [[13, "module-pycwb.modules.coherence.coherence_lite"]], "pycwb.modules.cwb_conversions package": [[14, "pycwb-modules-cwb-conversions-package"]], "pycwb.modules.cwb_conversions.cluster module": [[14, "module-pycwb.modules.cwb_conversions.cluster"]], "pycwb.modules.cwb_conversions.pixel module": [[14, "module-pycwb.modules.cwb_conversions.pixel"]], "pycwb.modules.cwb_conversions.series module": [[14, "module-pycwb.modules.cwb_conversions.series"]], "pycwb.modules.cwb_conversions.sparse_series module": [[14, "module-pycwb.modules.cwb_conversions.sparse_series"]], "pycwb.modules.data_conditioning package": [[15, "pycwb-modules-data-conditioning-package"]], "pycwb.modules.data_conditioning.data_conditioning module": [[15, "module-pycwb.modules.data_conditioning.data_conditioning"]], "pycwb.modules.data_conditioning.regression module": [[15, "module-pycwb.modules.data_conditioning.regression"]], "pycwb.modules.data_conditioning.whitening module": [[15, "module-pycwb.modules.data_conditioning.whitening"]], "pycwb.modules.job_segment package": [[16, "pycwb-modules-job-segment-package"]], "pycwb.modules.job_segment.dq_segment module": [[16, "module-pycwb.modules.job_segment.dq_segment"]], "pycwb.modules.job_segment.frame module": [[16, "module-pycwb.modules.job_segment.frame"]], "pycwb.modules.job_segment.job_segment module": [[16, "module-pycwb.modules.job_segment.job_segment"]], "pycwb.modules.job_segment.plots module": [[16, "module-pycwb.modules.job_segment.plots"]], "pycwb.modules.job_segment.super_lag module": [[16, "module-pycwb.modules.job_segment.super_lag"]], "pycwb.modules.likelihood package": [[17, "pycwb-modules-likelihood-package"]], "pycwb.modules.likelihood.likelihood module": [[17, "module-pycwb.modules.likelihood.likelihood"]], "pycwb.modules.logger package": [[18, "pycwb-modules-logger-package"]], "pycwb.modules.logger.logger module": [[18, "module-pycwb.modules.logger.logger"]], "pycwb.modules.multi_resolution_wdm package": [[19, "pycwb-modules-multi-resolution-wdm-package"]], "pycwb.modules.multi_resolution_wdm.wdm module": [[19, "module-pycwb.modules.multi_resolution_wdm.wdm"]], "pycwb.modules.plot package": [[20, "pycwb-modules-plot-package"]], "pycwb.modules.plot.cluster_statistics module": [[20, "module-pycwb.modules.plot.cluster_statistics"]], "pycwb.modules.plot.event module": [[20, "module-pycwb.modules.plot.event"]], "pycwb.modules.plot.spectrogram module": [[20, "module-pycwb.modules.plot.spectrogram"]], "pycwb.modules.read_data package": [[21, "pycwb-modules-read-data-package"]], "pycwb.modules.read_data.data_check module": [[21, "module-pycwb.modules.read_data.data_check"]], "pycwb.modules.read_data.mdc module": [[21, "module-pycwb.modules.read_data.mdc"]], "pycwb.modules.read_data.read_data module": [[21, "module-pycwb.modules.read_data.read_data"]], "pycwb.modules.reconstruction package": [[22, "pycwb-modules-reconstruction-package"]], "pycwb.modules.reconstruction.getMRAwaveform module": [[22, "module-pycwb.modules.reconstruction.getMRAwaveform"]], "pycwb.modules.sparse_series package": [[23, "pycwb-modules-sparse-series-package"]], "pycwb.modules.sparse_series.sparse_table module": [[23, "module-pycwb.modules.sparse_series.sparse_table"]], "pycwb.modules.super_cluster package": [[24, "pycwb-modules-super-cluster-package"]], "pycwb.modules.super_cluster.supercluster module": [[24, "module-pycwb.modules.super_cluster.supercluster"]], "pycwb.modules.web_viewer package": [[25, "pycwb-modules-web-viewer-package"]], "pycwb.modules.web_viewer.create module": [[25, "module-pycwb.modules.web_viewer.create"]], "pycwb.types package": [[26, "pycwb-types-package"]], "pycwb.types.data_quality_file module": [[26, "module-pycwb.types.data_quality_file"]], "pycwb.types.detector module": [[26, "module-pycwb.types.detector"]], "pycwb.types.job module": [[26, "module-pycwb.types.job"]], "pycwb.types.network module": [[26, "module-pycwb.types.network"]], "pycwb.types.network_cluster module": [[26, "module-pycwb.types.network_cluster"]], "pycwb.types.network_event module": [[26, "module-pycwb.types.network_event"]], "pycwb.types.network_pixel module": [[26, "module-pycwb.types.network_pixel"]], "pycwb.types.sparse_series module": [[26, "module-pycwb.types.sparse_series"]], "pycwb.types.time_frequency_series module": [[26, "module-pycwb.types.time_frequency_series"]], "pycwb.types.wdm module": [[26, "module-pycwb.types.wdm"]], "pycwb.types.wdm_xtalk module": [[26, "module-pycwb.types.wdm_xtalk"]], "pycwb.utils package": [[27, "pycwb-utils-package"]], "pycwb.utils.check_ROOT module": [[27, "module-pycwb.utils.check_ROOT"]], "pycwb.utils.image module": [[27, "module-pycwb.utils.image"]], "pycwb.utils.module module": [[27, "module-pycwb.utils.module"]], "pycwb.utils.network module": [[27, "module-pycwb.utils.network"]], "pycwb.utils.yaml_helper module": [[27, "module-pycwb.utils.yaml_helper"]], "Batch injection with Python Script": [[28, "batch-injection-with-python-script"]], "Injections with Customized Waveform Generation": [[29, "injections-with-customized-waveform-generation"]], "Step by step injection search": [[30, "step-by-step-injection-search"]], "Performing Multi-Injection": [[31, "performing-multi-injection"]], "Job Control": [[32, "job-control"]], "Data Analysis": [[32, "data-analysis"]], "Tutorial": [[33, "tutorial"]]}, "indexentries": {"analyze_job_segment() (in module pycwb.search)": [[6, "pycwb.search.analyze_job_segment"]], "module": [[6, "module-pycwb"], [6, "module-pycwb.search"], [7, "module-pycwb.config"], [7, "module-pycwb.config.config"], [8, "module-pycwb.constants"], [8, "module-pycwb.constants.project_constants"], [8, "module-pycwb.constants.user_parameters_schema"], [9, "module-pycwb.messenger"], [9, "module-pycwb.messenger.messenger"], [10, "module-pycwb.modules"], [11, "module-pycwb.modules.autoencoder"], [11, "module-pycwb.modules.autoencoder.autoencoder"], [11, "module-pycwb.modules.autoencoder.cwb_autoencoder"], [12, "module-pycwb.modules.catalog"], [12, "module-pycwb.modules.catalog.catalog"], [13, "module-pycwb.modules.coherence"], [13, "module-pycwb.modules.coherence.coherence"], [13, "module-pycwb.modules.coherence.coherence_lite"], [14, "module-pycwb.modules.cwb_conversions"], [14, "module-pycwb.modules.cwb_conversions.cluster"], [14, "module-pycwb.modules.cwb_conversions.pixel"], [14, "module-pycwb.modules.cwb_conversions.series"], [14, "module-pycwb.modules.cwb_conversions.sparse_series"], [15, "module-pycwb.modules.data_conditioning"], [15, "module-pycwb.modules.data_conditioning.data_conditioning"], [15, "module-pycwb.modules.data_conditioning.regression"], [15, "module-pycwb.modules.data_conditioning.whitening"], [16, "module-pycwb.modules.job_segment"], [16, "module-pycwb.modules.job_segment.dq_segment"], [16, "module-pycwb.modules.job_segment.frame"], [16, "module-pycwb.modules.job_segment.job_segment"], [16, "module-pycwb.modules.job_segment.plots"], [16, "module-pycwb.modules.job_segment.super_lag"], [17, "module-pycwb.modules.likelihood"], [17, "module-pycwb.modules.likelihood.likelihood"], [18, "module-pycwb.modules.logger"], [18, "module-pycwb.modules.logger.logger"], [19, "module-pycwb.modules.multi_resolution_wdm"], [19, "module-pycwb.modules.multi_resolution_wdm.wdm"], [20, "module-pycwb.modules.plot"], [20, "module-pycwb.modules.plot.cluster_statistics"], [20, "module-pycwb.modules.plot.event"], [20, "module-pycwb.modules.plot.spectrogram"], [21, "module-pycwb.modules.read_data"], [21, "module-pycwb.modules.read_data.data_check"], [21, "module-pycwb.modules.read_data.mdc"], [21, "module-pycwb.modules.read_data.read_data"], [22, "module-pycwb.modules.reconstruction"], [22, "module-pycwb.modules.reconstruction.getMRAwaveform"], [23, "module-pycwb.modules.sparse_series"], [23, "module-pycwb.modules.sparse_series.sparse_table"], [24, "module-pycwb.modules.super_cluster"], [24, "module-pycwb.modules.super_cluster.supercluster"], [25, "module-pycwb.modules.web_viewer"], [25, "module-pycwb.modules.web_viewer.create"], [26, "module-pycwb.types"], [26, "module-pycwb.types.data_quality_file"], [26, "module-pycwb.types.detector"], [26, "module-pycwb.types.job"], [26, "module-pycwb.types.network"], [26, "module-pycwb.types.network_cluster"], [26, "module-pycwb.types.network_event"], [26, "module-pycwb.types.network_pixel"], [26, "module-pycwb.types.sparse_series"], [26, "module-pycwb.types.time_frequency_series"], [26, "module-pycwb.types.wdm"], [26, "module-pycwb.types.wdm_xtalk"], [27, "module-pycwb.utils"], [27, "module-pycwb.utils.check_ROOT"], [27, "module-pycwb.utils.image"], [27, "module-pycwb.utils.module"], [27, "module-pycwb.utils.network"], [27, "module-pycwb.utils.yaml_helper"]], "pycwb": [[6, "module-pycwb"]], "pycwb.search": [[6, "module-pycwb.search"]], "search() (in module pycwb.search)": [[6, "pycwb.search.search"]], "config (class in pycwb.config.config)": [[7, "pycwb.config.config.Config"]], "add_derived_key() (pycwb.config.config.config method)": [[7, "pycwb.config.config.Config.add_derived_key"]], "check_mra_catalog() (pycwb.config.config.config method)": [[7, "pycwb.config.config.Config.check_MRA_catalog"]], "check_file() (pycwb.config.config.config static method)": [[7, "pycwb.config.config.Config.check_file"]], "check_lagstep() (pycwb.config.config.config method)": [[7, "pycwb.config.config.Config.check_lagStep"]], "get_lag_buffer() (pycwb.config.config.config method)": [[7, "pycwb.config.config.Config.get_lag_buffer"]], "pycwb.config": [[7, "module-pycwb.config"]], "pycwb.config.config": [[7, "module-pycwb.config.config"]], "pycwb.constants": [[8, "module-pycwb.constants"]], "pycwb.constants.project_constants": [[8, "module-pycwb.constants.project_constants"]], "pycwb.constants.user_parameters_schema": [[8, "module-pycwb.constants.user_parameters_schema"]], "import_helper() (in module pycwb.messenger.messenger)": [[9, "pycwb.messenger.messenger.import_helper"]], "pycwb.messenger": [[9, "module-pycwb.messenger"]], "pycwb.messenger.messenger": [[9, "module-pycwb.messenger.messenger"]], "pycwb.modules": [[10, "module-pycwb.modules"]], "autoencoder (class in pycwb.modules.autoencoder.cwb_autoencoder)": [[11, "pycwb.modules.autoencoder.cwb_autoencoder.AutoEncoder"]], "mse() (in module pycwb.modules.autoencoder.cwb_autoencoder)": [[11, "pycwb.modules.autoencoder.cwb_autoencoder.MSE"]], "autoencoder() (in module pycwb.modules.autoencoder.cwb_autoencoder)": [[11, "pycwb.modules.autoencoder.cwb_autoencoder.autoencoder"]], "get_glitchness() (in module pycwb.modules.autoencoder.autoencoder)": [[11, "pycwb.modules.autoencoder.autoencoder.get_glitchness"]], "get_glness() (pycwb.modules.autoencoder.cwb_autoencoder.autoencoder method)": [[11, "pycwb.modules.autoencoder.cwb_autoencoder.AutoEncoder.get_glness"]], "pycwb.modules.autoencoder": [[11, "module-pycwb.modules.autoencoder"]], "pycwb.modules.autoencoder.autoencoder": [[11, "module-pycwb.modules.autoencoder.autoencoder"]], "pycwb.modules.autoencoder.cwb_autoencoder": [[11, "module-pycwb.modules.autoencoder.cwb_autoencoder"]], "set_weights() (pycwb.modules.autoencoder.cwb_autoencoder.autoencoder method)": [[11, "pycwb.modules.autoencoder.cwb_autoencoder.AutoEncoder.set_weights"]], "timeseries_processing() (in module pycwb.modules.autoencoder.cwb_autoencoder)": [[11, "pycwb.modules.autoencoder.cwb_autoencoder.timeseries_processing"]], "add_events_to_catalog() (in module pycwb.modules.catalog.catalog)": [[12, "pycwb.modules.catalog.catalog.add_events_to_catalog"]], "create_catalog() (in module pycwb.modules.catalog.catalog)": [[12, "pycwb.modules.catalog.catalog.create_catalog"]], "pycwb.modules.catalog": [[12, "module-pycwb.modules.catalog"]], "pycwb.modules.catalog.catalog": [[12, "module-pycwb.modules.catalog.catalog"]], "coherence() (in module pycwb.modules.coherence.coherence)": [[13, "pycwb.modules.coherence.coherence.coherence"]], "coherence() (in module pycwb.modules.coherence.coherence_lite)": [[13, "pycwb.modules.coherence.coherence_lite.coherence"]], "coherence_parallel() (in module pycwb.modules.coherence.coherence)": [[13, "pycwb.modules.coherence.coherence.coherence_parallel"]], "coherence_parallel() (in module pycwb.modules.coherence.coherence_lite)": [[13, "pycwb.modules.coherence.coherence_lite.coherence_parallel"]], "pycwb.modules.coherence": [[13, "module-pycwb.modules.coherence"]], "pycwb.modules.coherence.coherence": [[13, "module-pycwb.modules.coherence.coherence"]], "pycwb.modules.coherence.coherence_lite": [[13, "module-pycwb.modules.coherence.coherence_lite"]], "wseries_to_matrix() (in module pycwb.modules.cwb_conversions.series)": [[14, "pycwb.modules.cwb_conversions.series.WSeries_to_matrix"]], "c_double_p (in module pycwb.modules.cwb_conversions.series)": [[14, "pycwb.modules.cwb_conversions.series.c_double_p"]], "convert_cluster_meta_to_cdata() (in module pycwb.modules.cwb_conversions.cluster)": [[14, "pycwb.modules.cwb_conversions.cluster.convert_cluster_meta_to_cData"]], "convert_fragment_clusters_to_netcluster() (in module pycwb.modules.cwb_conversions.cluster)": [[14, "pycwb.modules.cwb_conversions.cluster.convert_fragment_clusters_to_netcluster"]], "convert_pixel_to_netpixel() (in module pycwb.modules.cwb_conversions.pixel)": [[14, "pycwb.modules.cwb_conversions.pixel.convert_pixel_to_netpixel"]], "convert_pycbc_timeseries_to_wavearray() (in module pycwb.modules.cwb_conversions.series)": [[14, "pycwb.modules.cwb_conversions.series.convert_pycbc_timeseries_to_wavearray"]], "convert_sparse_series_to_sseries() (in module pycwb.modules.cwb_conversions.sparse_series)": [[14, "pycwb.modules.cwb_conversions.sparse_series.convert_sparse_series_to_sseries"]], "convert_time_frequency_series_to_wseries() (in module pycwb.modules.cwb_conversions.series)": [[14, "pycwb.modules.cwb_conversions.series.convert_time_frequency_series_to_wseries"]], "convert_timeseries_to_wavearray() (in module pycwb.modules.cwb_conversions.series)": [[14, "pycwb.modules.cwb_conversions.series.convert_timeseries_to_wavearray"]], "convert_to_pixdata() (in module pycwb.modules.cwb_conversions.pixel)": [[14, "pycwb.modules.cwb_conversions.pixel.convert_to_pixdata"]], "convert_to_wavearray() (in module pycwb.modules.cwb_conversions.series)": [[14, "pycwb.modules.cwb_conversions.series.convert_to_wavearray"]], "convert_to_wseries() (in module pycwb.modules.cwb_conversions.series)": [[14, "pycwb.modules.cwb_conversions.series.convert_to_wseries"]], "convert_wavearray_to_pycbc_timeseries() (in module pycwb.modules.cwb_conversions.series)": [[14, "pycwb.modules.cwb_conversions.series.convert_wavearray_to_pycbc_timeseries"]], "convert_wavearray_to_timeseries() (in module pycwb.modules.cwb_conversions.series)": [[14, "pycwb.modules.cwb_conversions.series.convert_wavearray_to_timeseries"]], "convert_wseries_to_pycbc_timeseries() (in module pycwb.modules.cwb_conversions.series)": [[14, "pycwb.modules.cwb_conversions.series.convert_wseries_to_pycbc_timeseries"]], "convert_wseries_to_time_frequency_series() (in module pycwb.modules.cwb_conversions.series)": [[14, "pycwb.modules.cwb_conversions.series.convert_wseries_to_time_frequency_series"]], "convert_wseries_to_timeseries() (in module pycwb.modules.cwb_conversions.series)": [[14, "pycwb.modules.cwb_conversions.series.convert_wseries_to_timeseries"]], "declare_function() (in module pycwb.modules.cwb_conversions.series)": [[14, "pycwb.modules.cwb_conversions.series.declare_function"]], "pycwb.modules.cwb_conversions": [[14, "module-pycwb.modules.cwb_conversions"]], "pycwb.modules.cwb_conversions.cluster": [[14, "module-pycwb.modules.cwb_conversions.cluster"]], "pycwb.modules.cwb_conversions.pixel": [[14, "module-pycwb.modules.cwb_conversions.pixel"]], "pycwb.modules.cwb_conversions.series": [[14, "module-pycwb.modules.cwb_conversions.series"]], "pycwb.modules.cwb_conversions.sparse_series": [[14, "module-pycwb.modules.cwb_conversions.sparse_series"]], "data_conditioning() (in module pycwb.modules.data_conditioning.data_conditioning)": [[15, "pycwb.modules.data_conditioning.data_conditioning.data_conditioning"]], "pycwb.modules.data_conditioning": [[15, "module-pycwb.modules.data_conditioning"]], "pycwb.modules.data_conditioning.data_conditioning": [[15, "module-pycwb.modules.data_conditioning.data_conditioning"]], "pycwb.modules.data_conditioning.regression": [[15, "module-pycwb.modules.data_conditioning.regression"]], "pycwb.modules.data_conditioning.whitening": [[15, "module-pycwb.modules.data_conditioning.whitening"]], "regression() (in module pycwb.modules.data_conditioning.regression)": [[15, "pycwb.modules.data_conditioning.regression.regression"]], "whitening() (in module pycwb.modules.data_conditioning.whitening)": [[15, "pycwb.modules.data_conditioning.whitening.whitening"]], "add_slag_shifts() (in module pycwb.modules.job_segment.super_lag)": [[16, "pycwb.modules.job_segment.super_lag.add_slag_shifts"]], "create_job_segment_from_config() (in module pycwb.modules.job_segment.job_segment)": [[16, "pycwb.modules.job_segment.job_segment.create_job_segment_from_config"]], "create_job_segment_from_injection() (in module pycwb.modules.job_segment.job_segment)": [[16, "pycwb.modules.job_segment.job_segment.create_job_segment_from_injection"]], "get_frame_meta() (in module pycwb.modules.job_segment.frame)": [[16, "pycwb.modules.job_segment.frame.get_frame_meta"]], "get_job_list() (in module pycwb.modules.job_segment.dq_segment)": [[16, "pycwb.modules.job_segment.dq_segment.get_job_list"]], "get_seg_list() (in module pycwb.modules.job_segment.dq_segment)": [[16, "pycwb.modules.job_segment.dq_segment.get_seg_list"]], "get_slag_job_list() (in module pycwb.modules.job_segment.super_lag)": [[16, "pycwb.modules.job_segment.super_lag.get_slag_job_list"]], "get_slag_list() (in module pycwb.modules.job_segment.super_lag)": [[16, "pycwb.modules.job_segment.super_lag.get_slag_list"]], "merge_seg_list() (in module pycwb.modules.job_segment.dq_segment)": [[16, "pycwb.modules.job_segment.dq_segment.merge_seg_list"]], "plot_seg_list() (in module pycwb.modules.job_segment.plots)": [[16, "pycwb.modules.job_segment.plots.plot_seg_list"]], "pycwb.modules.job_segment": [[16, "module-pycwb.modules.job_segment"]], "pycwb.modules.job_segment.dq_segment": [[16, "module-pycwb.modules.job_segment.dq_segment"]], "pycwb.modules.job_segment.frame": [[16, "module-pycwb.modules.job_segment.frame"]], "pycwb.modules.job_segment.job_segment": [[16, "module-pycwb.modules.job_segment.job_segment"]], "pycwb.modules.job_segment.plots": [[16, "module-pycwb.modules.job_segment.plots"]], "pycwb.modules.job_segment.super_lag": [[16, "module-pycwb.modules.job_segment.super_lag"]], "read_seg_list() (in module pycwb.modules.job_segment.dq_segment)": [[16, "pycwb.modules.job_segment.dq_segment.read_seg_list"]], "select_frame_list() (in module pycwb.modules.job_segment.frame)": [[16, "pycwb.modules.job_segment.frame.select_frame_list"]], "select_job_segment() (in module pycwb.modules.job_segment.job_segment)": [[16, "pycwb.modules.job_segment.job_segment.select_job_segment"]], "likelihood() (in module pycwb.modules.likelihood.likelihood)": [[17, "pycwb.modules.likelihood.likelihood.likelihood"]], "pycwb.modules.likelihood": [[17, "module-pycwb.modules.likelihood"]], "pycwb.modules.likelihood.likelihood": [[17, "module-pycwb.modules.likelihood.likelihood"]], "save_likelihood_data() (in module pycwb.modules.likelihood.likelihood)": [[17, "pycwb.modules.likelihood.likelihood.save_likelihood_data"]], "logger_init() (in module pycwb.modules.logger.logger)": [[18, "pycwb.modules.logger.logger.logger_init"]], "pycwb.modules.logger": [[18, "module-pycwb.modules.logger"]], "pycwb.modules.logger.logger": [[18, "module-pycwb.modules.logger.logger"]], "create_wdm_for_level() (in module pycwb.modules.multi_resolution_wdm.wdm)": [[19, "pycwb.modules.multi_resolution_wdm.wdm.create_wdm_for_level"]], "create_wdm_set() (in module pycwb.modules.multi_resolution_wdm.wdm)": [[19, "pycwb.modules.multi_resolution_wdm.wdm.create_wdm_set"]], "pycwb.modules.multi_resolution_wdm": [[19, "module-pycwb.modules.multi_resolution_wdm"]], "pycwb.modules.multi_resolution_wdm.wdm": [[19, "module-pycwb.modules.multi_resolution_wdm.wdm"]], "plot_event_on_spectrogram() (in module pycwb.modules.plot.event)": [[20, "pycwb.modules.plot.event.plot_event_on_spectrogram"]], "plot_spectrogram() (in module pycwb.modules.plot.spectrogram)": [[20, "pycwb.modules.plot.spectrogram.plot_spectrogram"]], "plot_statistics() (in module pycwb.modules.plot.cluster_statistics)": [[20, "pycwb.modules.plot.cluster_statistics.plot_statistics"]], "pycwb.modules.plot": [[20, "module-pycwb.modules.plot"]], "pycwb.modules.plot.cluster_statistics": [[20, "module-pycwb.modules.plot.cluster_statistics"]], "pycwb.modules.plot.event": [[20, "module-pycwb.modules.plot.event"]], "pycwb.modules.plot.spectrogram": [[20, "module-pycwb.modules.plot.spectrogram"]], "check_and_resample() (in module pycwb.modules.read_data.data_check)": [[21, "pycwb.modules.read_data.data_check.check_and_resample"]], "data_check() (in module pycwb.modules.read_data.data_check)": [[21, "pycwb.modules.read_data.data_check.data_check"]], "generate_from_pycbc() (in module pycwb.modules.read_data.mdc)": [[21, "pycwb.modules.read_data.mdc.generate_from_pycbc"]], "generate_injection() (in module pycwb.modules.read_data.mdc)": [[21, "pycwb.modules.read_data.mdc.generate_injection"]], "generate_injection_from_config() (in module pycwb.modules.read_data.mdc)": [[21, "pycwb.modules.read_data.mdc.generate_injection_from_config"]], "generate_noise() (in module pycwb.modules.read_data.mdc)": [[21, "pycwb.modules.read_data.mdc.generate_noise"]], "project_to_detector() (in module pycwb.modules.read_data.mdc)": [[21, "pycwb.modules.read_data.mdc.project_to_detector"]], "pycwb.modules.read_data": [[21, "module-pycwb.modules.read_data"]], "pycwb.modules.read_data.data_check": [[21, "module-pycwb.modules.read_data.data_check"]], "pycwb.modules.read_data.mdc": [[21, "module-pycwb.modules.read_data.mdc"]], "pycwb.modules.read_data.read_data": [[21, "module-pycwb.modules.read_data.read_data"]], "read_from_catalog() (in module pycwb.modules.read_data.read_data)": [[21, "pycwb.modules.read_data.read_data.read_from_catalog"]], "read_from_gwf() (in module pycwb.modules.read_data.read_data)": [[21, "pycwb.modules.read_data.read_data.read_from_gwf"]], "read_from_job_segment() (in module pycwb.modules.read_data.read_data)": [[21, "pycwb.modules.read_data.read_data.read_from_job_segment"]], "read_from_online() (in module pycwb.modules.read_data.read_data)": [[21, "pycwb.modules.read_data.read_data.read_from_online"]], "save_to_gwf() (in module pycwb.modules.read_data.mdc)": [[21, "pycwb.modules.read_data.mdc.save_to_gwf"]], "get_mra_wave() (in module pycwb.modules.reconstruction.getmrawaveform)": [[22, "pycwb.modules.reconstruction.getMRAwaveform.get_MRA_wave"]], "get_network_mra_wave() (in module pycwb.modules.reconstruction.getmrawaveform)": [[22, "pycwb.modules.reconstruction.getMRAwaveform.get_network_MRA_wave"]], "pycwb.modules.reconstruction": [[22, "module-pycwb.modules.reconstruction"]], "pycwb.modules.reconstruction.getmrawaveform": [[22, "module-pycwb.modules.reconstruction.getMRAwaveform"]], "pycwb.modules.sparse_series": [[23, "module-pycwb.modules.sparse_series"]], "pycwb.modules.sparse_series.sparse_table": [[23, "module-pycwb.modules.sparse_series.sparse_table"]], "sparse_table_from_fragment_clusters() (in module pycwb.modules.sparse_series.sparse_table)": [[23, "pycwb.modules.sparse_series.sparse_table.sparse_table_from_fragment_clusters"]], "pycwb.modules.super_cluster": [[24, "module-pycwb.modules.super_cluster"]], "pycwb.modules.super_cluster.supercluster": [[24, "module-pycwb.modules.super_cluster.supercluster"]], "supercluster() (in module pycwb.modules.super_cluster.supercluster)": [[24, "pycwb.modules.super_cluster.supercluster.supercluster"]], "create_web_viewer() (in module pycwb.modules.web_viewer.create)": [[25, "pycwb.modules.web_viewer.create.create_web_viewer"]], "pycwb.modules.web_viewer": [[25, "module-pycwb.modules.web_viewer"]], "pycwb.modules.web_viewer.create": [[25, "module-pycwb.modules.web_viewer.create"]], "cluster (class in pycwb.types.network_cluster)": [[26, "pycwb.types.network_cluster.Cluster"]], "clustermeta (class in pycwb.types.network_cluster)": [[26, "pycwb.types.network_cluster.ClusterMeta"]], "dqfile (class in pycwb.types.data_quality_file)": [[26, "pycwb.types.data_quality_file.DQFile"]], "detector (class in pycwb.types.detector)": [[26, "pycwb.types.detector.Detector"]], "event (class in pycwb.types.network_event)": [[26, "pycwb.types.network_event.Event"]], "fragmentcluster (class in pycwb.types.network_cluster)": [[26, "pycwb.types.network_cluster.FragmentCluster"]], "framefile (class in pycwb.types.job)": [[26, "pycwb.types.job.FrameFile"]], "network (class in pycwb.types.network)": [[26, "pycwb.types.network.Network"]], "pixel (class in pycwb.types.network_pixel)": [[26, "pycwb.types.network_pixel.Pixel"]], "pixeldata (class in pycwb.types.network_pixel)": [[26, "pycwb.types.network_pixel.PixelData"]], "slag (class in pycwb.types.job)": [[26, "pycwb.types.job.SLag"]], "sparsetimefrequencyseries (class in pycwb.types.sparse_series)": [[26, "pycwb.types.sparse_series.SparseTimeFrequencySeries"]], "timefrequencyseries (class in pycwb.types.time_frequency_series)": [[26, "pycwb.types.time_frequency_series.TimeFrequencySeries"]], "wdm (class in pycwb.types.wdm)": [[26, "pycwb.types.wdm.WDM"]], "wdmxtalkcatalog (class in pycwb.types.wdm_xtalk)": [[26, "pycwb.types.wdm_xtalk.WDMXTalkCatalog"]], "wavesegment (class in pycwb.types.job)": [[26, "pycwb.types.job.WaveSegment"]], "a_90 (pycwb.types.network_pixel.pixeldata attribute)": [[26, "pycwb.types.network_pixel.PixelData.a_90"]], "a_net (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.a_net"]], "add_core() (pycwb.types.sparse_series.sparsetimefrequencyseries method)": [[26, "pycwb.types.sparse_series.SparseTimeFrequencySeries.add_core"]], "add_detector() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.add_detector"]], "add_wavelet() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.add_wavelet"]], "allocate() (pycwb.types.wdm.wdm method)": [[26, "pycwb.types.wdm.WDM.allocate"]], "asnr (pycwb.types.network_pixel.pixeldata attribute)": [[26, "pycwb.types.network_pixel.PixelData.asnr"]], "beta_order (pycwb.types.wdm.wdm attribute)": [[26, "pycwb.types.wdm.WDM.beta_order"]], "beta_order (pycwb.types.wdm_xtalk.wdmxtalkcatalog property)": [[26, "pycwb.types.wdm_xtalk.WDMXTalkCatalog.beta_order"]], "bpp (pycwb.types.network_cluster.fragmentcluster attribute)": [[26, "pycwb.types.network_cluster.FragmentCluster.bpp"]], "bpp (pycwb.types.time_frequency_series.timefrequencyseries attribute)": [[26, "pycwb.types.time_frequency_series.TimeFrequencySeries.bpp"]], "c4 (pycwb.types.data_quality_file.dqfile attribute)": [[26, "pycwb.types.data_quality_file.DQFile.c4"]], "c_freq (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.c_freq"]], "c_time (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.c_time"]], "check_layers_with_mracatalog() (pycwb.types.wdm_xtalk.wdmxtalkcatalog method)": [[26, "pycwb.types.wdm_xtalk.WDMXTalkCatalog.check_layers_with_MRAcatalog"]], "chi2chirp (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.chi2chirp"]], "chirp (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.chirp"]], "chirp_efrac (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.chirp_efrac"]], "chirp_ellip (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.chirp_ellip"]], "chirp_pfrac (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.chirp_pfrac"]], "clone() (pycwb.types.wdm.wdm method)": [[26, "pycwb.types.wdm.WDM.clone"]], "cluster() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.cluster"]], "cluster_freq (pycwb.types.network_cluster.cluster attribute)": [[26, "pycwb.types.network_cluster.Cluster.cluster_freq"]], "cluster_meta (pycwb.types.network_cluster.cluster attribute)": [[26, "pycwb.types.network_cluster.Cluster.cluster_meta"]], "cluster_rate (pycwb.types.network_cluster.cluster attribute)": [[26, "pycwb.types.network_cluster.Cluster.cluster_rate"]], "cluster_status (pycwb.types.network_cluster.cluster attribute)": [[26, "pycwb.types.network_cluster.Cluster.cluster_status"]], "cluster_time (pycwb.types.network_cluster.cluster attribute)": [[26, "pycwb.types.network_cluster.Cluster.cluster_time"]], "clusters (pycwb.types.network_cluster.fragmentcluster attribute)": [[26, "pycwb.types.network_cluster.FragmentCluster.clusters"]], "copy() (pycwb.types.time_frequency_series.timefrequencyseries method)": [[26, "pycwb.types.time_frequency_series.TimeFrequencySeries.copy"]], "core (pycwb.types.network_pixel.pixel attribute)": [[26, "pycwb.types.network_pixel.Pixel.core"]], "data (pycwb.types.network_pixel.pixel attribute)": [[26, "pycwb.types.network_pixel.Pixel.data"]], "data (pycwb.types.time_frequency_series.timefrequencyseries attribute)": [[26, "pycwb.types.time_frequency_series.TimeFrequencySeries.data"]], "declare_function() (in module pycwb.types.wdm)": [[26, "pycwb.types.wdm.declare_function"]], "dq_cat (pycwb.types.data_quality_file.dqfile attribute)": [[26, "pycwb.types.data_quality_file.DQFile.dq_cat"]], "dump() (pycwb.types.network_event.event method)": [[26, "pycwb.types.network_event.Event.dump"]], "dump_cluster() (pycwb.types.network_cluster.fragmentcluster method)": [[26, "pycwb.types.network_cluster.FragmentCluster.dump_cluster"]], "duration (pycwb.types.job.framefile attribute)": [[26, "pycwb.types.job.FrameFile.duration"]], "duration (pycwb.types.job.wavesegment property)": [[26, "pycwb.types.job.WaveSegment.duration"]], "edge (pycwb.types.time_frequency_series.timefrequencyseries property)": [[26, "pycwb.types.time_frequency_series.TimeFrequencySeries.edge"]], "ellipticity (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.ellipticity"]], "ellipticity (pycwb.types.network_pixel.pixel attribute)": [[26, "pycwb.types.network_pixel.Pixel.ellipticity"]], "end_time (pycwb.types.job.framefile property)": [[26, "pycwb.types.job.FrameFile.end_time"]], "end_time (pycwb.types.job.wavesegment attribute)": [[26, "pycwb.types.job.WaveSegment.end_time"]], "energy (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.energy"]], "energy_sky (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.energy_sky"]], "event_count() (pycwb.types.network_cluster.fragmentcluster method)": [[26, "pycwb.types.network_cluster.FragmentCluster.event_count"]], "f_high (pycwb.types.network_cluster.fragmentcluster attribute)": [[26, "pycwb.types.network_cluster.FragmentCluster.f_high"]], "f_high (pycwb.types.time_frequency_series.timefrequencyseries property)": [[26, "pycwb.types.time_frequency_series.TimeFrequencySeries.f_high"]], "f_low (pycwb.types.network_cluster.fragmentcluster attribute)": [[26, "pycwb.types.network_cluster.FragmentCluster.f_low"]], "f_low (pycwb.types.time_frequency_series.timefrequencyseries property)": [[26, "pycwb.types.time_frequency_series.TimeFrequencySeries.f_low"]], "file (pycwb.types.data_quality_file.dqfile attribute)": [[26, "pycwb.types.data_quality_file.DQFile.file"]], "forward() (pycwb.types.time_frequency_series.timefrequencyseries method)": [[26, "pycwb.types.time_frequency_series.TimeFrequencySeries.forward"]], "frames (pycwb.types.job.wavesegment attribute)": [[26, "pycwb.types.job.WaveSegment.frames"]], "frequency (pycwb.types.network_pixel.pixel attribute)": [[26, "pycwb.types.network_pixel.Pixel.frequency"]], "frequency_in_hz (pycwb.types.network_pixel.pixel property)": [[26, "pycwb.types.network_pixel.Pixel.frequency_in_hz"]], "from_cdata() (pycwb.types.network_cluster.clustermeta method)": [[26, "pycwb.types.network_cluster.ClusterMeta.from_cData"]], "from_fragment_cluster() (pycwb.types.sparse_series.sparsetimefrequencyseries method)": [[26, "pycwb.types.sparse_series.SparseTimeFrequencySeries.from_fragment_cluster"]], "from_netcluster() (pycwb.types.network_cluster.cluster method)": [[26, "pycwb.types.network_cluster.Cluster.from_netcluster"]], "from_netcluster() (pycwb.types.network_cluster.fragmentcluster method)": [[26, "pycwb.types.network_cluster.FragmentCluster.from_netcluster"]], "from_netpixel() (pycwb.types.network_pixel.pixel method)": [[26, "pycwb.types.network_pixel.Pixel.from_netpixel"]], "g_net (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.g_net"]], "g_noise (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.g_noise"]], "get_base_wave() (pycwb.types.wdm.wdm method)": [[26, "pycwb.types.wdm.WDM.get_base_wave"]], "get_cluster() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.get_cluster"]], "get_ifo() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.get_ifo"]], "get_map_00() (pycwb.types.wdm.wdm method)": [[26, "pycwb.types.wdm.WDM.get_map_00"]], "get_map_90() (pycwb.types.wdm.wdm method)": [[26, "pycwb.types.wdm.WDM.get_map_90"]], "get_max_delay() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.get_max_delay"]], "get_network_pixels() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.get_network_pixels"]], "get_periods() (pycwb.types.data_quality_file.dqfile method)": [[26, "pycwb.types.data_quality_file.DQFile.get_periods"]], "get_pixel_rates() (pycwb.types.network_cluster.cluster method)": [[26, "pycwb.types.network_cluster.Cluster.get_pixel_rates"]], "get_pixels_with_rate() (pycwb.types.network_cluster.cluster method)": [[26, "pycwb.types.network_cluster.Cluster.get_pixels_with_rate"]], "get_slice_size() (pycwb.types.wdm.wdm method)": [[26, "pycwb.types.wdm.WDM.get_slice_size"]], "get_sparse_map() (pycwb.types.network_cluster.cluster method)": [[26, "pycwb.types.network_cluster.Cluster.get_sparse_map"]], "get_sparse_map_by_rate() (pycwb.types.network_cluster.cluster method)": [[26, "pycwb.types.network_cluster.Cluster.get_sparse_map_by_rate"]], "get_wdmmra() (pycwb.types.wdm_xtalk.wdmxtalkcatalog method)": [[26, "pycwb.types.wdm_xtalk.WDMXTalkCatalog.get_wdmMRA"]], "i_net (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.i_net"]], "ifo (pycwb.types.data_quality_file.dqfile attribute)": [[26, "pycwb.types.data_quality_file.DQFile.ifo"]], "ifo (pycwb.types.job.framefile attribute)": [[26, "pycwb.types.job.FrameFile.ifo"]], "ifo_size (pycwb.types.network.network property)": [[26, "pycwb.types.network.Network.ifo_size"]], "ifos (pycwb.types.job.wavesegment attribute)": [[26, "pycwb.types.job.WaveSegment.ifos"]], "index (pycwb.types.job.wavesegment attribute)": [[26, "pycwb.types.job.WaveSegment.index"]], "index (pycwb.types.network_pixel.pixeldata attribute)": [[26, "pycwb.types.network_pixel.PixelData.index"]], "injections (pycwb.types.job.wavesegment attribute)": [[26, "pycwb.types.job.WaveSegment.injections"]], "invert (pycwb.types.data_quality_file.dqfile attribute)": [[26, "pycwb.types.data_quality_file.DQFile.invert"]], "iota (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.iota"]], "job_id (pycwb.types.job.slag attribute)": [[26, "pycwb.types.job.SLag.job_id"]], "json() (pycwb.types.network_event.event method)": [[26, "pycwb.types.network_event.Event.json"]], "layers (pycwb.types.network_pixel.pixel attribute)": [[26, "pycwb.types.network_pixel.Pixel.layers"]], "layers (pycwb.types.wdm_xtalk.wdmxtalkcatalog property)": [[26, "pycwb.types.wdm_xtalk.WDMXTalkCatalog.layers"]], "lightweight_dump() (pycwb.types.wdm.wdm method)": [[26, "pycwb.types.wdm.WDM.lightweight_dump"]], "like_net (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.like_net"]], "like_sky (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.like_sky"]], "likelihood (pycwb.types.network_pixel.pixel attribute)": [[26, "pycwb.types.network_pixel.Pixel.likelihood"]], "likelihood2g() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.likelihood2G"]], "likelihoodwp() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.likelihoodWP"]], "load_mra() (pycwb.types.wdm_xtalk.wdmxtalkcatalog method)": [[26, "pycwb.types.wdm_xtalk.WDMXTalkCatalog.load_MRA"]], "load_strains() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.load_strains"]], "m (pycwb.types.wdm.wdm attribute)": [[26, "pycwb.types.wdm.WDM.m"]], "m_h (pycwb.types.wdm.wdm property)": [[26, "pycwb.types.wdm.WDM.m_H"]], "m_l (pycwb.types.wdm.wdm property)": [[26, "pycwb.types.wdm.WDM.m_L"]], "make_sky_mask() (in module pycwb.types.network)": [[26, "pycwb.types.network.make_sky_mask"]], "max_index (pycwb.types.wdm.wdm property)": [[26, "pycwb.types.wdm.WDM.max_index"]], "max_layer (pycwb.types.wdm.wdm property)": [[26, "pycwb.types.wdm.WDM.max_layer"]], "max_level (pycwb.types.wdm.wdm property)": [[26, "pycwb.types.wdm.WDM.max_level"]], "mchirp (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.mchirp"]], "mchirperr (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.mchirperr"]], "mchpdf (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.mchpdf"]], "nlag (pycwb.types.network.network property)": [[26, "pycwb.types.network.Network.nLag"]], "nsts (pycwb.types.wdm.wdm property)": [[26, "pycwb.types.wdm.WDM.nSTS"]], "nwws (pycwb.types.wdm.wdm property)": [[26, "pycwb.types.wdm.WDM.nWWS"]], "n_events (pycwb.types.network.network property)": [[26, "pycwb.types.network.Network.n_events"]], "n_pix (pycwb.types.network_cluster.fragmentcluster attribute)": [[26, "pycwb.types.network_cluster.FragmentCluster.n_pix"]], "n_res (pycwb.types.wdm_xtalk.wdmxtalkcatalog property)": [[26, "pycwb.types.wdm_xtalk.WDMXTalkCatalog.n_res"]], "ndof (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.ndof"]], "neighbors (pycwb.types.network_pixel.pixel attribute)": [[26, "pycwb.types.network_pixel.Pixel.neighbors"]], "net_cc (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.net_cc"]], "net_ecor (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.net_ecor"]], "net_ed (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.net_ed"]], "net_null (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.net_null"]], "net_rho (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.net_rho"]], "net_rho2 (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.net_rho2"]], "noise (pycwb.types.job.wavesegment attribute)": [[26, "pycwb.types.job.WaveSegment.noise"]], "noise_rms (pycwb.types.network_pixel.pixeldata attribute)": [[26, "pycwb.types.network_pixel.PixelData.noise_rms"]], "norm (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.norm"]], "norm_cor (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.norm_cor"]], "null (pycwb.types.network_pixel.pixel attribute)": [[26, "pycwb.types.network_pixel.Pixel.null"]], "output() (pycwb.types.network_event.event method)": [[26, "pycwb.types.network_event.Event.output"]], "pwws (pycwb.types.wdm.wdm property)": [[26, "pycwb.types.wdm.WDM.pWWS"]], "pair (pycwb.types.network_cluster.fragmentcluster attribute)": [[26, "pycwb.types.network_cluster.FragmentCluster.pair"]], "path (pycwb.types.job.framefile attribute)": [[26, "pycwb.types.job.FrameFile.path"]], "pattern (pycwb.types.network.network property)": [[26, "pycwb.types.network.Network.pattern"]], "phi (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.phi"]], "phi (pycwb.types.network_pixel.pixel attribute)": [[26, "pycwb.types.network_pixel.Pixel.phi"]], "pixel_count() (pycwb.types.network_cluster.fragmentcluster method)": [[26, "pycwb.types.network_cluster.FragmentCluster.pixel_count"]], "pixels (pycwb.types.network_cluster.cluster attribute)": [[26, "pycwb.types.network_cluster.Cluster.pixels"]], "polarisation (pycwb.types.network_pixel.pixel attribute)": [[26, "pycwb.types.network_pixel.Pixel.polarisation"]], "precision (pycwb.types.wdm.wdm attribute)": [[26, "pycwb.types.wdm.WDM.precision"]], "precision (pycwb.types.wdm_xtalk.wdmxtalkcatalog property)": [[26, "pycwb.types.wdm_xtalk.WDMXTalkCatalog.precision"]], "psi (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.psi"]], "pycwb.types": [[26, "module-pycwb.types"]], "pycwb.types.data_quality_file": [[26, "module-pycwb.types.data_quality_file"]], "pycwb.types.detector": [[26, "module-pycwb.types.detector"]], "pycwb.types.job": [[26, "module-pycwb.types.job"]], "pycwb.types.network": [[26, "module-pycwb.types.network"]], "pycwb.types.network_cluster": [[26, "module-pycwb.types.network_cluster"]], "pycwb.types.network_event": [[26, "module-pycwb.types.network_event"]], "pycwb.types.network_pixel": [[26, "module-pycwb.types.network_pixel"]], "pycwb.types.sparse_series": [[26, "module-pycwb.types.sparse_series"]], "pycwb.types.time_frequency_series": [[26, "module-pycwb.types.time_frequency_series"]], "pycwb.types.wdm": [[26, "module-pycwb.types.wdm"]], "pycwb.types.wdm_xtalk": [[26, "module-pycwb.types.wdm_xtalk"]], "rank (pycwb.types.network_pixel.pixeldata attribute)": [[26, "pycwb.types.network_pixel.PixelData.rank"]], "rate (pycwb.types.network_cluster.fragmentcluster attribute)": [[26, "pycwb.types.network_cluster.FragmentCluster.rate"]], "rate (pycwb.types.network_pixel.pixel attribute)": [[26, "pycwb.types.network_pixel.Pixel.rate"]], "release() (pycwb.types.wdm.wdm method)": [[26, "pycwb.types.wdm.WDM.release"]], "remove_rejected() (pycwb.types.network_cluster.fragmentcluster method)": [[26, "pycwb.types.network_cluster.FragmentCluster.remove_rejected"]], "resize() (pycwb.types.sparse_series.sparsetimefrequencyseries method)": [[26, "pycwb.types.sparse_series.SparseTimeFrequencySeries.resize"]], "restore_skymap() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.restore_skymap"]], "run (pycwb.types.network_cluster.fragmentcluster attribute)": [[26, "pycwb.types.network_cluster.FragmentCluster.run"]], "sample_rate (pycwb.types.time_frequency_series.timefrequencyseries property)": [[26, "pycwb.types.time_frequency_series.TimeFrequencySeries.sample_rate"]], "seg_id (pycwb.types.job.slag attribute)": [[26, "pycwb.types.job.SLag.seg_id"]], "set_delay_index() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.set_delay_index"]], "set_halo() (pycwb.types.sparse_series.sparsetimefrequencyseries method)": [[26, "pycwb.types.sparse_series.SparseTimeFrequencySeries.set_halo"]], "set_map() (pycwb.types.sparse_series.sparsetimefrequencyseries method)": [[26, "pycwb.types.sparse_series.SparseTimeFrequencySeries.set_map"]], "set_map_00() (pycwb.types.wdm.wdm method)": [[26, "pycwb.types.wdm.WDM.set_map_00"]], "set_map_90() (pycwb.types.wdm.wdm method)": [[26, "pycwb.types.wdm.WDM.set_map_90"]], "set_sky_mask() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.set_sky_mask"]], "set_sparse_table() (pycwb.types.sparse_series.sparsetimefrequencyseries method)": [[26, "pycwb.types.sparse_series.SparseTimeFrequencySeries.set_sparse_table"]], "set_td_filter() (pycwb.types.wdm.wdm method)": [[26, "pycwb.types.wdm.WDM.set_td_filter"]], "set_time_shift() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.set_time_shift"]], "set_veto() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.set_veto"]], "shift (pycwb.types.data_quality_file.dqfile attribute)": [[26, "pycwb.types.data_quality_file.DQFile.shift"]], "shift (pycwb.types.network_cluster.fragmentcluster attribute)": [[26, "pycwb.types.network_cluster.FragmentCluster.shift"]], "size_at_zero_layer (pycwb.types.wdm.wdm property)": [[26, "pycwb.types.wdm.WDM.size_at_zero_layer"]], "sky_area (pycwb.types.network_cluster.cluster attribute)": [[26, "pycwb.types.network_cluster.Cluster.sky_area"]], "sky_cc (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.sky_cc"]], "sky_chi2 (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.sky_chi2"]], "sky_index (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.sky_index"]], "sky_pixel_index (pycwb.types.network_cluster.cluster attribute)": [[26, "pycwb.types.network_cluster.Cluster.sky_pixel_index"]], "sky_pixel_map (pycwb.types.network_cluster.cluster attribute)": [[26, "pycwb.types.network_cluster.Cluster.sky_pixel_map"]], "sky_size (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.sky_size"]], "sky_stat (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.sky_stat"]], "sky_time_delay (pycwb.types.network_cluster.cluster attribute)": [[26, "pycwb.types.network_cluster.Cluster.sky_time_delay"]], "slag_id (pycwb.types.job.slag attribute)": [[26, "pycwb.types.job.SLag.slag_id"]], "sparse_index (pycwb.types.sparse_series.sparsetimefrequencyseries property)": [[26, "pycwb.types.sparse_series.SparseTimeFrequencySeries.sparse_index"]], "sparse_lookup (pycwb.types.sparse_series.sparsetimefrequencyseries property)": [[26, "pycwb.types.sparse_series.SparseTimeFrequencySeries.sparse_lookup"]], "sparse_map_00 (pycwb.types.sparse_series.sparsetimefrequencyseries property)": [[26, "pycwb.types.sparse_series.SparseTimeFrequencySeries.sparse_map_00"]], "sparse_map_90 (pycwb.types.sparse_series.sparsetimefrequencyseries property)": [[26, "pycwb.types.sparse_series.SparseTimeFrequencySeries.sparse_map_90"]], "start (pycwb.types.network_cluster.fragmentcluster attribute)": [[26, "pycwb.types.network_cluster.FragmentCluster.start"]], "start (pycwb.types.time_frequency_series.timefrequencyseries property)": [[26, "pycwb.types.time_frequency_series.TimeFrequencySeries.start"]], "start_time (pycwb.types.job.framefile attribute)": [[26, "pycwb.types.job.FrameFile.start_time"]], "start_time (pycwb.types.job.wavesegment attribute)": [[26, "pycwb.types.job.WaveSegment.start_time"]], "stop (pycwb.types.network_cluster.fragmentcluster attribute)": [[26, "pycwb.types.network_cluster.FragmentCluster.stop"]], "stop (pycwb.types.time_frequency_series.timefrequencyseries property)": [[26, "pycwb.types.time_frequency_series.TimeFrequencySeries.stop"]], "sub_net (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.sub_net"]], "sub_net2 (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.sub_net2"]], "sub_net_cut() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.sub_net_cut"]], "subnet_threshold (pycwb.types.network_cluster.fragmentcluster attribute)": [[26, "pycwb.types.network_cluster.FragmentCluster.subnet_threshold"]], "summary() (pycwb.types.network_event.event method)": [[26, "pycwb.types.network_event.Event.summary"]], "t2w() (pycwb.types.wdm.wdm method)": [[26, "pycwb.types.wdm.WDM.t2w"]], "tag (pycwb.types.wdm_xtalk.wdmxtalkcatalog property)": [[26, "pycwb.types.wdm_xtalk.WDMXTalkCatalog.tag"]], "td_amp (pycwb.types.network_pixel.pixel attribute)": [[26, "pycwb.types.network_pixel.Pixel.td_amp"]], "theta (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.theta"]], "theta (pycwb.types.network_pixel.pixel attribute)": [[26, "pycwb.types.network_pixel.Pixel.theta"]], "threshold() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.threshold"]], "time (pycwb.types.network_pixel.pixel attribute)": [[26, "pycwb.types.network_pixel.Pixel.time"]], "time_delay_filter_size (pycwb.types.wdm.wdm property)": [[26, "pycwb.types.wdm.WDM.time_delay_filter_size"]], "time_in_seconds (pycwb.types.network_pixel.pixel property)": [[26, "pycwb.types.network_pixel.Pixel.time_in_seconds"]], "tmrgr (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.tmrgr"]], "tmrgrerr (pycwb.types.network_cluster.clustermeta attribute)": [[26, "pycwb.types.network_cluster.ClusterMeta.tmrgrerr"]], "to_dict() (pycwb.types.job.wavesegment method)": [[26, "pycwb.types.job.WaveSegment.to_dict"]], "to_dict() (pycwb.types.network_cluster.cluster method)": [[26, "pycwb.types.network_cluster.Cluster.to_dict"]], "to_dict() (pycwb.types.network_pixel.pixel method)": [[26, "pycwb.types.network_pixel.Pixel.to_dict"]], "to_dict() (pycwb.types.network_pixel.pixeldata method)": [[26, "pycwb.types.network_pixel.PixelData.to_dict"]], "to_type_wdm() (pycwb.types.wdm.wdm method)": [[26, "pycwb.types.wdm.WDM.to_type_WDM"]], "update_sky_map() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.update_sky_map"]], "update_sky_mask() (pycwb.types.network.network method)": [[26, "pycwb.types.network.Network.update_sky_mask"]], "update_sparse_table() (pycwb.types.sparse_series.sparsetimefrequencyseries method)": [[26, "pycwb.types.sparse_series.SparseTimeFrequencySeries.update_sparse_table"]], "w_90 (pycwb.types.network_pixel.pixeldata attribute)": [[26, "pycwb.types.network_pixel.PixelData.w_90"]], "w_rate (pycwb.types.time_frequency_series.timefrequencyseries attribute)": [[26, "pycwb.types.time_frequency_series.TimeFrequencySeries.w_rate"]], "wave (pycwb.types.network_pixel.pixeldata attribute)": [[26, "pycwb.types.network_pixel.PixelData.wave"]], "wavelet (pycwb.types.time_frequency_series.timefrequencyseries property)": [[26, "pycwb.types.time_frequency_series.TimeFrequencySeries.wavelet"]], "wavelet (pycwb.types.wdm.wdm attribute)": [[26, "pycwb.types.wdm.WDM.wavelet"]], "whiten_mode (pycwb.types.time_frequency_series.timefrequencyseries attribute)": [[26, "pycwb.types.time_frequency_series.TimeFrequencySeries.whiten_mode"]], "align_images() (in module pycwb.utils.image)": [[27, "pycwb.utils.image.align_images"]], "cartesian_to_spherical() (in module pycwb.utils.network)": [[27, "pycwb.utils.network.cartesian_to_spherical"]], "check_and_load_wavelet() (in module pycwb.utils.check_root)": [[27, "pycwb.utils.check_ROOT.check_and_load_wavelet"]], "import_helper() (in module pycwb.utils.module)": [[27, "pycwb.utils.module.import_helper"]], "load_yaml() (in module pycwb.utils.yaml_helper)": [[27, "pycwb.utils.yaml_helper.load_yaml"]], "max_delay() (in module pycwb.utils.network)": [[27, "pycwb.utils.network.max_delay"]], "merge_images() (in module pycwb.utils.image)": [[27, "pycwb.utils.image.merge_images"]], "pycwb.utils": [[27, "module-pycwb.utils"]], "pycwb.utils.check_root": [[27, "module-pycwb.utils.check_ROOT"]], "pycwb.utils.image": [[27, "module-pycwb.utils.image"]], "pycwb.utils.module": [[27, "module-pycwb.utils.module"]], "pycwb.utils.network": [[27, "module-pycwb.utils.network"]], "pycwb.utils.yaml_helper": [[27, "module-pycwb.utils.yaml_helper"]], "resize_image() (in module pycwb.utils.image)": [[27, "pycwb.utils.image.resize_image"]], "resize_resolution() (in module pycwb.utils.image)": [[27, "pycwb.utils.image.resize_resolution"]], "set_default() (in module pycwb.utils.yaml_helper)": [[27, "pycwb.utils.yaml_helper.set_default"]], "spherical_to_cartesian() (in module pycwb.utils.network)": [[27, "pycwb.utils.network.spherical_to_cartesian"]]}})