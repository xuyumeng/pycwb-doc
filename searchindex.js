Search.setIndex({"docnames": ["credit", "index", "install", "mod_cwb", "modules", "pycwb", "pycwb.config", "pycwb.constants", "pycwb.messenger", "pycwb.modules", "pycwb.modules.autoencoder", "pycwb.modules.catalog", "pycwb.modules.coherence", "pycwb.modules.cwb_conversions", "pycwb.modules.data_conditioning", "pycwb.modules.job_segment", "pycwb.modules.likelihood", "pycwb.modules.logger", "pycwb.modules.multi_resolution_wdm", "pycwb.modules.plot", "pycwb.modules.read_data", "pycwb.modules.reconstruction", "pycwb.modules.sparse_series", "pycwb.modules.super_cluster", "pycwb.modules.web_viewer", "pycwb.types", "pycwb.utils", "tutorial_injection", "tutorial_search", "tutorials"], "filenames": ["credit.rst", "index.rst", "install.rst", "mod_cwb.rst", "modules.rst", "pycwb.rst", "pycwb.config.rst", "pycwb.constants.rst", "pycwb.messenger.rst", "pycwb.modules.rst", "pycwb.modules.autoencoder.rst", "pycwb.modules.catalog.rst", "pycwb.modules.coherence.rst", "pycwb.modules.cwb_conversions.rst", "pycwb.modules.data_conditioning.rst", "pycwb.modules.job_segment.rst", "pycwb.modules.likelihood.rst", "pycwb.modules.logger.rst", "pycwb.modules.multi_resolution_wdm.rst", "pycwb.modules.plot.rst", "pycwb.modules.read_data.rst", "pycwb.modules.reconstruction.rst", "pycwb.modules.sparse_series.rst", "pycwb.modules.super_cluster.rst", "pycwb.modules.web_viewer.rst", "pycwb.types.rst", "pycwb.utils.rst", "tutorial_injection.rst", "tutorial_search.rst", "tutorials.rst"], "titles": ["Use of PyBurst in Scientific Publications", "Welcome to PyBurst\u2019s documentation!", "Installation Guide", "Notes on modifications of cWB core code", "pycwb", "pycwb package", "pycwb.config package", "pycwb.constants package", "pycwb.messenger package", "pycwb.modules package", "pycwb.modules.autoencoder package", "pycwb.modules.catalog package", "pycwb.modules.coherence package", "pycwb.modules.cwb_conversions package", "pycwb.modules.data_conditioning package", "pycwb.modules.job_segment package", "pycwb.modules.likelihood package", "pycwb.modules.logger package", "pycwb.modules.multi_resolution_wdm package", "pycwb.modules.plot package", "pycwb.modules.read_data package", "pycwb.modules.reconstruction package", "pycwb.modules.sparse_series package", "pycwb.modules.super_cluster package", "pycwb.modules.web_viewer package", "pycwb.types package", "pycwb.utils package", "Step by step injection search", "Go deeper into PyBurst.search", "Tutorial"], "terms": {"i": [1, 2, 3, 6, 11, 13, 15, 20, 25, 26, 27, 28], "python": [1, 2, 10, 13], "packag": [1, 2, 4], "gravit": 1, "wave": [1, 5, 25], "base": [1, 6, 10, 25], "core": [1, 5, 6, 25], "function": [1, 5, 6, 13, 18, 20, 25, 28], "cwb": [1, 6, 12, 14, 18], "conda": 1, "creat": [1, 2, 5, 9, 11, 18, 22, 25, 27, 28], "n": [1, 2, 6, 25], "pycwb": [1, 2, 27, 28], "activ": [1, 2], "c": [1, 2, 6, 13, 25], "forg": [1, 2], "root": [1, 2, 13, 14, 19, 25, 26], "6": [1, 2, 6, 15, 19], "26": [1, 2], "10": [1, 2, 6], "healpix_cxx": [1, 2], "3": [1, 2, 6, 13], "81": [1, 2], "nds2": [1, 2], "client": [1, 2], "lalsuit": [1, 2], "setuptools_scm": [1, 2], "git": [1, 2], "clone": [1, 2, 5, 25], "ligo": [1, 2], "org": [1, 2], "yumeng": [1, 2], "xu": [1, 2], "cd": [1, 2], "make": [1, 2, 20], "mkdir": [1, 27], "my_search": [1, 27], "cp": [1, 27], "path_to_source_cod": [1, 27], "user_parameters_inject": [1, 27], "yaml": [1, 5, 6, 26, 27, 28], "user_paramet": [1, 5, 27, 28], "from": [1, 5, 6, 15, 20, 22, 23, 25, 26, 27, 28], "import": [1, 3, 27, 28], "If": [1, 6, 20, 27], "you": [1, 2, 27, 28], "want": [1, 27], "know": [1, 27], "more": [1, 20, 27], "about": [1, 25, 27], "process": [1, 5, 6, 20, 25, 28], "pleas": [1, 2], "refer": [1, 6, 20, 25], "index": [1, 5, 6, 20, 25], "modul": [1, 2, 4, 27, 28], "page": 1, "The": [2, 5, 6, 15, 20, 25, 27, 29], "done": 2, "yet": [2, 15, 25], "To": [2, 28], "need": [2, 25], "follow": [2, 5, 25, 27, 29], "run": [2, 5, 25, 27, 28], "doc": 2, "command": 2, "sphinx": 2, "7": [2, 6], "0": [2, 6, 10, 15, 20, 21, 25, 26, 27], "sphinx_rtd_them": 2, "built": 2, "html": [2, 5], "directori": [2, 5, 6, 16, 20, 28], "rst": 2, "file": [2, 3, 5, 6, 10, 11, 15, 16, 17, 20, 23, 25, 26, 27, 28], "name": [2, 6, 8, 15, 20, 25, 26], "delet": 2, "when": [2, 6, 28], "prevent": 2, "cach": 2, "so": 2, "do": 2, "edit": 2, "them": [2, 20], "manual": 2, "ani": [2, 25], "your": 2, "same": [2, 20], "thi": [3, 5, 6, 13, 25, 27, 28], "contain": [3, 15, 20, 25, 28], "It": 3, "intend": 3, "complet": [3, 7, 25], "list": [3, 6, 10, 11, 12, 14, 15, 16, 18, 20, 21, 22, 23, 25], "all": [3, 6, 13, 15, 18, 25], "rather": 3, "most": 3, "ones": 3, "subpackag": 4, "config": [4, 5, 10, 11, 12, 14, 15, 16, 18, 20, 21, 22, 23, 25, 27, 28], "submodul": [4, 9], "content": 4, "constant": [4, 5], "project_const": [4, 5], "user_parameters_schema": [4, 5], "messeng": [4, 5], "type": [4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 26, 27], "data_quality_fil": [4, 5], "detector": [4, 5, 6, 12, 15, 20, 27], "job": [4, 5, 6, 11, 15, 16, 20, 23, 28], "network": [4, 5, 6, 10, 12, 16, 23, 27], "network_clust": [4, 5, 12, 21], "network_ev": [4, 5, 11], "network_pixel": [4, 5], "sparse_seri": [4, 5, 9], "time_frequency_seri": [4, 5, 12], "wdm": [4, 5, 6, 9, 14, 21, 22, 23], "wdm_xtalk": [4, 5], "util": [4, 5, 27, 28], "check_root": [4, 5], "imag": [4, 5], "yaml_help": [4, 5], "search": [4, 6, 25, 29], "analyze_job_seg": [4, 5, 28], "add_derived_kei": [5, 6], "check_mra_catalog": [5, 6], "check_fil": [5, 6], "check_lagstep": [5, 6], "get_lag_buff": [5, 6], "import_help": [5, 8, 26], "autoencod": [5, 9], "cwb_autoencod": [5, 9], "catalog": [5, 9, 20, 25], "coher": [5, 6, 9, 25, 27], "coherence_lit": [5, 9], "cwb_convers": [5, 9], "cluster": [5, 6, 9, 10, 12, 16, 19, 21, 22, 23, 25, 27], "pixel": [5, 6, 9, 12, 23, 25, 27], "seri": [5, 9, 20, 25, 27], "data_condit": [5, 9, 27], "regress": [5, 6, 9], "whiten": [5, 6, 9, 25, 27], "job_seg": [5, 9, 20, 28], "dq_segment": [5, 9], "frame": [5, 9, 20, 25], "plot": [5, 9, 27], "super_lag": [5, 9], "likelihood": [5, 6, 9, 10, 19, 25, 27], "logger": [5, 9, 28], "multi_resolution_wdm": [5, 9], "cluster_statist": [5, 9], "event": [5, 6, 9, 11, 16, 20, 25, 27], "spectrogram": [5, 9, 27], "read_data": [5, 9, 27, 28], "data_check": [5, 9], "mdc": [5, 6, 9], "reconstruct": [5, 9, 10, 25], "getmrawaveform": [5, 9], "sparse_t": [5, 9], "super_clust": [5, 9, 27], "superclust": [5, 6, 9, 25, 27], "web_view": [5, 9], "dqfile": [5, 6, 15, 25], "c4": [5, 25], "dq_cat": [5, 15, 25], "get_period": [5, 25], "ifo": [5, 6, 15, 20, 21, 25, 26, 28], "invert": [5, 25], "shift": [5, 6, 15, 25], "framefil": [5, 15, 25], "durat": [5, 6, 15, 20, 25], "end_tim": [5, 25], "path": [5, 6, 10, 17, 19, 20, 25, 27, 28], "start_tim": [5, 20, 25], "slag": [5, 6, 15, 25], "job_id": [5, 16, 25, 27], "seg_id": [5, 25], "slag_id": [5, 25], "waveseg": [5, 11, 15, 20, 25, 28], "inject": [5, 6, 15, 20, 25, 29], "to_dict": [5, 25], "add_detector": [5, 25], "add_wavelet": [5, 25], "get_clust": [5, 25], "get_ifo": [5, 25], "get_max_delai": [5, 25, 27], "get_network_pixel": [5, 25], "ifo_s": [5, 25], "likelihood2g": [5, 6, 25], "likelihoodwp": [5, 6, 25], "load_strain": [5, 25], "nlag": [5, 12, 25], "n_event": [5, 25], "pattern": [5, 6, 25], "restore_skymap": [5, 25], "set_delay_index": [5, 25], "set_sky_mask": [5, 25], "set_time_shift": [5, 25], "set_veto": [5, 25], "sub_net_cut": [5, 25], "threshold": [5, 6, 12, 23, 25], "update_sky_map": [5, 25], "update_sky_mask": [5, 25], "make_sky_mask": [5, 25], "cluster_freq": [5, 25], "cluster_meta": [5, 13, 25], "cluster_r": [5, 25], "cluster_statu": [5, 25], "cluster_tim": [5, 25], "from_netclust": [5, 25], "get_pixel_r": [5, 25], "get_pixels_with_r": [5, 25], "get_sparse_map": [5, 25], "get_sparse_map_by_r": [5, 25], "sky_area": [5, 25], "sky_pixel_index": [5, 25], "sky_pixel_map": [5, 25], "sky_time_delai": [5, 25], "clustermeta": [5, 25], "a_net": [5, 25], "c_freq": [5, 25], "c_time": [5, 25], "chi2chirp": [5, 25], "chirp": [5, 6, 25], "chirp_efrac": [5, 25], "chirp_ellip": [5, 25], "chirp_pfrac": [5, 25], "ellipt": [5, 25], "energi": [5, 6, 12, 25], "energy_ski": [5, 25], "from_cdata": [5, 25], "g_net": [5, 25], "g_nois": [5, 25], "i_net": [5, 25], "iota": [5, 25], "like_net": [5, 25], "like_ski": [5, 25], "mchirp": [5, 25], "mchirperr": [5, 25], "mchpdf": [5, 25], "ndof": [5, 25], "net_cc": [5, 25], "net_ecor": [5, 25], "net_": [5, 25], "net_nul": [5, 25], "net_rho": [5, 25], "net_rho2": [5, 25], "norm": [5, 6, 25], "norm_cor": [5, 25], "phi": [5, 6, 25], "psi": [5, 25], "sky_cc": [5, 25], "sky_chi2": [5, 25], "sky_index": [5, 25], "sky_siz": [5, 25], "sky_stat": [5, 25], "sub_net": [5, 25], "sub_net2": [5, 25], "theta": [5, 6, 25], "tmrgr": [5, 25], "tmrgrerr": [5, 25], "fragmentclust": [5, 12, 16, 22, 23, 25], "bpp": [5, 6, 25], "dump_clust": [5, 25], "event_count": [5, 25], "f_high": [5, 25], "f_low": [5, 20, 25], "n_pix": [5, 25], "pair": [5, 25], "pixel_count": [5, 25], "rate": [5, 6, 10, 15, 18, 20, 21, 25], "remove_reject": [5, 25], "start": [5, 6, 15, 20, 25, 28], "stop": [5, 6, 15, 25], "subnet_threshold": [5, 25], "dump": [5, 6, 25], "json": [5, 7, 25], "output": [5, 6, 10, 15, 16, 20, 25, 28], "summari": [5, 25], "data": [5, 6, 10, 13, 14, 15, 20, 25, 27], "frequenc": [5, 6, 12, 13, 15, 20, 22, 25], "frequency_in_hz": [5, 25], "from_netpixel": [5, 25], "layer": [5, 25], "neighbor": [5, 25], "null": [5, 25], "polaris": [5, 25], "td_amp": [5, 25], "time": [5, 6, 12, 13, 15, 18, 20, 21, 22, 23, 25, 27], "time_in_second": [5, 25], "pixeldata": [5, 13, 25], "a_90": [5, 25], "asnr": [5, 25], "noise_rm": [5, 25], "rank": [5, 25], "w_90": [5, 25], "sparsetimefrequencyseri": [5, 22, 23, 25], "add_cor": [5, 25], "from_fragment_clust": [5, 25], "resiz": [5, 25], "set_halo": [5, 25], "set_map": [5, 25], "set_sparse_t": [5, 25], "sparse_index": [5, 25], "sparse_lookup": [5, 25], "sparse_map_00": [5, 25], "sparse_map_90": [5, 25], "update_sparse_t": [5, 25], "timefrequencyseri": [5, 12, 13, 14, 22, 25], "copi": [5, 13, 25, 27], "edg": [5, 25], "forward": [5, 25], "sample_r": [5, 20, 25], "w_rate": [5, 25], "wavelet": [5, 6, 15, 18, 22, 23, 25, 26, 27], "whiten_mod": [5, 25], "alloc": [5, 25], "beta_ord": [5, 18, 25], "get_base_wav": [5, 25], "get_map_00": [5, 25], "get_map_90": [5, 25], "get_slice_s": [5, 25], "lightweight_dump": [5, 25], "m": [5, 25], "m_h": [5, 25], "m_l": [5, 25], "max_index": [5, 25], "max_lay": [5, 25], "max_level": [5, 25], "nst": [5, 25], "nww": [5, 25], "pww": [5, 25], "precis": [5, 6, 18, 25], "releas": [5, 25], "set_map_00": [5, 25], "set_map_90": [5, 25], "set_td_filt": [5, 25], "size_at_zero_lay": [5, 25], "t2w": [5, 25], "time_delay_filter_s": [5, 25], "to_type_wdm": [5, 25], "declare_funct": [5, 9, 13, 25], "wdmxtalkcatalog": [5, 25, 27], "check_layers_with_mracatalog": [5, 25], "get_wdmmra": [5, 25], "load_mra": [5, 25], "n_re": [5, 25], "tag": [5, 25], "check_and_load_wavelet": [5, 26], "align_imag": [5, 26], "merge_imag": [5, 26], "resize_imag": [5, 26], "resize_resolut": [5, 26], "cartesian_to_spher": [5, 26], "max_delai": [5, 26], "spherical_to_cartesian": [5, 26], "load_yaml": [5, 26], "set_default": [5, 26], "sourc": [5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "analyz": [5, 15, 25, 28], "one": [5, 6, 20, 25], "segment": [5, 6, 15, 20, 25, 28], "given": [5, 10, 14, 18, 19, 20, 21], "configur": [5, 6, 10, 12, 16, 18, 20, 21, 23, 25, 27], "includ": [5, 6, 14], "stage": 5, "read": [5, 6, 20, 23, 26, 28], "read_from_job_seg": [5, 9, 20, 28], "condit": [5, 6, 14, 27], "create_network": 5, "result": [5, 25], "save": [5, 6, 16, 19, 20, 25], "format": [5, 17, 25], "paramet": [5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28], "log_fil": [5, 17, 28], "none": [5, 6, 10, 11, 12, 15, 17, 19, 20, 25, 28], "log_level": [5, 17, 28], "info": [5, 17], "no_subprocess": 5, "fals": [5, 6, 22, 25], "main": [5, 28], "user": [5, 6, 7, 16, 18, 19, 20, 23, 25, 26, 28], "select": [5, 6, 12, 15, 25], "css": 5, "subprocess": [5, 28], "default": [5, 6, 10, 11, 12, 15, 17, 19, 20, 25, 26, 28], "avoid": [5, 6, 28], "memori": [5, 25, 28], "leak": [5, 28], "str": [5, 6, 10, 11, 15, 16, 17, 19, 20, 21, 25, 26], "option": [5, 10, 12, 15, 17, 19, 20, 25], "log": [5, 6, 17, 28], "level": [5, 6, 12, 17, 18, 25], "bool": [5, 12, 19, 20, 21, 25], "set": [5, 6, 12, 25, 26, 27, 28], "true": [5, 6, 12, 14, 19, 20, 21, 25], "maco": [5, 28], "develop": 5, "class": [6, 10, 25], "store": [6, 15, 25], "load": [6, 15, 25, 26, 27], "check": [6, 20, 25, 26, 28], "file_nam": [6, 26], "schema": [6, 7, 26], "additionalproperti": 6, "properti": [6, 25], "acor": 6, "1": [6, 10, 20, 21, 25], "4142135623730951": 6, "descript": 6, "number": [6, 15, 20, 21, 25], "batch": 6, "10000": 6, "max": 6, "loadtdamp": 6, "integ": [6, 25], "dqf": 6, "c_type": 6, "arrai": [6, 13, 15, 19, 25], "efec": 6, "earth": [6, 25], "fix": 6, "selesti": 6, "coordin": [6, 25], "boolean": 6, "fgap": 6, "130": 6, "defragment": 6, "gap": 6, "between": [6, 10, 25], "hz": 6, "loud": 6, "200": 6, "per": [6, 25], "td": 6, "amplitud": [6, 23, 25], "min_skyres_angl": 6, "minimun": 6, "skymap": [6, 25], "resolut": [6, 12, 20, 23, 25, 27], "us": [6, 7, 10, 11, 12, 14, 19, 20, 25, 27, 28], "subnetcut": [6, 23, 25], "min_skyres_healpix": 6, "4": 6, "phi1": 6, "phi2": 6, "360": [6, 25], "regression_apply_thr": 6, "8": 6, "regression_filter_length": 6, "regression_matrix_fract": 6, "95": 6, "regression_solve_eigen_num": 6, "regression_solve_eigen_thr": 6, "regression_solve_regul": 6, "h": [6, 13, 14, 20], "string": [6, 20, 25], "2g": [6, 25], "pipelin": 6, "equal": 6, "ignor": [6, 25], "back": 6, "compat": 6, "avail": [6, 29], "valu": [6, 20, 21, 25, 26], "ar": [6, 15, 20, 25, 27, 29], "cbc": [6, 25], "bbh": [6, 25], "imbhb": [6, 25], "line": [6, 27], "ad": 6, "ced": 6, "l_tfmap_scalogram": 6, "moreov": 6, "netrho": 6, "rho0": 6, "xgb": 6, "than": [6, 20, 25], "mass": [6, 20, 25], "comput": [6, 12, 23, 25, 27], "onli": 6, "enum": 6, "tdsize": 6, "12": 6, "delai": [6, 18, 21, 23, 25], "filter": [6, 15, 25], "size": [6, 15, 18, 19, 25], "20": [6, 20], "maximum": [6, 10, 12, 15, 19, 25], "tfgap": 6, "separ": 6, "two": [6, 25], "tgap": 6, "sec": [6, 15, 25], "theta1": 6, "theta2": 6, "180": 6, "wdm_beta_ord": 6, "beta": [6, 18], "order": [6, 15, 18, 20], "meyer": [6, 18], "wdm_precis": 6, "analysi": [6, 15, 18, 25], "onlin": 6, "offlin": 6, "1g": 6, "001": 6, "probabl": [6, 25], "black": [6, 25], "netpixel": [6, 13, 25], "cedrho": 6, "cfg_gamma": 6, "5": [6, 10], "regul": 6, "fx": 6, "f": [6, 25, 27, 28], "sky": [6, 25], "locat": [6, 25], "gamma": 6, "disabl": 6, "prior": 6, "appli": [6, 21], "minimum": [6, 15, 19, 25], "cfg_search": 6, "r": 6, "see": [6, 25], "below": [6, 15, 25], "p": [6, 25], "l": [6, 25], "": [6, 17], "g": 6, "e": [6, 25], "b": [6, 25], "channelnamesmdc": 6, "channel": [6, 20], "channelnamesraw": 6, "raw": 6, "configplugin": 6, "tmacro": 6, "dccal": 6, "dc": 6, "correct": [6, 21, 25], "delta": 6, "2": [6, 10, 15, 25], "lo": 6, "skystat": 6, "instead": [6, 28], "lr": 6, "fhigh": 6, "2048": 6, "high": [6, 15, 25], "flow": 6, "64": 6, "low": [6, 20, 25], "fresampl": 6, "zero": [6, 25], "resampl": [6, 20], "factor": [6, 20, 25], "simul": 6, "sim": 6, "offset": [6, 10, 15], "must": [6, 15], "int": [6, 10, 15, 16, 18, 20, 21, 25], "item": 6, "filter_dir": 6, "environ": [6, 27, 28], "home_wat_filt": [6, 27, 28], "frfile": [6, 28], "alia": [6, 13], "iwindow": 6, "healpix": [6, 25], "map": [6, 12, 22, 25], "pow": 6, "l1": 6, "h1": [6, 20], "v1": 6, "i1": 6, "j1": 6, "g1": 6, "can": [6, 21, 27, 28], "redefin": 6, "uniqueitem": 6, "inrat": 6, "16384": 6, "input": [6, 10, 13, 15, 26], "object": [6, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 25, 26, 28], "window": [6, 10], "tinj": 6, "l_high": [6, 15, 25, 28], "l_low": [6, 25], "l_white": 6, "lagfil": 6, "lagmax": 6, "150": 6, "standard": 6, "extend": 6, "lag": [6, 12, 15, 21, 23, 25], "lagmod": 6, "w": [6, 13, 25], "write": 6, "lagoff": 6, "first": [6, 15, 20, 25, 27], "id": [6, 16, 21, 25], "lagsit": 6, "site": [6, 15], "lagsiz": 6, "lagstep": 6, "interv": [6, 25], "levelr": 6, "logdir": [6, 28], "ndqf": [6, 15], "nifo": [6, 12, 21, 25], "interferomet": [6, 15, 25], "nsky": 6, "prob": 6, "ascii": [6, 25], "1000": 6, "cum": 6, "99": 6, "xyz": 6, "netcc": 6, "correl": 6, "snr": [6, 25], "nfactor": 6, "nproc": 6, "optim": 6, "outputdir": [6, 24, 28], "produc": [6, 25], "npattern": 6, "ring": 6, "up": 6, "down": 6, "singl": [6, 12, 25], "vertic": 6, "packet": [6, 25], "horizont": 6, "diagon": 6, "anti": 6, "plu": 6, "3x": 6, "cross": 6, "9": 6, "9p": 6, "squar": [6, 10], "box": 6, "els": 6, "std": 6, "mix": 6, "pack": 6, "plugin": 6, "big": 6, "manag": 6, "refifo": 6, "segedg": [6, 15, 28], "boundari": [6, 15, 25], "seglen": [6, 15, 28], "600": 6, "length": [6, 10, 15, 18, 25], "segml": [6, 15, 28], "300": 6, "after": [6, 10, 15, 25], "dq_cat1": [6, 15], "segoverlap": [6, 28], "overlap": [6, 15], "segthr": 6, "30": [6, 20], "dq_cat2": 6, "put": 6, "select_subnet": 6, "subnet": 6, "netclust": [6, 13, 23, 25], "select_subrho": 6, "subrho": 6, "skymaskccfil": 6, "mask": [6, 25], "skymaskfil": 6, "slagmax": 6, "distanc": [6, 20], "slagmin": 6, "slagoff": 6, "slagsiz": 6, "super": [6, 15], "subacor": 6, "sub": [6, 23], "skyloop": 6, "subcut": 6, "33": 6, "subnorm": 6, "num_resolution_level": 6, "enabl": 6, "uptdf": 6, "upsampl": [6, 25], "obtain": 6, "tdrate": 6, "wdmxtalk": 6, "overlapcatalog_lev_8_16_32_64_128_256_inu_4_prec_10": 6, "bin": 6, "talk": 6, "whitestrid": 6, "nois": [6, 10, 12, 20, 25, 27], "sampl": [6, 20, 21, 25, 28], "stride": 6, "whitewindow": 6, "60": 6, "dt": [6, 25, 26], "t": [6, 20, 25], "where": [6, 25], "requir": 6, "add": [6, 11, 15, 25], "deriv": 6, "kei": [6, 19, 25], "mracatalog": [6, 25, 27], "exist": [6, 28], "rais": [6, 20], "filenotfounderror": 6, "doe": [6, 11], "static": 6, "pariti": 6, "necessari": 6, "odd": 6, "even": 6, "circular": 6, "buffer": [6, 15], "distinguish": 6, "get": [6, 10, 13, 15, 21, 25, 27], "return": [6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26], "mode": [6, 21, 25], "valid": [7, 20], "also": 7, "gener": [7, 20, 25, 27], "document": 7, "pyburst": [7, 26, 29], "get_glitch": [9, 10], "get_gl": [9, 10], "set_weight": [9, 10], "mse": [9, 10], "timeseries_process": [9, 10], "add_events_to_catalog": [9, 11], "create_catalog": [9, 11], "coherence_parallel": [9, 12], "convert_cluster_meta_to_cdata": [9, 13], "convert_fragment_clusters_to_netclust": [9, 13], "convert_pixel_to_netpixel": [9, 13], "convert_to_pixdata": [9, 13], "wseries_to_matrix": [9, 13], "c_double_p": [9, 13], "convert_pycbc_timeseries_to_wavearrai": [9, 13], "convert_time_frequency_series_to_wseri": [9, 13], "convert_timeseries_to_wavearrai": [9, 13], "convert_to_wavearrai": [9, 13], "convert_to_wseri": [9, 13], "convert_wavearray_to_pycbc_timeseri": [9, 13], "convert_wavearray_to_timeseri": [9, 13], "convert_wseries_to_pycbc_timeseri": [9, 13], "convert_wseries_to_time_frequency_seri": [9, 13], "convert_wseries_to_timeseri": [9, 13], "convert_sparse_series_to_sseri": [9, 13], "get_job_list": [9, 15], "get_seg_list": [9, 15], "merge_seg_list": [9, 15], "read_seg_list": [9, 15], "get_frame_meta": [9, 15], "select_frame_list": [9, 15], "create_job_segment_from_config": [9, 15], "create_job_segment_from_inject": [9, 15], "select_job_seg": [9, 15, 28], "plot_seg_list": [9, 15], "add_slag_shift": [9, 15], "get_slag_job_list": [9, 15], "get_slag_list": [9, 15], "save_likelihood_data": [9, 16], "logger_init": [9, 17, 27, 28], "create_wdm_for_level": [9, 18], "create_wdm_set": [9, 18, 27], "plot_statist": [9, 19], "plot_event_on_spectrogram": [9, 19, 27], "plot_spectrogram": [9, 19, 27], "check_and_resampl": [9, 20], "generate_from_pycbc": [9, 20], "generate_inject": [9, 20, 27], "generate_injection_from_config": [9, 20], "generate_nois": [9, 20], "project_to_detector": [9, 20], "save_to_gwf": [9, 20], "read_from_catalog": [9, 20], "read_from_gwf": [9, 20], "read_from_onlin": [9, 20], "get_mra_wav": [9, 21], "get_network_mra_wav": [9, 21], "sparse_table_from_fragment_clust": [9, 22, 27], "create_web_view": [9, 24], "ssnr": 10, "weight_path": 10, "glitch": 10, "waveform": [10, 19, 21, 25], "numpi": [10, 13, 15, 25], "ndarrai": [10, 15, 25], "pycbc": [10, 13, 14, 20, 21, 25, 27], "timeseri": [10, 13, 14, 19, 20, 21, 25], "float": [10, 13, 15, 18, 19, 20, 21, 25], "signal": [10, 20, 21, 25, 27], "ratio": 10, "weight": 10, "origin": [10, 25], "mean": 10, "error": [10, 25, 28], "dim1": 10, "neural": 10, "preprocess": 10, "model": [10, 22], "tensorflow": 10, "kera": 10, "engin": 10, "train": 10, "normal": [10, 25], "data_mod": 10, "center": [10, 25], "around": 10, "absolut": 10, "filenam": [11, 15, 19, 20], "A": [11, 15, 20, 25, 27], "soft": 11, "lock": 11, "filelock": 11, "work": [11, 25], "cit": 11, "version": 11, "tf_map": [12, 22, 23, 25, 27], "nrms_list": [12, 14, 25], "net": [12, 25], "parallel": [12, 14, 20, 22], "signific": 12, "loop": [12, 13, 23, 25], "over": [12, 23, 25], "nre": 12, "tf": [12, 25], "wseri": [12, 13, 19], "doubl": [12, 14], "maxenergi": 12, "getnetworkpixel": 12, "rm": [12, 27], "whether": [12, 19, 25], "fragment_clust": [12, 13, 16, 22, 23, 25, 27], "fragment": [12, 22, 23, 25], "convert": [13, 25], "c_id": [13, 25], "matrix": 13, "np": [13, 14, 15, 25], "lp_c_doubl": 13, "wavearrai": [13, 14, 19, 25], "gwpy": [13, 14, 19, 20], "known": 13, "param": [13, 18, 20, 25, 26], "faster": 13, "declar": 13, "too": 13, "slow": 13, "strain": [14, 19, 20, 21, 27], "perform": [14, 25], "conditioned_strain": 14, "tupl": [14, 15, 19, 20, 25], "clean": 14, "method": [14, 25], "transform": [14, 19, 25], "wdm_white": 14, "nrm": [14, 27], "dq_list": 15, "seg_len": 15, "seg_ml": 15, "seg_edg": [15, 18], "build": [15, 25], "ilist": 15, "each": [15, 20, 23, 25, 27, 28], "have": 15, "2segedg": 15, "maxim": 15, "live": 15, "lenght": 15, "divid": 15, "xxx": 15, "seg": [15, 25], "sega": 15, "segb": 15, "Not": [15, 25], "implement": 15, "seg_list_1": 15, "seg_list_2": 15, "merg": [15, 20, 27], "second": [15, 20, 25], "end": [15, 20, 25], "dq_file_list": 15, "qualiti": [15, 25], "categori": 15, "dq_file": [15, 28], "load_fil": 15, "Then": [15, 27], "frame_list_fil": 15, "label": [15, 20], "gwf": [15, 20], "metadata": [15, 25], "extract": [15, 25], "which": [15, 25], "frame_list": 15, "within": [15, 25], "simulation_mod": 15, "fr_file": 15, "seg_overlap": 15, "rateana": [15, 25, 28], "slag_siz": 15, "slag_off": 15, "slag_min": 15, "slag_max": 15, "slag_sit": 15, "slag_fil": 15, "databas": 15, "dq": 15, "cutoff": [15, 20, 25], "seg_list": 15, "merged_seg_list": 15, "figsiz": [15, 19], "24": [15, 19], "figur": [15, 19], "slag_list": 15, "seg_min": 15, "idqf": 15, "dqcat": 15, "cwb_cat1": 15, "len": 15, "segmin": 15, "cwb_cat2": 15, "vector": [15, 25], "structur": [15, 25], "cat": 15, "calcul": [16, 27], "cluster_id": [16, 25], "output_dir": 16, "initi": [17, 25, 27, 28], "asctim": 17, "funcnam": 17, "levelnam": 17, "messag": 17, "rate_ana": 18, "scratch": 18, "td_size": [18, 25], "rtype": [18, 20, 25], "statist": [19, 25], "xmin": 19, "xmax": 19, "gwpy_plot": 19, "x": [19, 26], "axi": [19, 25], "matplotlib": 19, "further": 19, "modifi": 19, "pyplot": 19, "ifo_index": 20, "nan": 20, "consist": 20, "configu": 20, "valueerror": 20, "m1": 20, "m2": 20, "inclin": 20, "ra": [20, 25, 26], "dec": [20, 25, 26], "polar": 20, "geocent_end_tim": 20, "spin1": 20, "spin2": 20, "f_ref": 20, "f_lower": 20, "approxim": 20, "imrphenomxphm": 20, "hp": 20, "hx": 20, "project": [20, 27], "compon": 20, "binari": 20, "right": [20, 25], "ascens": 20, "declin": 20, "geocentr": 20, "spin": 20, "lower": [20, 25], "specifi": [20, 25, 27], "psd": 20, "delta_f": 20, "0625": 20, "32": 20, "4096": 20, "seed": 20, "1234": 20, "aligozerodethighpow": 20, "random": 20, "hc": 20, "ref_ifo": [20, 25], "an": [20, 25, 27], "sim_inspir": 20, "tabl": [20, 22, 23, 27], "exampl": [20, 27, 29], "inj": 20, "turn": 20, "delta_t": 20, "detector_nam": 20, "provid": [20, 25], "distance_scal": 20, "scale": 20, "correspond": [20, 25], "channel_nam": 20, "out_dir": 20, "time_slic": 20, "slice": [20, 25], "crop": 20, "merger": [20, 25], "defin": [20, 25, 27], "begin": 20, "server": 20, "wdmlist": 21, "a_typ": 21, "mra": [21, 25], "atyp": 21, "domain": [21, 22, 25], "nomber": 21, "90": [21, 25], "phase": [21, 25], "rtdf": 21, "tof": 21, "effect": 21, "flight": 21, "spars": [22, 23, 25, 27], "wdm_list": [22, 23, 27], "multi": 23, "reject": [23, 25], "loadtdampss": 23, "defrag": 23, "sparse_table_list": [23, 27], "self": 25, "inform": 25, "jobid": 25, "header": 25, "dictionari": 25, "dict": [25, 26], "tf_list": 25, "silent": 25, "hold": 25, "kt": 25, "kf": 25, "associ": 25, "thei": 25, "closer": 25, "both": 25, "skyre": 25, "restor": 25, "skycoord": 25, "celesti": 25, "what": 25, "radiu": 25, "circl": 25, "degre": 25, "column": 25, "grid": 25, "def": 25, "angl": 25, "lag_siz": 25, "lag_step": 25, "lag_off": 25, "lag_max": 25, "lag_buff": 25, "lag_mod": 25, "lag_sit": 25, "veto": 25, "sub_cut": 25, "sub_norm": 25, "alp": 25, "updat": 25, "sky_mask": 25, "insid": 25, "fill": 25, "otherwis": 25, "flag": 25, "cut": 25, "accept": 25, "readi": 25, "central": 25, "area": 25, "region": 25, "backward": 25, "align": 25, "chi2": 25, "ndf": 25, "fraction": 25, "posit": 25, "total": 25, "c_data": 25, "estim": 25, "contribut": 25, "gaussian": 25, "freedom": 25, "cc": 25, "sra": 25, "disbal": 25, "gauss": 25, "reduc": [25, 27], "stat": 25, "local": 25, "n_sub": 25, "found": 25, "gp": 25, "subnetwork": 25, "event_statu": 25, "count": 25, "statu": 25, "c_cluster": 25, "remov": [25, 27], "represent": 25, "instanc": 25, "time_halo": 25, "layer_halo": 25, "net_delai": 25, "sparseseri": 25, "ifo_id": 25, "ifoid": 25, "pwc": 25, "m_tau": 25, "new": 25, "max_tau": 25, "042": 25, "halo": 25, "For": [25, 28], "layerhalo": 25, "extrahalo": 25, "timehalo": 25, "xxxx": 25, "sparser": 25, "abov": 25, "left": 25, "automat": 25, "gettdfsiz": 25, "reset": 25, "lookup": 25, "map_00": 25, "map_90": 25, "dummi": 25, "todo": 25, "k": 25, "wrapper": 25, "2n": 25, "global": [25, 26], "linear": 25, "band": 25, "width": 25, "basi": 25, "fourier": 25, "paper": 25, "larger": 25, "longer": 25, "spectral": 25, "leakag": 25, "sharp": 25, "truncat": 25, "quantifi": 25, "log10": 25, "norm_of_filt": 25, "other": 25, "tf_index": 25, "quad": 25, "quadratur": 25, "indic": 25, "translat": 25, "j": 25, "map00": 25, "lightweight": 25, "duplic": 25, "highpass": 25, "coeffici": 25, "lowpass": 25, "space": 25, "pointer": 25, "coeff_factor": 25, "upsample_factor": 25, "fundament": 25, "step": [25, 29], "tau": 25, "direct": 25, "orthonorm": 25, "power": 25, "request": 25, "combin": 25, "half": 25, "along": 25, "decomposit": [25, 27], "librari": 26, "try": 26, "resized_map": 26, "t_starts_shift": 26, "max_width": 26, "max_height": 26, "t_offset": 26, "f_offset": 26, "df": 26, "dt_target": 26, "df_target": 26, "module_str": 26, "module_nam": 26, "y": 26, "z": 26, "variabl": 26, "full": 26, "burst": 27, "tutori": 27, "find": [27, 28], "folder": [27, 28], "next": 27, "o": [27, 28], "pycwb_path": [27, 28], "dirnam": [27, 28], "abspath": [27, 28], "__file__": [27, 28], "vendor": [27, 28], "now": 27, "wdm_mra": 27, "cost": 27, "pwc_list": 27, "final": 27, "code": [27, 28], "enumer": 27, "plt": 27, "show": 27, "stdout": 28, "env": 28, "xdmxtalk": 28, "makedir": 28, "call": 28, "multiprocess": 28, "target": 28, "arg": 28, "join": 28, "might": 28, "encount": 28, "safeti": 28, "aviod": 28, "should": 28, "directli": 28, "go": 29, "deeper": 29}, "objects": {"": [[5, 0, 0, "-", "pycwb"]], "pycwb": [[6, 0, 0, "-", "config"], [7, 0, 0, "-", "constants"], [8, 0, 0, "-", "messenger"], [9, 0, 0, "-", "modules"], [5, 0, 0, "-", "search"], [25, 0, 0, "-", "types"], [26, 0, 0, "-", "utils"]], "pycwb.config": [[6, 0, 0, "-", "config"]], "pycwb.config.config": [[6, 1, 1, "", "Config"]], "pycwb.config.config.Config": [[6, 2, 1, "", "add_derived_key"], [6, 2, 1, "", "check_MRA_catalog"], [6, 2, 1, "", "check_file"], [6, 2, 1, "", "check_lagStep"], [6, 2, 1, "", "get_lag_buffer"]], "pycwb.constants": [[7, 0, 0, "-", "project_constants"], [7, 0, 0, "-", "user_parameters_schema"]], "pycwb.messenger": [[8, 0, 0, "-", "messenger"]], "pycwb.messenger.messenger": [[8, 3, 1, "", "import_helper"]], "pycwb.modules": [[10, 0, 0, "-", "autoencoder"], [11, 0, 0, "-", "catalog"], [12, 0, 0, "-", "coherence"], [13, 0, 0, "-", "cwb_conversions"], [14, 0, 0, "-", "data_conditioning"], [15, 0, 0, "-", "job_segment"], [16, 0, 0, "-", "likelihood"], [17, 0, 0, "-", "logger"], [18, 0, 0, "-", "multi_resolution_wdm"], [19, 0, 0, "-", "plot"], [20, 0, 0, "-", "read_data"], [21, 0, 0, "-", "reconstruction"], [22, 0, 0, "-", "sparse_series"], [23, 0, 0, "-", "super_cluster"], [24, 0, 0, "-", "web_viewer"]], "pycwb.modules.autoencoder": [[10, 0, 0, "-", "autoencoder"], [10, 0, 0, "-", "cwb_autoencoder"]], "pycwb.modules.autoencoder.autoencoder": [[10, 3, 1, "", "get_glitchness"]], "pycwb.modules.autoencoder.cwb_autoencoder": [[10, 1, 1, "", "AutoEncoder"], [10, 3, 1, "", "MSE"], [10, 3, 1, "", "autoencoder"], [10, 3, 1, "", "timeseries_processing"]], "pycwb.modules.autoencoder.cwb_autoencoder.AutoEncoder": [[10, 2, 1, "", "get_glness"], [10, 2, 1, "", "set_weights"]], "pycwb.modules.catalog": [[11, 0, 0, "-", "catalog"]], "pycwb.modules.catalog.catalog": [[11, 3, 1, "", "add_events_to_catalog"], [11, 3, 1, "", "create_catalog"]], "pycwb.modules.coherence": [[12, 0, 0, "-", "coherence"], [12, 0, 0, "-", "coherence_lite"]], "pycwb.modules.coherence.coherence": [[12, 3, 1, "", "coherence"], [12, 3, 1, "", "coherence_parallel"]], "pycwb.modules.coherence.coherence_lite": [[12, 3, 1, "", "coherence"], [12, 3, 1, "", "coherence_parallel"]], "pycwb.modules.cwb_conversions": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "pixel"], [13, 0, 0, "-", "series"], [13, 0, 0, "-", "sparse_series"]], "pycwb.modules.cwb_conversions.cluster": [[13, 3, 1, "", "convert_cluster_meta_to_cData"], [13, 3, 1, "", "convert_fragment_clusters_to_netcluster"]], "pycwb.modules.cwb_conversions.pixel": [[13, 3, 1, "", "convert_pixel_to_netpixel"], [13, 3, 1, "", "convert_to_pixdata"]], "pycwb.modules.cwb_conversions.series": [[13, 3, 1, "", "WSeries_to_matrix"], [13, 4, 1, "", "c_double_p"], [13, 3, 1, "", "convert_pycbc_timeseries_to_wavearray"], [13, 3, 1, "", "convert_time_frequency_series_to_wseries"], [13, 3, 1, "", "convert_timeseries_to_wavearray"], [13, 3, 1, "", "convert_to_wavearray"], [13, 3, 1, "", "convert_to_wseries"], [13, 3, 1, "", "convert_wavearray_to_pycbc_timeseries"], [13, 3, 1, "", "convert_wavearray_to_timeseries"], [13, 3, 1, "", "convert_wseries_to_pycbc_timeseries"], [13, 3, 1, "", "convert_wseries_to_time_frequency_series"], [13, 3, 1, "", "convert_wseries_to_timeseries"], [13, 3, 1, "", "declare_function"]], "pycwb.modules.cwb_conversions.sparse_series": [[13, 3, 1, "", "convert_sparse_series_to_sseries"]], "pycwb.modules.data_conditioning": [[14, 0, 0, "-", "data_conditioning"], [14, 0, 0, "-", "regression"], [14, 0, 0, "-", "whitening"]], "pycwb.modules.data_conditioning.data_conditioning": [[14, 3, 1, "", "data_conditioning"]], "pycwb.modules.data_conditioning.regression": [[14, 3, 1, "", "regression"]], "pycwb.modules.data_conditioning.whitening": [[14, 3, 1, "", "whitening"]], "pycwb.modules.job_segment": [[15, 0, 0, "-", "dq_segment"], [15, 0, 0, "-", "frame"], [15, 0, 0, "-", "job_segment"], [15, 0, 0, "-", "plots"], [15, 0, 0, "-", "super_lag"]], "pycwb.modules.job_segment.dq_segment": [[15, 3, 1, "", "get_job_list"], [15, 3, 1, "", "get_seg_list"], [15, 3, 1, "", "merge_seg_list"], [15, 3, 1, "", "read_seg_list"]], "pycwb.modules.job_segment.frame": [[15, 3, 1, "", "get_frame_meta"], [15, 3, 1, "", "select_frame_list"]], "pycwb.modules.job_segment.job_segment": [[15, 3, 1, "", "create_job_segment_from_config"], [15, 3, 1, "", "create_job_segment_from_injection"], [15, 3, 1, "", "select_job_segment"]], "pycwb.modules.job_segment.plots": [[15, 3, 1, "", "plot_seg_list"]], "pycwb.modules.job_segment.super_lag": [[15, 3, 1, "", "add_slag_shifts"], [15, 3, 1, "", "get_slag_job_list"], [15, 3, 1, "", "get_slag_list"]], "pycwb.modules.likelihood": [[16, 0, 0, "-", "likelihood"]], "pycwb.modules.likelihood.likelihood": [[16, 3, 1, "", "likelihood"], [16, 3, 1, "", "save_likelihood_data"]], "pycwb.modules.logger": [[17, 0, 0, "-", "logger"]], "pycwb.modules.logger.logger": [[17, 3, 1, "", "logger_init"]], "pycwb.modules.multi_resolution_wdm": [[18, 0, 0, "-", "wdm"]], "pycwb.modules.multi_resolution_wdm.wdm": [[18, 3, 1, "", "create_wdm_for_level"], [18, 3, 1, "", "create_wdm_set"]], "pycwb.modules.plot": [[19, 0, 0, "-", "cluster_statistics"], [19, 0, 0, "-", "event"], [19, 0, 0, "-", "spectrogram"]], "pycwb.modules.plot.cluster_statistics": [[19, 3, 1, "", "plot_statistics"]], "pycwb.modules.plot.event": [[19, 3, 1, "", "plot_event_on_spectrogram"]], "pycwb.modules.plot.spectrogram": [[19, 3, 1, "", "plot_spectrogram"]], "pycwb.modules.read_data": [[20, 0, 0, "-", "data_check"], [20, 0, 0, "-", "mdc"], [20, 0, 0, "-", "read_data"]], "pycwb.modules.read_data.data_check": [[20, 3, 1, "", "check_and_resample"], [20, 3, 1, "", "data_check"]], "pycwb.modules.read_data.mdc": [[20, 3, 1, "", "generate_from_pycbc"], [20, 3, 1, "", "generate_injection"], [20, 3, 1, "", "generate_injection_from_config"], [20, 3, 1, "", "generate_noise"], [20, 3, 1, "", "project_to_detector"], [20, 3, 1, "", "save_to_gwf"]], "pycwb.modules.read_data.read_data": [[20, 3, 1, "", "read_from_catalog"], [20, 3, 1, "", "read_from_gwf"], [20, 3, 1, "", "read_from_job_segment"], [20, 3, 1, "", "read_from_online"]], "pycwb.modules.reconstruction": [[21, 0, 0, "-", "getMRAwaveform"]], "pycwb.modules.reconstruction.getMRAwaveform": [[21, 3, 1, "", "get_MRA_wave"], [21, 3, 1, "", "get_network_MRA_wave"]], "pycwb.modules.sparse_series": [[22, 0, 0, "-", "sparse_table"]], "pycwb.modules.sparse_series.sparse_table": [[22, 3, 1, "", "sparse_table_from_fragment_clusters"]], "pycwb.modules.super_cluster": [[23, 0, 0, "-", "supercluster"]], "pycwb.modules.super_cluster.supercluster": [[23, 3, 1, "", "supercluster"]], "pycwb.modules.web_viewer": [[24, 0, 0, "-", "create"]], "pycwb.modules.web_viewer.create": [[24, 3, 1, "", "create_web_viewer"]], "pycwb.search": [[5, 3, 1, "", "analyze_job_segment"], [5, 3, 1, "", "search"]], "pycwb.types": [[25, 0, 0, "-", "data_quality_file"], [25, 0, 0, "-", "detector"], [25, 0, 0, "-", "job"], [25, 0, 0, "-", "network"], [25, 0, 0, "-", "network_cluster"], [25, 0, 0, "-", "network_event"], [25, 0, 0, "-", "network_pixel"], [25, 0, 0, "-", "sparse_series"], [25, 0, 0, "-", "time_frequency_series"], [25, 0, 0, "-", "wdm"], [25, 0, 0, "-", "wdm_xtalk"]], "pycwb.types.data_quality_file": [[25, 1, 1, "", "DQFile"]], "pycwb.types.data_quality_file.DQFile": [[25, 4, 1, "", "c4"], [25, 4, 1, "", "dq_cat"], [25, 4, 1, "", "file"], [25, 2, 1, "", "get_periods"], [25, 4, 1, "", "ifo"], [25, 4, 1, "", "invert"], [25, 4, 1, "", "shift"]], "pycwb.types.detector": [[25, 1, 1, "", "Detector"]], "pycwb.types.job": [[25, 1, 1, "", "FrameFile"], [25, 1, 1, "", "SLag"], [25, 1, 1, "", "WaveSegment"]], "pycwb.types.job.FrameFile": [[25, 4, 1, "", "duration"], [25, 5, 1, "", "end_time"], [25, 4, 1, "", "ifo"], [25, 4, 1, "", "path"], [25, 4, 1, "", "start_time"]], "pycwb.types.job.SLag": [[25, 4, 1, "", "job_id"], [25, 4, 1, "", "seg_id"], [25, 4, 1, "", "slag_id"]], "pycwb.types.job.WaveSegment": [[25, 4, 1, "", "end_time"], [25, 4, 1, "", "frames"], [25, 4, 1, "", "index"], [25, 4, 1, "", "injections"], [25, 4, 1, "", "start_time"], [25, 2, 1, "", "to_dict"]], "pycwb.types.network": [[25, 1, 1, "", "Network"], [25, 3, 1, "", "make_sky_mask"]], "pycwb.types.network.Network": [[25, 2, 1, "", "add_detector"], [25, 2, 1, "", "add_wavelet"], [25, 2, 1, "", "cluster"], [25, 2, 1, "", "get_cluster"], [25, 2, 1, "", "get_ifo"], [25, 2, 1, "", "get_max_delay"], [25, 2, 1, "", "get_network_pixels"], [25, 5, 1, "", "ifo_size"], [25, 2, 1, "", "likelihood2G"], [25, 2, 1, "", "likelihoodWP"], [25, 2, 1, "", "load_strains"], [25, 5, 1, "", "nLag"], [25, 5, 1, "", "n_events"], [25, 5, 1, "", "pattern"], [25, 2, 1, "", "restore_skymap"], [25, 2, 1, "", "set_delay_index"], [25, 2, 1, "", "set_sky_mask"], [25, 2, 1, "", "set_time_shift"], [25, 2, 1, "", "set_veto"], [25, 2, 1, "", "sub_net_cut"], [25, 2, 1, "", "threshold"], [25, 2, 1, "", "update_sky_map"], [25, 2, 1, "", "update_sky_mask"]], "pycwb.types.network_cluster": [[25, 1, 1, "", "Cluster"], [25, 1, 1, "", "ClusterMeta"], [25, 1, 1, "", "FragmentCluster"]], "pycwb.types.network_cluster.Cluster": [[25, 4, 1, "", "cluster_freq"], [25, 4, 1, "", "cluster_meta"], [25, 4, 1, "", "cluster_rate"], [25, 4, 1, "", "cluster_status"], [25, 4, 1, "", "cluster_time"], [25, 2, 1, "", "from_netcluster"], [25, 2, 1, "", "get_pixel_rates"], [25, 2, 1, "", "get_pixels_with_rate"], [25, 2, 1, "", "get_sparse_map"], [25, 2, 1, "", "get_sparse_map_by_rate"], [25, 4, 1, "", "pixels"], [25, 4, 1, "", "sky_area"], [25, 4, 1, "", "sky_pixel_index"], [25, 4, 1, "", "sky_pixel_map"], [25, 4, 1, "", "sky_time_delay"], [25, 2, 1, "", "to_dict"]], "pycwb.types.network_cluster.ClusterMeta": [[25, 4, 1, "", "a_net"], [25, 4, 1, "", "c_freq"], [25, 4, 1, "", "c_time"], [25, 4, 1, "", "chi2chirp"], [25, 4, 1, "", "chirp"], [25, 4, 1, "", "chirp_efrac"], [25, 4, 1, "", "chirp_ellip"], [25, 4, 1, "", "chirp_pfrac"], [25, 4, 1, "", "ellipticity"], [25, 4, 1, "", "energy"], [25, 4, 1, "", "energy_sky"], [25, 2, 1, "", "from_cData"], [25, 4, 1, "", "g_net"], [25, 4, 1, "", "g_noise"], [25, 4, 1, "", "i_net"], [25, 4, 1, "", "iota"], [25, 4, 1, "", "like_net"], [25, 4, 1, "", "like_sky"], [25, 4, 1, "", "mchirp"], [25, 4, 1, "", "mchirperr"], [25, 4, 1, "", "mchpdf"], [25, 4, 1, "", "ndof"], [25, 4, 1, "", "net_cc"], [25, 4, 1, "", "net_ecor"], [25, 4, 1, "", "net_ed"], [25, 4, 1, "", "net_null"], [25, 4, 1, "", "net_rho"], [25, 4, 1, "", "net_rho2"], [25, 4, 1, "", "norm"], [25, 4, 1, "", "norm_cor"], [25, 4, 1, "", "phi"], [25, 4, 1, "", "psi"], [25, 4, 1, "", "sky_cc"], [25, 4, 1, "", "sky_chi2"], [25, 4, 1, "", "sky_index"], [25, 4, 1, "", "sky_size"], [25, 4, 1, "", "sky_stat"], [25, 4, 1, "", "sub_net"], [25, 4, 1, "", "sub_net2"], [25, 4, 1, "", "theta"], [25, 4, 1, "", "tmrgr"], [25, 4, 1, "", "tmrgrerr"]], "pycwb.types.network_cluster.FragmentCluster": [[25, 4, 1, "", "bpp"], [25, 4, 1, "", "clusters"], [25, 2, 1, "", "dump_cluster"], [25, 2, 1, "", "event_count"], [25, 4, 1, "", "f_high"], [25, 4, 1, "", "f_low"], [25, 2, 1, "", "from_netcluster"], [25, 4, 1, "", "n_pix"], [25, 4, 1, "", "pair"], [25, 2, 1, "", "pixel_count"], [25, 4, 1, "", "rate"], [25, 2, 1, "", "remove_rejected"], [25, 4, 1, "", "run"], [25, 4, 1, "", "shift"], [25, 4, 1, "", "start"], [25, 4, 1, "", "stop"], [25, 4, 1, "", "subnet_threshold"]], "pycwb.types.network_event": [[25, 1, 1, "", "Event"]], "pycwb.types.network_event.Event": [[25, 2, 1, "", "dump"], [25, 2, 1, "", "json"], [25, 2, 1, "", "output"], [25, 2, 1, "", "summary"]], "pycwb.types.network_pixel": [[25, 1, 1, "", "Pixel"], [25, 1, 1, "", "PixelData"]], "pycwb.types.network_pixel.Pixel": [[25, 4, 1, "", "core"], [25, 4, 1, "", "data"], [25, 4, 1, "", "ellipticity"], [25, 4, 1, "", "frequency"], [25, 5, 1, "", "frequency_in_hz"], [25, 2, 1, "", "from_netpixel"], [25, 4, 1, "", "layers"], [25, 4, 1, "", "likelihood"], [25, 4, 1, "", "neighbors"], [25, 4, 1, "", "null"], [25, 4, 1, "", "phi"], [25, 4, 1, "", "polarisation"], [25, 4, 1, "", "rate"], [25, 4, 1, "", "td_amp"], [25, 4, 1, "", "theta"], [25, 4, 1, "", "time"], [25, 5, 1, "", "time_in_seconds"], [25, 2, 1, "", "to_dict"]], "pycwb.types.network_pixel.PixelData": [[25, 4, 1, "", "a_90"], [25, 4, 1, "", "asnr"], [25, 4, 1, "", "index"], [25, 4, 1, "", "noise_rms"], [25, 4, 1, "", "rank"], [25, 2, 1, "", "to_dict"], [25, 4, 1, "", "w_90"], [25, 4, 1, "", "wave"]], "pycwb.types.sparse_series": [[25, 1, 1, "", "SparseTimeFrequencySeries"]], "pycwb.types.sparse_series.SparseTimeFrequencySeries": [[25, 2, 1, "", "add_core"], [25, 2, 1, "", "from_fragment_cluster"], [25, 2, 1, "", "resize"], [25, 2, 1, "", "set_halo"], [25, 2, 1, "", "set_map"], [25, 2, 1, "", "set_sparse_table"], [25, 5, 1, "", "sparse_index"], [25, 5, 1, "", "sparse_lookup"], [25, 5, 1, "", "sparse_map_00"], [25, 5, 1, "", "sparse_map_90"], [25, 2, 1, "", "update_sparse_table"]], "pycwb.types.time_frequency_series": [[25, 1, 1, "", "TimeFrequencySeries"]], "pycwb.types.time_frequency_series.TimeFrequencySeries": [[25, 4, 1, "", "bpp"], [25, 2, 1, "", "copy"], [25, 4, 1, "", "data"], [25, 5, 1, "", "edge"], [25, 5, 1, "", "f_high"], [25, 5, 1, "", "f_low"], [25, 2, 1, "", "forward"], [25, 5, 1, "", "sample_rate"], [25, 5, 1, "", "start"], [25, 5, 1, "", "stop"], [25, 4, 1, "", "w_rate"], [25, 5, 1, "", "wavelet"], [25, 4, 1, "", "whiten_mode"]], "pycwb.types.wdm": [[25, 1, 1, "", "WDM"], [25, 3, 1, "", "declare_function"]], "pycwb.types.wdm.WDM": [[25, 2, 1, "", "allocate"], [25, 4, 1, "", "beta_order"], [25, 2, 1, "", "clone"], [25, 2, 1, "", "get_base_wave"], [25, 2, 1, "", "get_map_00"], [25, 2, 1, "", "get_map_90"], [25, 2, 1, "", "get_slice_size"], [25, 2, 1, "", "lightweight_dump"], [25, 4, 1, "", "m"], [25, 5, 1, "", "m_H"], [25, 5, 1, "", "m_L"], [25, 5, 1, "", "max_index"], [25, 5, 1, "", "max_layer"], [25, 5, 1, "", "max_level"], [25, 5, 1, "", "nSTS"], [25, 5, 1, "", "nWWS"], [25, 5, 1, "", "pWWS"], [25, 4, 1, "", "precision"], [25, 2, 1, "", "release"], [25, 2, 1, "", "set_map_00"], [25, 2, 1, "", "set_map_90"], [25, 2, 1, "", "set_td_filter"], [25, 5, 1, "", "size_at_zero_layer"], [25, 2, 1, "", "t2w"], [25, 5, 1, "", "time_delay_filter_size"], [25, 2, 1, "", "to_type_WDM"], [25, 4, 1, "", "wavelet"]], "pycwb.types.wdm_xtalk": [[25, 1, 1, "", "WDMXTalkCatalog"]], "pycwb.types.wdm_xtalk.WDMXTalkCatalog": [[25, 5, 1, "", "beta_order"], [25, 2, 1, "", "check_layers_with_MRAcatalog"], [25, 2, 1, "", "get_wdmMRA"], [25, 5, 1, "", "layers"], [25, 2, 1, "", "load_MRA"], [25, 5, 1, "", "n_res"], [25, 5, 1, "", "precision"], [25, 5, 1, "", "tag"]], "pycwb.utils": [[26, 0, 0, "-", "check_ROOT"], [26, 0, 0, "-", "image"], [26, 0, 0, "-", "module"], [26, 0, 0, "-", "network"], [26, 0, 0, "-", "yaml_helper"]], "pycwb.utils.check_ROOT": [[26, 3, 1, "", "check_and_load_wavelet"]], "pycwb.utils.image": [[26, 3, 1, "", "align_images"], [26, 3, 1, "", "merge_images"], [26, 3, 1, "", "resize_image"], [26, 3, 1, "", "resize_resolution"]], "pycwb.utils.module": [[26, 3, 1, "", "import_helper"]], "pycwb.utils.network": [[26, 3, 1, "", "cartesian_to_spherical"], [26, 3, 1, "", "max_delay"], [26, 3, 1, "", "spherical_to_cartesian"]], "pycwb.utils.yaml_helper": [[26, 3, 1, "", "load_yaml"], [26, 3, 1, "", "set_default"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"us": 0, "pyburst": [0, 1, 28], "scientif": 0, "public": 0, "welcom": 1, "": 1, "document": [1, 2], "get": 1, "start": 1, "instal": [1, 2], "run": 1, "your": 1, "first": 1, "burst": 1, "search": [1, 5, 27, 28], "copi": 1, "exampl": 1, "configur": 1, "file": 1, "go": [1, 28], "deeper": [1, 28], "step": [1, 27], "inject": [1, 27], "indic": 1, "tabl": 1, "guid": 2, "conda": 2, "pip": 2, "from": 2, "sourc": 2, "other": 2, "scenario": 2, "build": 2, "note": 3, "modif": 3, "cwb": 3, "core": 3, "code": 3, "pycwb": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "packag": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "subpackag": [5, 9], "submodul": [5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "modul": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "content": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "config": 6, "constant": 7, "project_const": 7, "user_parameters_schema": 7, "messeng": 8, "autoencod": 10, "cwb_autoencod": 10, "catalog": 11, "coher": 12, "coherence_lit": 12, "cwb_convers": 13, "cluster": 13, "pixel": 13, "seri": 13, "sparse_seri": [13, 22, 25], "data_condit": 14, "regress": 14, "whiten": 14, "job_seg": 15, "dq_segment": 15, "frame": 15, "plot": [15, 19], "super_lag": 15, "likelihood": 16, "logger": 17, "multi_resolution_wdm": 18, "wdm": [18, 25], "cluster_statist": 19, "event": 19, "spectrogram": 19, "read_data": 20, "data_check": 20, "mdc": 20, "reconstruct": 21, "getmrawaveform": 21, "sparse_t": 22, "super_clust": 23, "superclust": 23, "web_view": 24, "creat": 24, "type": 25, "data_quality_fil": 25, "detector": 25, "job": 25, "network": [25, 26], "network_clust": 25, "network_ev": 25, "network_pixel": 25, "time_frequency_seri": 25, "wdm_xtalk": 25, "util": 26, "check_root": 26, "imag": 26, "yaml_help": 26, "tutori": 29}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Use of PyBurst in Scientific Publications": [[0, "use-of-pyburst-in-scientific-publications"]], "Welcome to PyBurst\u2019s documentation!": [[1, "welcome-to-pyburst-s-documentation"]], "Getting Started": [[1, "getting-started"]], "Installation": [[1, "installation"]], "Run your first burst search": [[1, "run-your-first-burst-search"]], "Copy the example configuration file": [[1, "copy-the-example-configuration-file"]], "Start searching!": [[1, "start-searching"]], "Go deeper into PyBurst.search": [[1, "go-deeper-into-pyburst-search"], [28, "go-deeper-into-pyburst-search"]], "Step by step injection!": [[1, "step-by-step-injection"]], "Indices and tables": [[1, "indices-and-tables"]], "Installation Guide": [[2, "installation-guide"]], "Installation with Conda/Pip": [[2, "installation-with-conda-pip"]], "Installing from Source with Conda": [[2, "installing-from-source-with-conda"]], "Other scenarios": [[2, "other-scenarios"]], "Building the Documentation": [[2, "building-the-documentation"]], "Notes on modifications of cWB core code": [[3, "notes-on-modifications-of-cwb-core-code"]], "pycwb": [[4, "pycwb"]], "pycwb package": [[5, "pycwb-package"]], "Subpackages": [[5, "subpackages"], [9, "subpackages"]], "Submodules": [[5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"], [26, "submodules"]], "pycwb.search module": [[5, "module-pycwb.search"]], "Module contents": [[5, "module-pycwb"], [6, "module-pycwb.config"], [7, "module-pycwb.constants"], [8, "module-pycwb.messenger"], [9, "module-pycwb.modules"], [10, "module-pycwb.modules.autoencoder"], [11, "module-pycwb.modules.catalog"], [12, "module-pycwb.modules.coherence"], [13, "module-pycwb.modules.cwb_conversions"], [14, "module-pycwb.modules.data_conditioning"], [15, "module-pycwb.modules.job_segment"], [16, "module-pycwb.modules.likelihood"], [17, "module-pycwb.modules.logger"], [18, "module-pycwb.modules.multi_resolution_wdm"], [19, "module-pycwb.modules.plot"], [20, "module-pycwb.modules.read_data"], [21, "module-pycwb.modules.reconstruction"], [22, "module-pycwb.modules.sparse_series"], [23, "module-pycwb.modules.super_cluster"], [24, "module-pycwb.modules.web_viewer"], [25, "module-pycwb.types"], [26, "module-pycwb.utils"]], "pycwb.config package": [[6, "pycwb-config-package"]], "pycwb.config.config module": [[6, "module-pycwb.config.config"]], "pycwb.constants package": [[7, "pycwb-constants-package"]], "pycwb.constants.project_constants module": [[7, "module-pycwb.constants.project_constants"]], "pycwb.constants.user_parameters_schema module": [[7, "module-pycwb.constants.user_parameters_schema"]], "pycwb.messenger package": [[8, "pycwb-messenger-package"]], "pycwb.messenger.messenger module": [[8, "module-pycwb.messenger.messenger"]], "pycwb.modules package": [[9, "pycwb-modules-package"]], "pycwb.modules.autoencoder package": [[10, "pycwb-modules-autoencoder-package"]], "pycwb.modules.autoencoder.autoencoder module": [[10, "module-pycwb.modules.autoencoder.autoencoder"]], "pycwb.modules.autoencoder.cwb_autoencoder module": [[10, "module-pycwb.modules.autoencoder.cwb_autoencoder"]], "pycwb.modules.catalog package": [[11, "pycwb-modules-catalog-package"]], "pycwb.modules.catalog.catalog module": [[11, "module-pycwb.modules.catalog.catalog"]], "pycwb.modules.coherence package": [[12, "pycwb-modules-coherence-package"]], "pycwb.modules.coherence.coherence module": [[12, "module-pycwb.modules.coherence.coherence"]], "pycwb.modules.coherence.coherence_lite module": [[12, "module-pycwb.modules.coherence.coherence_lite"]], "pycwb.modules.cwb_conversions package": [[13, "pycwb-modules-cwb-conversions-package"]], "pycwb.modules.cwb_conversions.cluster module": [[13, "module-pycwb.modules.cwb_conversions.cluster"]], "pycwb.modules.cwb_conversions.pixel module": [[13, "module-pycwb.modules.cwb_conversions.pixel"]], "pycwb.modules.cwb_conversions.series module": [[13, "module-pycwb.modules.cwb_conversions.series"]], "pycwb.modules.cwb_conversions.sparse_series module": [[13, "module-pycwb.modules.cwb_conversions.sparse_series"]], "pycwb.modules.data_conditioning package": [[14, "pycwb-modules-data-conditioning-package"]], "pycwb.modules.data_conditioning.data_conditioning module": [[14, "module-pycwb.modules.data_conditioning.data_conditioning"]], "pycwb.modules.data_conditioning.regression module": [[14, "module-pycwb.modules.data_conditioning.regression"]], "pycwb.modules.data_conditioning.whitening module": [[14, "module-pycwb.modules.data_conditioning.whitening"]], "pycwb.modules.job_segment package": [[15, "pycwb-modules-job-segment-package"]], "pycwb.modules.job_segment.dq_segment module": [[15, "module-pycwb.modules.job_segment.dq_segment"]], "pycwb.modules.job_segment.frame module": [[15, "module-pycwb.modules.job_segment.frame"]], "pycwb.modules.job_segment.job_segment module": [[15, "module-pycwb.modules.job_segment.job_segment"]], "pycwb.modules.job_segment.plots module": [[15, "module-pycwb.modules.job_segment.plots"]], "pycwb.modules.job_segment.super_lag module": [[15, "module-pycwb.modules.job_segment.super_lag"]], "pycwb.modules.likelihood package": [[16, "pycwb-modules-likelihood-package"]], "pycwb.modules.likelihood.likelihood module": [[16, "module-pycwb.modules.likelihood.likelihood"]], "pycwb.modules.logger package": [[17, "pycwb-modules-logger-package"]], "pycwb.modules.logger.logger module": [[17, "module-pycwb.modules.logger.logger"]], "pycwb.modules.multi_resolution_wdm package": [[18, "pycwb-modules-multi-resolution-wdm-package"]], "pycwb.modules.multi_resolution_wdm.wdm module": [[18, "module-pycwb.modules.multi_resolution_wdm.wdm"]], "pycwb.modules.plot package": [[19, "pycwb-modules-plot-package"]], "pycwb.modules.plot.cluster_statistics module": [[19, "module-pycwb.modules.plot.cluster_statistics"]], "pycwb.modules.plot.event module": [[19, "module-pycwb.modules.plot.event"]], "pycwb.modules.plot.spectrogram module": [[19, "module-pycwb.modules.plot.spectrogram"]], "pycwb.modules.read_data package": [[20, "pycwb-modules-read-data-package"]], "pycwb.modules.read_data.data_check module": [[20, "module-pycwb.modules.read_data.data_check"]], "pycwb.modules.read_data.mdc module": [[20, "module-pycwb.modules.read_data.mdc"]], "pycwb.modules.read_data.read_data module": [[20, "module-pycwb.modules.read_data.read_data"]], "pycwb.modules.reconstruction package": [[21, "pycwb-modules-reconstruction-package"]], "pycwb.modules.reconstruction.getMRAwaveform module": [[21, "module-pycwb.modules.reconstruction.getMRAwaveform"]], "pycwb.modules.sparse_series package": [[22, "pycwb-modules-sparse-series-package"]], "pycwb.modules.sparse_series.sparse_table module": [[22, "module-pycwb.modules.sparse_series.sparse_table"]], "pycwb.modules.super_cluster package": [[23, "pycwb-modules-super-cluster-package"]], "pycwb.modules.super_cluster.supercluster module": [[23, "module-pycwb.modules.super_cluster.supercluster"]], "pycwb.modules.web_viewer package": [[24, "pycwb-modules-web-viewer-package"]], "pycwb.modules.web_viewer.create module": [[24, "module-pycwb.modules.web_viewer.create"]], "pycwb.types package": [[25, "pycwb-types-package"]], "pycwb.types.data_quality_file module": [[25, "module-pycwb.types.data_quality_file"]], "pycwb.types.detector module": [[25, "module-pycwb.types.detector"]], "pycwb.types.job module": [[25, "module-pycwb.types.job"]], "pycwb.types.network module": [[25, "module-pycwb.types.network"]], "pycwb.types.network_cluster module": [[25, "module-pycwb.types.network_cluster"]], "pycwb.types.network_event module": [[25, "module-pycwb.types.network_event"]], "pycwb.types.network_pixel module": [[25, "module-pycwb.types.network_pixel"]], "pycwb.types.sparse_series module": [[25, "module-pycwb.types.sparse_series"]], "pycwb.types.time_frequency_series module": [[25, "module-pycwb.types.time_frequency_series"]], "pycwb.types.wdm module": [[25, "module-pycwb.types.wdm"]], "pycwb.types.wdm_xtalk module": [[25, "module-pycwb.types.wdm_xtalk"]], "pycwb.utils package": [[26, "pycwb-utils-package"]], "pycwb.utils.check_ROOT module": [[26, "module-pycwb.utils.check_ROOT"]], "pycwb.utils.image module": [[26, "module-pycwb.utils.image"]], "pycwb.utils.module module": [[26, "module-pycwb.utils.module"]], "pycwb.utils.network module": [[26, "module-pycwb.utils.network"]], "pycwb.utils.yaml_helper module": [[26, "module-pycwb.utils.yaml_helper"]], "Step by step injection search": [[27, "step-by-step-injection-search"]], "Tutorial": [[29, "tutorial"]]}, "indexentries": {"analyze_job_segment() (in module pycwb.search)": [[5, "pycwb.search.analyze_job_segment"]], "module": [[5, "module-pycwb"], [5, "module-pycwb.search"], [6, "module-pycwb.config"], [6, "module-pycwb.config.config"], [7, "module-pycwb.constants"], [7, "module-pycwb.constants.project_constants"], [7, "module-pycwb.constants.user_parameters_schema"], [8, "module-pycwb.messenger"], [8, "module-pycwb.messenger.messenger"], [9, "module-pycwb.modules"], [10, "module-pycwb.modules.autoencoder"], [10, "module-pycwb.modules.autoencoder.autoencoder"], [10, "module-pycwb.modules.autoencoder.cwb_autoencoder"], [11, "module-pycwb.modules.catalog"], [11, "module-pycwb.modules.catalog.catalog"], [12, "module-pycwb.modules.coherence"], [12, "module-pycwb.modules.coherence.coherence"], [12, "module-pycwb.modules.coherence.coherence_lite"], [13, "module-pycwb.modules.cwb_conversions"], [13, "module-pycwb.modules.cwb_conversions.cluster"], [13, "module-pycwb.modules.cwb_conversions.pixel"], [13, "module-pycwb.modules.cwb_conversions.series"], [13, "module-pycwb.modules.cwb_conversions.sparse_series"], [14, "module-pycwb.modules.data_conditioning"], [14, "module-pycwb.modules.data_conditioning.data_conditioning"], [14, "module-pycwb.modules.data_conditioning.regression"], [14, "module-pycwb.modules.data_conditioning.whitening"], [15, "module-pycwb.modules.job_segment"], [15, "module-pycwb.modules.job_segment.dq_segment"], [15, "module-pycwb.modules.job_segment.frame"], [15, "module-pycwb.modules.job_segment.job_segment"], [15, "module-pycwb.modules.job_segment.plots"], [15, "module-pycwb.modules.job_segment.super_lag"], [16, "module-pycwb.modules.likelihood"], [16, "module-pycwb.modules.likelihood.likelihood"], [17, "module-pycwb.modules.logger"], [17, "module-pycwb.modules.logger.logger"], [18, "module-pycwb.modules.multi_resolution_wdm"], [18, "module-pycwb.modules.multi_resolution_wdm.wdm"], [19, "module-pycwb.modules.plot"], [19, "module-pycwb.modules.plot.cluster_statistics"], [19, "module-pycwb.modules.plot.event"], [19, "module-pycwb.modules.plot.spectrogram"], [20, "module-pycwb.modules.read_data"], [20, "module-pycwb.modules.read_data.data_check"], [20, "module-pycwb.modules.read_data.mdc"], [20, "module-pycwb.modules.read_data.read_data"], [21, "module-pycwb.modules.reconstruction"], [21, "module-pycwb.modules.reconstruction.getMRAwaveform"], [22, "module-pycwb.modules.sparse_series"], [22, "module-pycwb.modules.sparse_series.sparse_table"], [23, "module-pycwb.modules.super_cluster"], [23, "module-pycwb.modules.super_cluster.supercluster"], [24, "module-pycwb.modules.web_viewer"], [24, "module-pycwb.modules.web_viewer.create"], [25, "module-pycwb.types"], [25, "module-pycwb.types.data_quality_file"], [25, "module-pycwb.types.detector"], [25, "module-pycwb.types.job"], [25, "module-pycwb.types.network"], [25, "module-pycwb.types.network_cluster"], [25, "module-pycwb.types.network_event"], [25, "module-pycwb.types.network_pixel"], [25, "module-pycwb.types.sparse_series"], [25, "module-pycwb.types.time_frequency_series"], [25, "module-pycwb.types.wdm"], [25, "module-pycwb.types.wdm_xtalk"], [26, "module-pycwb.utils"], [26, "module-pycwb.utils.check_ROOT"], [26, "module-pycwb.utils.image"], [26, "module-pycwb.utils.module"], [26, "module-pycwb.utils.network"], [26, "module-pycwb.utils.yaml_helper"]], "pycwb": [[5, "module-pycwb"]], "pycwb.search": [[5, "module-pycwb.search"]], "search() (in module pycwb.search)": [[5, "pycwb.search.search"]], "config (class in pycwb.config.config)": [[6, "pycwb.config.config.Config"]], "add_derived_key() (pycwb.config.config.config method)": [[6, "pycwb.config.config.Config.add_derived_key"]], "check_mra_catalog() (pycwb.config.config.config method)": [[6, "pycwb.config.config.Config.check_MRA_catalog"]], "check_file() (pycwb.config.config.config static method)": [[6, "pycwb.config.config.Config.check_file"]], "check_lagstep() (pycwb.config.config.config method)": [[6, "pycwb.config.config.Config.check_lagStep"]], "get_lag_buffer() (pycwb.config.config.config method)": [[6, "pycwb.config.config.Config.get_lag_buffer"]], "pycwb.config": [[6, "module-pycwb.config"]], "pycwb.config.config": [[6, "module-pycwb.config.config"]], "pycwb.constants": [[7, "module-pycwb.constants"]], "pycwb.constants.project_constants": [[7, "module-pycwb.constants.project_constants"]], "pycwb.constants.user_parameters_schema": [[7, "module-pycwb.constants.user_parameters_schema"]], "import_helper() (in module pycwb.messenger.messenger)": [[8, "pycwb.messenger.messenger.import_helper"]], "pycwb.messenger": [[8, "module-pycwb.messenger"]], "pycwb.messenger.messenger": [[8, "module-pycwb.messenger.messenger"]], "pycwb.modules": [[9, "module-pycwb.modules"]], "autoencoder (class in pycwb.modules.autoencoder.cwb_autoencoder)": [[10, "pycwb.modules.autoencoder.cwb_autoencoder.AutoEncoder"]], "mse() (in module pycwb.modules.autoencoder.cwb_autoencoder)": [[10, "pycwb.modules.autoencoder.cwb_autoencoder.MSE"]], "autoencoder() (in module pycwb.modules.autoencoder.cwb_autoencoder)": [[10, "pycwb.modules.autoencoder.cwb_autoencoder.autoencoder"]], "get_glitchness() (in module pycwb.modules.autoencoder.autoencoder)": [[10, "pycwb.modules.autoencoder.autoencoder.get_glitchness"]], "get_glness() (pycwb.modules.autoencoder.cwb_autoencoder.autoencoder method)": [[10, "pycwb.modules.autoencoder.cwb_autoencoder.AutoEncoder.get_glness"]], "pycwb.modules.autoencoder": [[10, "module-pycwb.modules.autoencoder"]], "pycwb.modules.autoencoder.autoencoder": [[10, "module-pycwb.modules.autoencoder.autoencoder"]], "pycwb.modules.autoencoder.cwb_autoencoder": [[10, "module-pycwb.modules.autoencoder.cwb_autoencoder"]], "set_weights() (pycwb.modules.autoencoder.cwb_autoencoder.autoencoder method)": [[10, "pycwb.modules.autoencoder.cwb_autoencoder.AutoEncoder.set_weights"]], "timeseries_processing() (in module pycwb.modules.autoencoder.cwb_autoencoder)": [[10, "pycwb.modules.autoencoder.cwb_autoencoder.timeseries_processing"]], "add_events_to_catalog() (in module pycwb.modules.catalog.catalog)": [[11, "pycwb.modules.catalog.catalog.add_events_to_catalog"]], "create_catalog() (in module pycwb.modules.catalog.catalog)": [[11, "pycwb.modules.catalog.catalog.create_catalog"]], "pycwb.modules.catalog": [[11, "module-pycwb.modules.catalog"]], "pycwb.modules.catalog.catalog": [[11, "module-pycwb.modules.catalog.catalog"]], "coherence() (in module pycwb.modules.coherence.coherence)": [[12, "pycwb.modules.coherence.coherence.coherence"]], "coherence() (in module pycwb.modules.coherence.coherence_lite)": [[12, "pycwb.modules.coherence.coherence_lite.coherence"]], "coherence_parallel() (in module pycwb.modules.coherence.coherence)": [[12, "pycwb.modules.coherence.coherence.coherence_parallel"]], "coherence_parallel() (in module pycwb.modules.coherence.coherence_lite)": [[12, "pycwb.modules.coherence.coherence_lite.coherence_parallel"]], "pycwb.modules.coherence": [[12, "module-pycwb.modules.coherence"]], "pycwb.modules.coherence.coherence": [[12, "module-pycwb.modules.coherence.coherence"]], "pycwb.modules.coherence.coherence_lite": [[12, "module-pycwb.modules.coherence.coherence_lite"]], "wseries_to_matrix() (in module pycwb.modules.cwb_conversions.series)": [[13, "pycwb.modules.cwb_conversions.series.WSeries_to_matrix"]], "c_double_p (in module pycwb.modules.cwb_conversions.series)": [[13, "pycwb.modules.cwb_conversions.series.c_double_p"]], "convert_cluster_meta_to_cdata() (in module pycwb.modules.cwb_conversions.cluster)": [[13, "pycwb.modules.cwb_conversions.cluster.convert_cluster_meta_to_cData"]], "convert_fragment_clusters_to_netcluster() (in module pycwb.modules.cwb_conversions.cluster)": [[13, "pycwb.modules.cwb_conversions.cluster.convert_fragment_clusters_to_netcluster"]], "convert_pixel_to_netpixel() (in module pycwb.modules.cwb_conversions.pixel)": [[13, "pycwb.modules.cwb_conversions.pixel.convert_pixel_to_netpixel"]], "convert_pycbc_timeseries_to_wavearray() (in module pycwb.modules.cwb_conversions.series)": [[13, "pycwb.modules.cwb_conversions.series.convert_pycbc_timeseries_to_wavearray"]], "convert_sparse_series_to_sseries() (in module pycwb.modules.cwb_conversions.sparse_series)": [[13, "pycwb.modules.cwb_conversions.sparse_series.convert_sparse_series_to_sseries"]], "convert_time_frequency_series_to_wseries() (in module pycwb.modules.cwb_conversions.series)": [[13, "pycwb.modules.cwb_conversions.series.convert_time_frequency_series_to_wseries"]], "convert_timeseries_to_wavearray() (in module pycwb.modules.cwb_conversions.series)": [[13, "pycwb.modules.cwb_conversions.series.convert_timeseries_to_wavearray"]], "convert_to_pixdata() (in module pycwb.modules.cwb_conversions.pixel)": [[13, "pycwb.modules.cwb_conversions.pixel.convert_to_pixdata"]], "convert_to_wavearray() (in module pycwb.modules.cwb_conversions.series)": [[13, "pycwb.modules.cwb_conversions.series.convert_to_wavearray"]], "convert_to_wseries() (in module pycwb.modules.cwb_conversions.series)": [[13, "pycwb.modules.cwb_conversions.series.convert_to_wseries"]], "convert_wavearray_to_pycbc_timeseries() (in module pycwb.modules.cwb_conversions.series)": [[13, "pycwb.modules.cwb_conversions.series.convert_wavearray_to_pycbc_timeseries"]], "convert_wavearray_to_timeseries() (in module pycwb.modules.cwb_conversions.series)": [[13, "pycwb.modules.cwb_conversions.series.convert_wavearray_to_timeseries"]], "convert_wseries_to_pycbc_timeseries() (in module pycwb.modules.cwb_conversions.series)": [[13, "pycwb.modules.cwb_conversions.series.convert_wseries_to_pycbc_timeseries"]], "convert_wseries_to_time_frequency_series() (in module pycwb.modules.cwb_conversions.series)": [[13, "pycwb.modules.cwb_conversions.series.convert_wseries_to_time_frequency_series"]], "convert_wseries_to_timeseries() (in module pycwb.modules.cwb_conversions.series)": [[13, "pycwb.modules.cwb_conversions.series.convert_wseries_to_timeseries"]], "declare_function() (in module pycwb.modules.cwb_conversions.series)": [[13, "pycwb.modules.cwb_conversions.series.declare_function"]], "pycwb.modules.cwb_conversions": [[13, "module-pycwb.modules.cwb_conversions"]], "pycwb.modules.cwb_conversions.cluster": [[13, "module-pycwb.modules.cwb_conversions.cluster"]], "pycwb.modules.cwb_conversions.pixel": [[13, "module-pycwb.modules.cwb_conversions.pixel"]], "pycwb.modules.cwb_conversions.series": [[13, "module-pycwb.modules.cwb_conversions.series"]], "pycwb.modules.cwb_conversions.sparse_series": [[13, "module-pycwb.modules.cwb_conversions.sparse_series"]], "data_conditioning() (in module pycwb.modules.data_conditioning.data_conditioning)": [[14, "pycwb.modules.data_conditioning.data_conditioning.data_conditioning"]], "pycwb.modules.data_conditioning": [[14, "module-pycwb.modules.data_conditioning"]], "pycwb.modules.data_conditioning.data_conditioning": [[14, "module-pycwb.modules.data_conditioning.data_conditioning"]], "pycwb.modules.data_conditioning.regression": [[14, "module-pycwb.modules.data_conditioning.regression"]], "pycwb.modules.data_conditioning.whitening": [[14, "module-pycwb.modules.data_conditioning.whitening"]], "regression() (in module pycwb.modules.data_conditioning.regression)": [[14, "pycwb.modules.data_conditioning.regression.regression"]], "whitening() (in module pycwb.modules.data_conditioning.whitening)": [[14, "pycwb.modules.data_conditioning.whitening.whitening"]], "add_slag_shifts() (in module pycwb.modules.job_segment.super_lag)": [[15, "pycwb.modules.job_segment.super_lag.add_slag_shifts"]], "create_job_segment_from_config() (in module pycwb.modules.job_segment.job_segment)": [[15, "pycwb.modules.job_segment.job_segment.create_job_segment_from_config"]], "create_job_segment_from_injection() (in module pycwb.modules.job_segment.job_segment)": [[15, "pycwb.modules.job_segment.job_segment.create_job_segment_from_injection"]], "get_frame_meta() (in module pycwb.modules.job_segment.frame)": [[15, "pycwb.modules.job_segment.frame.get_frame_meta"]], "get_job_list() (in module pycwb.modules.job_segment.dq_segment)": [[15, "pycwb.modules.job_segment.dq_segment.get_job_list"]], "get_seg_list() (in module pycwb.modules.job_segment.dq_segment)": [[15, "pycwb.modules.job_segment.dq_segment.get_seg_list"]], "get_slag_job_list() (in module pycwb.modules.job_segment.super_lag)": [[15, "pycwb.modules.job_segment.super_lag.get_slag_job_list"]], "get_slag_list() (in module pycwb.modules.job_segment.super_lag)": [[15, "pycwb.modules.job_segment.super_lag.get_slag_list"]], "merge_seg_list() (in module pycwb.modules.job_segment.dq_segment)": [[15, "pycwb.modules.job_segment.dq_segment.merge_seg_list"]], "plot_seg_list() (in module pycwb.modules.job_segment.plots)": [[15, "pycwb.modules.job_segment.plots.plot_seg_list"]], "pycwb.modules.job_segment": [[15, "module-pycwb.modules.job_segment"]], "pycwb.modules.job_segment.dq_segment": [[15, "module-pycwb.modules.job_segment.dq_segment"]], "pycwb.modules.job_segment.frame": [[15, "module-pycwb.modules.job_segment.frame"]], "pycwb.modules.job_segment.job_segment": [[15, "module-pycwb.modules.job_segment.job_segment"]], "pycwb.modules.job_segment.plots": [[15, "module-pycwb.modules.job_segment.plots"]], "pycwb.modules.job_segment.super_lag": [[15, "module-pycwb.modules.job_segment.super_lag"]], "read_seg_list() (in module pycwb.modules.job_segment.dq_segment)": [[15, "pycwb.modules.job_segment.dq_segment.read_seg_list"]], "select_frame_list() (in module pycwb.modules.job_segment.frame)": [[15, "pycwb.modules.job_segment.frame.select_frame_list"]], "select_job_segment() (in module pycwb.modules.job_segment.job_segment)": [[15, "pycwb.modules.job_segment.job_segment.select_job_segment"]], "likelihood() (in module pycwb.modules.likelihood.likelihood)": [[16, "pycwb.modules.likelihood.likelihood.likelihood"]], "pycwb.modules.likelihood": [[16, "module-pycwb.modules.likelihood"]], "pycwb.modules.likelihood.likelihood": [[16, "module-pycwb.modules.likelihood.likelihood"]], "save_likelihood_data() (in module pycwb.modules.likelihood.likelihood)": [[16, "pycwb.modules.likelihood.likelihood.save_likelihood_data"]], "logger_init() (in module pycwb.modules.logger.logger)": [[17, "pycwb.modules.logger.logger.logger_init"]], "pycwb.modules.logger": [[17, "module-pycwb.modules.logger"]], "pycwb.modules.logger.logger": [[17, "module-pycwb.modules.logger.logger"]], "create_wdm_for_level() (in module pycwb.modules.multi_resolution_wdm.wdm)": [[18, "pycwb.modules.multi_resolution_wdm.wdm.create_wdm_for_level"]], "create_wdm_set() (in module pycwb.modules.multi_resolution_wdm.wdm)": [[18, "pycwb.modules.multi_resolution_wdm.wdm.create_wdm_set"]], "pycwb.modules.multi_resolution_wdm": [[18, "module-pycwb.modules.multi_resolution_wdm"]], "pycwb.modules.multi_resolution_wdm.wdm": [[18, "module-pycwb.modules.multi_resolution_wdm.wdm"]], "plot_event_on_spectrogram() (in module pycwb.modules.plot.event)": [[19, "pycwb.modules.plot.event.plot_event_on_spectrogram"]], "plot_spectrogram() (in module pycwb.modules.plot.spectrogram)": [[19, "pycwb.modules.plot.spectrogram.plot_spectrogram"]], "plot_statistics() (in module pycwb.modules.plot.cluster_statistics)": [[19, "pycwb.modules.plot.cluster_statistics.plot_statistics"]], "pycwb.modules.plot": [[19, "module-pycwb.modules.plot"]], "pycwb.modules.plot.cluster_statistics": [[19, "module-pycwb.modules.plot.cluster_statistics"]], "pycwb.modules.plot.event": [[19, "module-pycwb.modules.plot.event"]], "pycwb.modules.plot.spectrogram": [[19, "module-pycwb.modules.plot.spectrogram"]], "check_and_resample() (in module pycwb.modules.read_data.data_check)": [[20, "pycwb.modules.read_data.data_check.check_and_resample"]], "data_check() (in module pycwb.modules.read_data.data_check)": [[20, "pycwb.modules.read_data.data_check.data_check"]], "generate_from_pycbc() (in module pycwb.modules.read_data.mdc)": [[20, "pycwb.modules.read_data.mdc.generate_from_pycbc"]], "generate_injection() (in module pycwb.modules.read_data.mdc)": [[20, "pycwb.modules.read_data.mdc.generate_injection"]], "generate_injection_from_config() (in module pycwb.modules.read_data.mdc)": [[20, "pycwb.modules.read_data.mdc.generate_injection_from_config"]], "generate_noise() (in module pycwb.modules.read_data.mdc)": [[20, "pycwb.modules.read_data.mdc.generate_noise"]], "project_to_detector() (in module pycwb.modules.read_data.mdc)": [[20, "pycwb.modules.read_data.mdc.project_to_detector"]], "pycwb.modules.read_data": [[20, "module-pycwb.modules.read_data"]], "pycwb.modules.read_data.data_check": [[20, "module-pycwb.modules.read_data.data_check"]], "pycwb.modules.read_data.mdc": [[20, "module-pycwb.modules.read_data.mdc"]], "pycwb.modules.read_data.read_data": [[20, "module-pycwb.modules.read_data.read_data"]], "read_from_catalog() (in module pycwb.modules.read_data.read_data)": [[20, "pycwb.modules.read_data.read_data.read_from_catalog"]], "read_from_gwf() (in module pycwb.modules.read_data.read_data)": [[20, "pycwb.modules.read_data.read_data.read_from_gwf"]], "read_from_job_segment() (in module pycwb.modules.read_data.read_data)": [[20, "pycwb.modules.read_data.read_data.read_from_job_segment"]], "read_from_online() (in module pycwb.modules.read_data.read_data)": [[20, "pycwb.modules.read_data.read_data.read_from_online"]], "save_to_gwf() (in module pycwb.modules.read_data.mdc)": [[20, "pycwb.modules.read_data.mdc.save_to_gwf"]], "get_mra_wave() (in module pycwb.modules.reconstruction.getmrawaveform)": [[21, "pycwb.modules.reconstruction.getMRAwaveform.get_MRA_wave"]], "get_network_mra_wave() (in module pycwb.modules.reconstruction.getmrawaveform)": [[21, "pycwb.modules.reconstruction.getMRAwaveform.get_network_MRA_wave"]], "pycwb.modules.reconstruction": [[21, "module-pycwb.modules.reconstruction"]], "pycwb.modules.reconstruction.getmrawaveform": [[21, "module-pycwb.modules.reconstruction.getMRAwaveform"]], "pycwb.modules.sparse_series": [[22, "module-pycwb.modules.sparse_series"]], "pycwb.modules.sparse_series.sparse_table": [[22, "module-pycwb.modules.sparse_series.sparse_table"]], "sparse_table_from_fragment_clusters() (in module pycwb.modules.sparse_series.sparse_table)": [[22, "pycwb.modules.sparse_series.sparse_table.sparse_table_from_fragment_clusters"]], "pycwb.modules.super_cluster": [[23, "module-pycwb.modules.super_cluster"]], "pycwb.modules.super_cluster.supercluster": [[23, "module-pycwb.modules.super_cluster.supercluster"]], "supercluster() (in module pycwb.modules.super_cluster.supercluster)": [[23, "pycwb.modules.super_cluster.supercluster.supercluster"]], "create_web_viewer() (in module pycwb.modules.web_viewer.create)": [[24, "pycwb.modules.web_viewer.create.create_web_viewer"]], "pycwb.modules.web_viewer": [[24, "module-pycwb.modules.web_viewer"]], "pycwb.modules.web_viewer.create": [[24, "module-pycwb.modules.web_viewer.create"]], "cluster (class in pycwb.types.network_cluster)": [[25, "pycwb.types.network_cluster.Cluster"]], "clustermeta (class in pycwb.types.network_cluster)": [[25, "pycwb.types.network_cluster.ClusterMeta"]], "dqfile (class in pycwb.types.data_quality_file)": [[25, "pycwb.types.data_quality_file.DQFile"]], "detector (class in pycwb.types.detector)": [[25, "pycwb.types.detector.Detector"]], "event (class in pycwb.types.network_event)": [[25, "pycwb.types.network_event.Event"]], "fragmentcluster (class in pycwb.types.network_cluster)": [[25, "pycwb.types.network_cluster.FragmentCluster"]], "framefile (class in pycwb.types.job)": [[25, "pycwb.types.job.FrameFile"]], "network (class in pycwb.types.network)": [[25, "pycwb.types.network.Network"]], "pixel (class in pycwb.types.network_pixel)": [[25, "pycwb.types.network_pixel.Pixel"]], "pixeldata (class in pycwb.types.network_pixel)": [[25, "pycwb.types.network_pixel.PixelData"]], "slag (class in pycwb.types.job)": [[25, "pycwb.types.job.SLag"]], "sparsetimefrequencyseries (class in pycwb.types.sparse_series)": [[25, "pycwb.types.sparse_series.SparseTimeFrequencySeries"]], "timefrequencyseries (class in pycwb.types.time_frequency_series)": [[25, "pycwb.types.time_frequency_series.TimeFrequencySeries"]], "wdm (class in pycwb.types.wdm)": [[25, "pycwb.types.wdm.WDM"]], "wdmxtalkcatalog (class in pycwb.types.wdm_xtalk)": [[25, "pycwb.types.wdm_xtalk.WDMXTalkCatalog"]], "wavesegment (class in pycwb.types.job)": [[25, "pycwb.types.job.WaveSegment"]], "a_90 (pycwb.types.network_pixel.pixeldata attribute)": [[25, "pycwb.types.network_pixel.PixelData.a_90"]], "a_net (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.a_net"]], "add_core() (pycwb.types.sparse_series.sparsetimefrequencyseries method)": [[25, "pycwb.types.sparse_series.SparseTimeFrequencySeries.add_core"]], "add_detector() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.add_detector"]], "add_wavelet() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.add_wavelet"]], "allocate() (pycwb.types.wdm.wdm method)": [[25, "pycwb.types.wdm.WDM.allocate"]], "asnr (pycwb.types.network_pixel.pixeldata attribute)": [[25, "pycwb.types.network_pixel.PixelData.asnr"]], "beta_order (pycwb.types.wdm.wdm attribute)": [[25, "pycwb.types.wdm.WDM.beta_order"]], "beta_order (pycwb.types.wdm_xtalk.wdmxtalkcatalog property)": [[25, "pycwb.types.wdm_xtalk.WDMXTalkCatalog.beta_order"]], "bpp (pycwb.types.network_cluster.fragmentcluster attribute)": [[25, "pycwb.types.network_cluster.FragmentCluster.bpp"]], "bpp (pycwb.types.time_frequency_series.timefrequencyseries attribute)": [[25, "pycwb.types.time_frequency_series.TimeFrequencySeries.bpp"]], "c4 (pycwb.types.data_quality_file.dqfile attribute)": [[25, "pycwb.types.data_quality_file.DQFile.c4"]], "c_freq (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.c_freq"]], "c_time (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.c_time"]], "check_layers_with_mracatalog() (pycwb.types.wdm_xtalk.wdmxtalkcatalog method)": [[25, "pycwb.types.wdm_xtalk.WDMXTalkCatalog.check_layers_with_MRAcatalog"]], "chi2chirp (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.chi2chirp"]], "chirp (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.chirp"]], "chirp_efrac (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.chirp_efrac"]], "chirp_ellip (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.chirp_ellip"]], "chirp_pfrac (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.chirp_pfrac"]], "clone() (pycwb.types.wdm.wdm method)": [[25, "pycwb.types.wdm.WDM.clone"]], "cluster() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.cluster"]], "cluster_freq (pycwb.types.network_cluster.cluster attribute)": [[25, "pycwb.types.network_cluster.Cluster.cluster_freq"]], "cluster_meta (pycwb.types.network_cluster.cluster attribute)": [[25, "pycwb.types.network_cluster.Cluster.cluster_meta"]], "cluster_rate (pycwb.types.network_cluster.cluster attribute)": [[25, "pycwb.types.network_cluster.Cluster.cluster_rate"]], "cluster_status (pycwb.types.network_cluster.cluster attribute)": [[25, "pycwb.types.network_cluster.Cluster.cluster_status"]], "cluster_time (pycwb.types.network_cluster.cluster attribute)": [[25, "pycwb.types.network_cluster.Cluster.cluster_time"]], "clusters (pycwb.types.network_cluster.fragmentcluster attribute)": [[25, "pycwb.types.network_cluster.FragmentCluster.clusters"]], "copy() (pycwb.types.time_frequency_series.timefrequencyseries method)": [[25, "pycwb.types.time_frequency_series.TimeFrequencySeries.copy"]], "core (pycwb.types.network_pixel.pixel attribute)": [[25, "pycwb.types.network_pixel.Pixel.core"]], "data (pycwb.types.network_pixel.pixel attribute)": [[25, "pycwb.types.network_pixel.Pixel.data"]], "data (pycwb.types.time_frequency_series.timefrequencyseries attribute)": [[25, "pycwb.types.time_frequency_series.TimeFrequencySeries.data"]], "declare_function() (in module pycwb.types.wdm)": [[25, "pycwb.types.wdm.declare_function"]], "dq_cat (pycwb.types.data_quality_file.dqfile attribute)": [[25, "pycwb.types.data_quality_file.DQFile.dq_cat"]], "dump() (pycwb.types.network_event.event method)": [[25, "pycwb.types.network_event.Event.dump"]], "dump_cluster() (pycwb.types.network_cluster.fragmentcluster method)": [[25, "pycwb.types.network_cluster.FragmentCluster.dump_cluster"]], "duration (pycwb.types.job.framefile attribute)": [[25, "pycwb.types.job.FrameFile.duration"]], "edge (pycwb.types.time_frequency_series.timefrequencyseries property)": [[25, "pycwb.types.time_frequency_series.TimeFrequencySeries.edge"]], "ellipticity (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.ellipticity"]], "ellipticity (pycwb.types.network_pixel.pixel attribute)": [[25, "pycwb.types.network_pixel.Pixel.ellipticity"]], "end_time (pycwb.types.job.framefile property)": [[25, "pycwb.types.job.FrameFile.end_time"]], "end_time (pycwb.types.job.wavesegment attribute)": [[25, "pycwb.types.job.WaveSegment.end_time"]], "energy (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.energy"]], "energy_sky (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.energy_sky"]], "event_count() (pycwb.types.network_cluster.fragmentcluster method)": [[25, "pycwb.types.network_cluster.FragmentCluster.event_count"]], "f_high (pycwb.types.network_cluster.fragmentcluster attribute)": [[25, "pycwb.types.network_cluster.FragmentCluster.f_high"]], "f_high (pycwb.types.time_frequency_series.timefrequencyseries property)": [[25, "pycwb.types.time_frequency_series.TimeFrequencySeries.f_high"]], "f_low (pycwb.types.network_cluster.fragmentcluster attribute)": [[25, "pycwb.types.network_cluster.FragmentCluster.f_low"]], "f_low (pycwb.types.time_frequency_series.timefrequencyseries property)": [[25, "pycwb.types.time_frequency_series.TimeFrequencySeries.f_low"]], "file (pycwb.types.data_quality_file.dqfile attribute)": [[25, "pycwb.types.data_quality_file.DQFile.file"]], "forward() (pycwb.types.time_frequency_series.timefrequencyseries method)": [[25, "pycwb.types.time_frequency_series.TimeFrequencySeries.forward"]], "frames (pycwb.types.job.wavesegment attribute)": [[25, "pycwb.types.job.WaveSegment.frames"]], "frequency (pycwb.types.network_pixel.pixel attribute)": [[25, "pycwb.types.network_pixel.Pixel.frequency"]], "frequency_in_hz (pycwb.types.network_pixel.pixel property)": [[25, "pycwb.types.network_pixel.Pixel.frequency_in_hz"]], "from_cdata() (pycwb.types.network_cluster.clustermeta method)": [[25, "pycwb.types.network_cluster.ClusterMeta.from_cData"]], "from_fragment_cluster() (pycwb.types.sparse_series.sparsetimefrequencyseries method)": [[25, "pycwb.types.sparse_series.SparseTimeFrequencySeries.from_fragment_cluster"]], "from_netcluster() (pycwb.types.network_cluster.cluster method)": [[25, "pycwb.types.network_cluster.Cluster.from_netcluster"]], "from_netcluster() (pycwb.types.network_cluster.fragmentcluster method)": [[25, "pycwb.types.network_cluster.FragmentCluster.from_netcluster"]], "from_netpixel() (pycwb.types.network_pixel.pixel method)": [[25, "pycwb.types.network_pixel.Pixel.from_netpixel"]], "g_net (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.g_net"]], "g_noise (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.g_noise"]], "get_base_wave() (pycwb.types.wdm.wdm method)": [[25, "pycwb.types.wdm.WDM.get_base_wave"]], "get_cluster() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.get_cluster"]], "get_ifo() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.get_ifo"]], "get_map_00() (pycwb.types.wdm.wdm method)": [[25, "pycwb.types.wdm.WDM.get_map_00"]], "get_map_90() (pycwb.types.wdm.wdm method)": [[25, "pycwb.types.wdm.WDM.get_map_90"]], "get_max_delay() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.get_max_delay"]], "get_network_pixels() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.get_network_pixels"]], "get_periods() (pycwb.types.data_quality_file.dqfile method)": [[25, "pycwb.types.data_quality_file.DQFile.get_periods"]], "get_pixel_rates() (pycwb.types.network_cluster.cluster method)": [[25, "pycwb.types.network_cluster.Cluster.get_pixel_rates"]], "get_pixels_with_rate() (pycwb.types.network_cluster.cluster method)": [[25, "pycwb.types.network_cluster.Cluster.get_pixels_with_rate"]], "get_slice_size() (pycwb.types.wdm.wdm method)": [[25, "pycwb.types.wdm.WDM.get_slice_size"]], "get_sparse_map() (pycwb.types.network_cluster.cluster method)": [[25, "pycwb.types.network_cluster.Cluster.get_sparse_map"]], "get_sparse_map_by_rate() (pycwb.types.network_cluster.cluster method)": [[25, "pycwb.types.network_cluster.Cluster.get_sparse_map_by_rate"]], "get_wdmmra() (pycwb.types.wdm_xtalk.wdmxtalkcatalog method)": [[25, "pycwb.types.wdm_xtalk.WDMXTalkCatalog.get_wdmMRA"]], "i_net (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.i_net"]], "ifo (pycwb.types.data_quality_file.dqfile attribute)": [[25, "pycwb.types.data_quality_file.DQFile.ifo"]], "ifo (pycwb.types.job.framefile attribute)": [[25, "pycwb.types.job.FrameFile.ifo"]], "ifo_size (pycwb.types.network.network property)": [[25, "pycwb.types.network.Network.ifo_size"]], "index (pycwb.types.job.wavesegment attribute)": [[25, "pycwb.types.job.WaveSegment.index"]], "index (pycwb.types.network_pixel.pixeldata attribute)": [[25, "pycwb.types.network_pixel.PixelData.index"]], "injections (pycwb.types.job.wavesegment attribute)": [[25, "pycwb.types.job.WaveSegment.injections"]], "invert (pycwb.types.data_quality_file.dqfile attribute)": [[25, "pycwb.types.data_quality_file.DQFile.invert"]], "iota (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.iota"]], "job_id (pycwb.types.job.slag attribute)": [[25, "pycwb.types.job.SLag.job_id"]], "json() (pycwb.types.network_event.event method)": [[25, "pycwb.types.network_event.Event.json"]], "layers (pycwb.types.network_pixel.pixel attribute)": [[25, "pycwb.types.network_pixel.Pixel.layers"]], "layers (pycwb.types.wdm_xtalk.wdmxtalkcatalog property)": [[25, "pycwb.types.wdm_xtalk.WDMXTalkCatalog.layers"]], "lightweight_dump() (pycwb.types.wdm.wdm method)": [[25, "pycwb.types.wdm.WDM.lightweight_dump"]], "like_net (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.like_net"]], "like_sky (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.like_sky"]], "likelihood (pycwb.types.network_pixel.pixel attribute)": [[25, "pycwb.types.network_pixel.Pixel.likelihood"]], "likelihood2g() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.likelihood2G"]], "likelihoodwp() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.likelihoodWP"]], "load_mra() (pycwb.types.wdm_xtalk.wdmxtalkcatalog method)": [[25, "pycwb.types.wdm_xtalk.WDMXTalkCatalog.load_MRA"]], "load_strains() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.load_strains"]], "m (pycwb.types.wdm.wdm attribute)": [[25, "pycwb.types.wdm.WDM.m"]], "m_h (pycwb.types.wdm.wdm property)": [[25, "pycwb.types.wdm.WDM.m_H"]], "m_l (pycwb.types.wdm.wdm property)": [[25, "pycwb.types.wdm.WDM.m_L"]], "make_sky_mask() (in module pycwb.types.network)": [[25, "pycwb.types.network.make_sky_mask"]], "max_index (pycwb.types.wdm.wdm property)": [[25, "pycwb.types.wdm.WDM.max_index"]], "max_layer (pycwb.types.wdm.wdm property)": [[25, "pycwb.types.wdm.WDM.max_layer"]], "max_level (pycwb.types.wdm.wdm property)": [[25, "pycwb.types.wdm.WDM.max_level"]], "mchirp (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.mchirp"]], "mchirperr (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.mchirperr"]], "mchpdf (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.mchpdf"]], "nlag (pycwb.types.network.network property)": [[25, "pycwb.types.network.Network.nLag"]], "nsts (pycwb.types.wdm.wdm property)": [[25, "pycwb.types.wdm.WDM.nSTS"]], "nwws (pycwb.types.wdm.wdm property)": [[25, "pycwb.types.wdm.WDM.nWWS"]], "n_events (pycwb.types.network.network property)": [[25, "pycwb.types.network.Network.n_events"]], "n_pix (pycwb.types.network_cluster.fragmentcluster attribute)": [[25, "pycwb.types.network_cluster.FragmentCluster.n_pix"]], "n_res (pycwb.types.wdm_xtalk.wdmxtalkcatalog property)": [[25, "pycwb.types.wdm_xtalk.WDMXTalkCatalog.n_res"]], "ndof (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.ndof"]], "neighbors (pycwb.types.network_pixel.pixel attribute)": [[25, "pycwb.types.network_pixel.Pixel.neighbors"]], "net_cc (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.net_cc"]], "net_ecor (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.net_ecor"]], "net_ed (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.net_ed"]], "net_null (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.net_null"]], "net_rho (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.net_rho"]], "net_rho2 (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.net_rho2"]], "noise_rms (pycwb.types.network_pixel.pixeldata attribute)": [[25, "pycwb.types.network_pixel.PixelData.noise_rms"]], "norm (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.norm"]], "norm_cor (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.norm_cor"]], "null (pycwb.types.network_pixel.pixel attribute)": [[25, "pycwb.types.network_pixel.Pixel.null"]], "output() (pycwb.types.network_event.event method)": [[25, "pycwb.types.network_event.Event.output"]], "pwws (pycwb.types.wdm.wdm property)": [[25, "pycwb.types.wdm.WDM.pWWS"]], "pair (pycwb.types.network_cluster.fragmentcluster attribute)": [[25, "pycwb.types.network_cluster.FragmentCluster.pair"]], "path (pycwb.types.job.framefile attribute)": [[25, "pycwb.types.job.FrameFile.path"]], "pattern (pycwb.types.network.network property)": [[25, "pycwb.types.network.Network.pattern"]], "phi (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.phi"]], "phi (pycwb.types.network_pixel.pixel attribute)": [[25, "pycwb.types.network_pixel.Pixel.phi"]], "pixel_count() (pycwb.types.network_cluster.fragmentcluster method)": [[25, "pycwb.types.network_cluster.FragmentCluster.pixel_count"]], "pixels (pycwb.types.network_cluster.cluster attribute)": [[25, "pycwb.types.network_cluster.Cluster.pixels"]], "polarisation (pycwb.types.network_pixel.pixel attribute)": [[25, "pycwb.types.network_pixel.Pixel.polarisation"]], "precision (pycwb.types.wdm.wdm attribute)": [[25, "pycwb.types.wdm.WDM.precision"]], "precision (pycwb.types.wdm_xtalk.wdmxtalkcatalog property)": [[25, "pycwb.types.wdm_xtalk.WDMXTalkCatalog.precision"]], "psi (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.psi"]], "pycwb.types": [[25, "module-pycwb.types"]], "pycwb.types.data_quality_file": [[25, "module-pycwb.types.data_quality_file"]], "pycwb.types.detector": [[25, "module-pycwb.types.detector"]], "pycwb.types.job": [[25, "module-pycwb.types.job"]], "pycwb.types.network": [[25, "module-pycwb.types.network"]], "pycwb.types.network_cluster": [[25, "module-pycwb.types.network_cluster"]], "pycwb.types.network_event": [[25, "module-pycwb.types.network_event"]], "pycwb.types.network_pixel": [[25, "module-pycwb.types.network_pixel"]], "pycwb.types.sparse_series": [[25, "module-pycwb.types.sparse_series"]], "pycwb.types.time_frequency_series": [[25, "module-pycwb.types.time_frequency_series"]], "pycwb.types.wdm": [[25, "module-pycwb.types.wdm"]], "pycwb.types.wdm_xtalk": [[25, "module-pycwb.types.wdm_xtalk"]], "rank (pycwb.types.network_pixel.pixeldata attribute)": [[25, "pycwb.types.network_pixel.PixelData.rank"]], "rate (pycwb.types.network_cluster.fragmentcluster attribute)": [[25, "pycwb.types.network_cluster.FragmentCluster.rate"]], "rate (pycwb.types.network_pixel.pixel attribute)": [[25, "pycwb.types.network_pixel.Pixel.rate"]], "release() (pycwb.types.wdm.wdm method)": [[25, "pycwb.types.wdm.WDM.release"]], "remove_rejected() (pycwb.types.network_cluster.fragmentcluster method)": [[25, "pycwb.types.network_cluster.FragmentCluster.remove_rejected"]], "resize() (pycwb.types.sparse_series.sparsetimefrequencyseries method)": [[25, "pycwb.types.sparse_series.SparseTimeFrequencySeries.resize"]], "restore_skymap() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.restore_skymap"]], "run (pycwb.types.network_cluster.fragmentcluster attribute)": [[25, "pycwb.types.network_cluster.FragmentCluster.run"]], "sample_rate (pycwb.types.time_frequency_series.timefrequencyseries property)": [[25, "pycwb.types.time_frequency_series.TimeFrequencySeries.sample_rate"]], "seg_id (pycwb.types.job.slag attribute)": [[25, "pycwb.types.job.SLag.seg_id"]], "set_delay_index() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.set_delay_index"]], "set_halo() (pycwb.types.sparse_series.sparsetimefrequencyseries method)": [[25, "pycwb.types.sparse_series.SparseTimeFrequencySeries.set_halo"]], "set_map() (pycwb.types.sparse_series.sparsetimefrequencyseries method)": [[25, "pycwb.types.sparse_series.SparseTimeFrequencySeries.set_map"]], "set_map_00() (pycwb.types.wdm.wdm method)": [[25, "pycwb.types.wdm.WDM.set_map_00"]], "set_map_90() (pycwb.types.wdm.wdm method)": [[25, "pycwb.types.wdm.WDM.set_map_90"]], "set_sky_mask() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.set_sky_mask"]], "set_sparse_table() (pycwb.types.sparse_series.sparsetimefrequencyseries method)": [[25, "pycwb.types.sparse_series.SparseTimeFrequencySeries.set_sparse_table"]], "set_td_filter() (pycwb.types.wdm.wdm method)": [[25, "pycwb.types.wdm.WDM.set_td_filter"]], "set_time_shift() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.set_time_shift"]], "set_veto() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.set_veto"]], "shift (pycwb.types.data_quality_file.dqfile attribute)": [[25, "pycwb.types.data_quality_file.DQFile.shift"]], "shift (pycwb.types.network_cluster.fragmentcluster attribute)": [[25, "pycwb.types.network_cluster.FragmentCluster.shift"]], "size_at_zero_layer (pycwb.types.wdm.wdm property)": [[25, "pycwb.types.wdm.WDM.size_at_zero_layer"]], "sky_area (pycwb.types.network_cluster.cluster attribute)": [[25, "pycwb.types.network_cluster.Cluster.sky_area"]], "sky_cc (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.sky_cc"]], "sky_chi2 (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.sky_chi2"]], "sky_index (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.sky_index"]], "sky_pixel_index (pycwb.types.network_cluster.cluster attribute)": [[25, "pycwb.types.network_cluster.Cluster.sky_pixel_index"]], "sky_pixel_map (pycwb.types.network_cluster.cluster attribute)": [[25, "pycwb.types.network_cluster.Cluster.sky_pixel_map"]], "sky_size (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.sky_size"]], "sky_stat (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.sky_stat"]], "sky_time_delay (pycwb.types.network_cluster.cluster attribute)": [[25, "pycwb.types.network_cluster.Cluster.sky_time_delay"]], "slag_id (pycwb.types.job.slag attribute)": [[25, "pycwb.types.job.SLag.slag_id"]], "sparse_index (pycwb.types.sparse_series.sparsetimefrequencyseries property)": [[25, "pycwb.types.sparse_series.SparseTimeFrequencySeries.sparse_index"]], "sparse_lookup (pycwb.types.sparse_series.sparsetimefrequencyseries property)": [[25, "pycwb.types.sparse_series.SparseTimeFrequencySeries.sparse_lookup"]], "sparse_map_00 (pycwb.types.sparse_series.sparsetimefrequencyseries property)": [[25, "pycwb.types.sparse_series.SparseTimeFrequencySeries.sparse_map_00"]], "sparse_map_90 (pycwb.types.sparse_series.sparsetimefrequencyseries property)": [[25, "pycwb.types.sparse_series.SparseTimeFrequencySeries.sparse_map_90"]], "start (pycwb.types.network_cluster.fragmentcluster attribute)": [[25, "pycwb.types.network_cluster.FragmentCluster.start"]], "start (pycwb.types.time_frequency_series.timefrequencyseries property)": [[25, "pycwb.types.time_frequency_series.TimeFrequencySeries.start"]], "start_time (pycwb.types.job.framefile attribute)": [[25, "pycwb.types.job.FrameFile.start_time"]], "start_time (pycwb.types.job.wavesegment attribute)": [[25, "pycwb.types.job.WaveSegment.start_time"]], "stop (pycwb.types.network_cluster.fragmentcluster attribute)": [[25, "pycwb.types.network_cluster.FragmentCluster.stop"]], "stop (pycwb.types.time_frequency_series.timefrequencyseries property)": [[25, "pycwb.types.time_frequency_series.TimeFrequencySeries.stop"]], "sub_net (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.sub_net"]], "sub_net2 (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.sub_net2"]], "sub_net_cut() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.sub_net_cut"]], "subnet_threshold (pycwb.types.network_cluster.fragmentcluster attribute)": [[25, "pycwb.types.network_cluster.FragmentCluster.subnet_threshold"]], "summary() (pycwb.types.network_event.event method)": [[25, "pycwb.types.network_event.Event.summary"]], "t2w() (pycwb.types.wdm.wdm method)": [[25, "pycwb.types.wdm.WDM.t2w"]], "tag (pycwb.types.wdm_xtalk.wdmxtalkcatalog property)": [[25, "pycwb.types.wdm_xtalk.WDMXTalkCatalog.tag"]], "td_amp (pycwb.types.network_pixel.pixel attribute)": [[25, "pycwb.types.network_pixel.Pixel.td_amp"]], "theta (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.theta"]], "theta (pycwb.types.network_pixel.pixel attribute)": [[25, "pycwb.types.network_pixel.Pixel.theta"]], "threshold() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.threshold"]], "time (pycwb.types.network_pixel.pixel attribute)": [[25, "pycwb.types.network_pixel.Pixel.time"]], "time_delay_filter_size (pycwb.types.wdm.wdm property)": [[25, "pycwb.types.wdm.WDM.time_delay_filter_size"]], "time_in_seconds (pycwb.types.network_pixel.pixel property)": [[25, "pycwb.types.network_pixel.Pixel.time_in_seconds"]], "tmrgr (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.tmrgr"]], "tmrgrerr (pycwb.types.network_cluster.clustermeta attribute)": [[25, "pycwb.types.network_cluster.ClusterMeta.tmrgrerr"]], "to_dict() (pycwb.types.job.wavesegment method)": [[25, "pycwb.types.job.WaveSegment.to_dict"]], "to_dict() (pycwb.types.network_cluster.cluster method)": [[25, "pycwb.types.network_cluster.Cluster.to_dict"]], "to_dict() (pycwb.types.network_pixel.pixel method)": [[25, "pycwb.types.network_pixel.Pixel.to_dict"]], "to_dict() (pycwb.types.network_pixel.pixeldata method)": [[25, "pycwb.types.network_pixel.PixelData.to_dict"]], "to_type_wdm() (pycwb.types.wdm.wdm method)": [[25, "pycwb.types.wdm.WDM.to_type_WDM"]], "update_sky_map() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.update_sky_map"]], "update_sky_mask() (pycwb.types.network.network method)": [[25, "pycwb.types.network.Network.update_sky_mask"]], "update_sparse_table() (pycwb.types.sparse_series.sparsetimefrequencyseries method)": [[25, "pycwb.types.sparse_series.SparseTimeFrequencySeries.update_sparse_table"]], "w_90 (pycwb.types.network_pixel.pixeldata attribute)": [[25, "pycwb.types.network_pixel.PixelData.w_90"]], "w_rate (pycwb.types.time_frequency_series.timefrequencyseries attribute)": [[25, "pycwb.types.time_frequency_series.TimeFrequencySeries.w_rate"]], "wave (pycwb.types.network_pixel.pixeldata attribute)": [[25, "pycwb.types.network_pixel.PixelData.wave"]], "wavelet (pycwb.types.time_frequency_series.timefrequencyseries property)": [[25, "pycwb.types.time_frequency_series.TimeFrequencySeries.wavelet"]], "wavelet (pycwb.types.wdm.wdm attribute)": [[25, "pycwb.types.wdm.WDM.wavelet"]], "whiten_mode (pycwb.types.time_frequency_series.timefrequencyseries attribute)": [[25, "pycwb.types.time_frequency_series.TimeFrequencySeries.whiten_mode"]], "align_images() (in module pycwb.utils.image)": [[26, "pycwb.utils.image.align_images"]], "cartesian_to_spherical() (in module pycwb.utils.network)": [[26, "pycwb.utils.network.cartesian_to_spherical"]], "check_and_load_wavelet() (in module pycwb.utils.check_root)": [[26, "pycwb.utils.check_ROOT.check_and_load_wavelet"]], "import_helper() (in module pycwb.utils.module)": [[26, "pycwb.utils.module.import_helper"]], "load_yaml() (in module pycwb.utils.yaml_helper)": [[26, "pycwb.utils.yaml_helper.load_yaml"]], "max_delay() (in module pycwb.utils.network)": [[26, "pycwb.utils.network.max_delay"]], "merge_images() (in module pycwb.utils.image)": [[26, "pycwb.utils.image.merge_images"]], "pycwb.utils": [[26, "module-pycwb.utils"]], "pycwb.utils.check_root": [[26, "module-pycwb.utils.check_ROOT"]], "pycwb.utils.image": [[26, "module-pycwb.utils.image"]], "pycwb.utils.module": [[26, "module-pycwb.utils.module"]], "pycwb.utils.network": [[26, "module-pycwb.utils.network"]], "pycwb.utils.yaml_helper": [[26, "module-pycwb.utils.yaml_helper"]], "resize_image() (in module pycwb.utils.image)": [[26, "pycwb.utils.image.resize_image"]], "resize_resolution() (in module pycwb.utils.image)": [[26, "pycwb.utils.image.resize_resolution"]], "set_default() (in module pycwb.utils.yaml_helper)": [[26, "pycwb.utils.yaml_helper.set_default"]], "spherical_to_cartesian() (in module pycwb.utils.network)": [[26, "pycwb.utils.network.spherical_to_cartesian"]]}})